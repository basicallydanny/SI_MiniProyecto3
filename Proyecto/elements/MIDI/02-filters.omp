; OM File Header - Saved 2024/09/22 15:55:10
; (7.03 :patc (om-make-point 230 26) (om-make-point 55 50) (om-make-point 877 548) "No documentation " 183 0 nil "2024/09/22 15:55:10")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "02-filters" (quote ((let ((box (om-load-boxcall (quote lispfun) "EVT-TO-STRING" (quote evt-to-string) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil))) (om-make-point 197 311) nil nil "l" nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "MAPCAR" (quote mapcar) (quote ((om-load-inputfun (quote input-funbox) "FUNCTION" "FUNCTION" nil) (om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 254 355) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHORD-SEQ" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 1000)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 142 113) (om-make-point 147 96) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6600 7000 6500 4200 3500 5500 4900 3900 5700) (6700 5800) (4600 6500 6100) (7200 3700 4200 4900 5500) (4200 3500 5500 4900 4600 4200) (7000 3700 4200 5500 4900) (4200 3500 5900 5300 3800 4200 3900 6500) (6800) (3700 4200 5300 5900 6900 7400) (4200 3500 5900 5300 7400 4500 4200 6900) (6100) (3700 4200 5900 5300 6200) (6400) (4200 3500 5500 4900 3900 6900 4200 5700 6500) (8400 6300 4900 5800 8300 7700 5500 8900) (4900 7700 5500 8400 8900 6100 6500) (6700 6500 3700 4200 4900 5500) (7200 4200 6800) (3400 4200 3500 5500 4900) (7000) (6500 3700 4200 5500 4900) (6900 4200 6800) (6500 6900 6400 4200 5900 5300 3800) (3700 4200 5300 5900 4500) (4200 3500 5900 5300 4500 4200 3800) (4200 3500 5900 5300 4000 4500) (4200 3500 5500 4900 3900 5700 4200) (6700 5800 6600 7000 6500) (6500 3700 4200 4900 5500 4600 6100) (4200 3500 5500 4900 3400 7200 4200) (7000 3700 4200 5500 4900) (8600 8100 4200 3500 5900 5300 3800 6500 2700 4200) (6800) (8100 8600 7400 7700 7100 3700 4200 5300 5900 6900 6900) (4200 4500) (6900 8600 8100 7400 7700 6900 7100 4200 3500 5900 5300 5000) (8600 7700 8100 7100 6900 7400 7000 4500) (7300 3700 4200 5900 5300 3800) (4200 7400) (7200 7400 6900 4200 3500 5500 5000 4000) (3700 4200 5000 5500 6900 4000 7000) (7000 7000 6900 7000 8200) (4200 7200 6700 6900) (6300 8200 7500 4200 3500 5500 4900 3300) (7500 8200 7000 7300 6700 3700 4200 4900 5500 6100 6300) (4200 3500 5900 5300 3800 6200 4200) (8800 5300 8700 8100 5900 9300) (4200 5300 5900 5300 8100 5900 8800 9300) (4200 3500 5900 5300 4200 3800) (4500) (4200 5900 5300 3800) (4200 3500 5500 4900 3900 5700 4200 3800) (5800 6100 6500 7000 3900) (6500 6100) (7200 3700 4200 4900 5500) (4200 3500 5500 4900 4200) (7000 7700 8200 4900 5800 3400) (7000 3700 4200 5500 4900) (6500 6900 7400 5000 4600 3500 5900 5300 3800 4900 4200 6500) (6800) (3700 4200 5300 5900 6900) (4200 3500 5900 5300 4500 4200) (7300 7400 8100 8600 5300 6200) (4200 3500 5900 5300 7400) (7600) (4200 3500 5500 4900 5800 3900 5300 7400 3800 4200 5700) (6700 6600 7000 6500) (6500 6100) (3700 4200 4900 5500 7300 4600) (7200) (4200 3500 5500 4900 4600 4200) (3700 4200 5500 4900 7000) (6500) (6800 4200 5900 5300 3800 4200 3900) (8800 6900 5300 8700 8100 5900 9300) (3700 4200 5300 5900 4000 5300 8100 5900 8800 9300) (4200 3500 5900 5300 4100 4200) (4200 5900 5300 4500 3700) (4600 3500 5500 4900 3900 4200 5700) (7900 6100 3900 7200 5800) (7300) (3700 4200 4900 5500 6100) (6500) (4200 3500 5500 4900 3400 4200 7200) (7000 4200 3500 5500 4900) (4200 3500 5900 5300 3800 6500 2700 4200) (8800 6800 5300 8700 8100 5900 9300) (3700 4200 5300 5900 6900 5300 8100 5900 8800 9300) (4200 3500 5900 5300 4500 4200) (7300) (3700 4200 5900 5300 7400) (7600) (6900 4200 3500 5500 5000 4000 2600 4200 7700) (7900 7900 5000 4000 7500) (7600) (3700 4200 5000 5500 4600 7000 7400 4000) (6900 7000) (6700 6900 4200 6900 7000) (6300 7300 4200 3500 5500 4900 3300) (6100 3700 4200 4900 5500 4500) (7000 8200) (4200 5900 5300 3800 4200 6200) (3700 4200 5300 5900) (4200 5900 5300 3300 7400 4200) (8600) (3700 4200 3800 5900 5300 3800 7400) (5100 5500 4800 3300 2600 4200) (7200) (5100 3700 4200 4800 5500 3100 8100 3800 2100) (7500) (5100 5500 4800 2900 5100 3800) (7200 6700 8100 6900 6300) (5100 3700 4200 5500 4800 2700 3800) (5100 3900 6700) (6600 5100 6000 5400 3800) (5100 3700 4200 5400 6000 4000 7500 6500 7500) (6900 6600) (5100 6000 5400 7500 4100 7400 7200 5100 6900) (7700) (7700 5100 4200 6000 5400 4200 7500 7200) (5100 5800 5300 4300 6900 6900 5100) (7000) (5100 3700 4200 5300 5800 4500 6700 7400 4300) (5100 5800 5300 7400 4600 5100 3800 6700) (6900) (6600 5100 3700 4200 5800 5300 5000) (5100 5800 5300 4300 6700 6700 5100) (8200 5300 4300 7800) (7900) (5100 3700 4200 5300 5800 5000) (3600 5100 5800 5200 3600 5100 3800) (6900 5100 3700 4200 5200 5800 4200 8400 7600 7000 6700 3600) (5500 5800 4300 5100 5800 5300 4300 7000 5100) (6500) (5100 3700 4200 5300 5800 5500) (6700 5100 5800 5300 4900 5100 3800) (6500 5100 3700 4200 5800 5300 4600) (6400 5100 5800 5200 3600 5100 3800) (8200 6400 4800 7500) (7600) (5100 3700 4200 5200 5800 3400 7300 2400) (5100 5800 5200 3300 7200 5100 3800) (7500) (7000 5100 4200 5800 5200 3100 7200) (7300) (6500 7200 4100 5100 5700 5000 4100 7500 6800 4200 5100) (7700 6900 6200) (7400 5100 3700 4200 5000 5700 4800 6500) (4500 5100 5700 5000 7200 5100 3800) (7200 6700 7700 8400 5000 6000) (6500 4100 5100 3700 4200 5700 5000) (3500 5500 5000 4000 5000 6900 5100 3800) (4600 7400 7600) (5100 4200 5000 5500 3400 4600 7600 7400 3800 2800) (4500 5100 3800 5500 4900 3300 5100 3800) (6100 5100 5500) (5100 4200 4900 5500 3900 3300 3800 3500) (3800) (4900 4200 3800 3500 5500 4900 3900 5100 3800 5700) (7900 6100 3900 7200 5800) (6500 6100 7300) (3700 4200 4900 5500 7200) (4200 3500 5500 4900 4200) (3400) (7000 3700 4200 5500 4900) (4200 3500 5900 5300 3800 6500 4200) (6800 6500 6900 6400) (3700 4200 5300 5900 6900 4500) (4200 3500 5900 5300 4500 4200) (3700 4200 5900 5300 6700) (7300) (4200 3500 5500 4900 3900 4200 2600 7900 5700) (7600 5800) (8200 6500 7700 6100) (7500 7200 7700 3700 4200 4900 5500) (4200 7700) (7300 6700 8200 6500 4200 3500 5500 4900 4600) (3700 4200 5500 4900 7000) (6500) (4200 3500 5900 5300 3800 4200) (6900 6800) (3700 4200 5300 5900 7700 8100) (8000 7600) (4200 3500 5900 5300 4500 4200 7700 8100) (8000 7600) (4200 5900 5300 3700 8100 7700) (4200 3500 5500 4900 3900 5700 3800 4200 7700 8100) (5800 6100 5100 5500 3900) (3700 4200 4900 5500 6100) (6500) (4200 3500 5500 4900 7200 4200) (3400) (7000 4200 3500 5500 4900) (6500 5300 4200 3500 5900 5300 3800 6500 4200) (6800 5700 5900 3800) (3700 4200 5300 5900 6900 7200) (7300) (4200 3500 5900 5300 4500 7000 4200) (6900 7100 8600 7400 8100 7700) (3700 4200 5900 5300 6700) (6500) (4000 4200 3500 5500 5000 4000 6100 4200) (6900) (3700 4200 5000 5500 8200 7400 6700 7000) (7000 6900) (4200 3500 5500 4900 3300 4200 6700) (6300) (6700 6100 3700 4200 4900 5500 4500) (6700 7300) (8600 8100 4200 3500 5900 5300 3800 6100 6200 4200) (8100 8600 7400 7700 7100 3700 4200 5300 5900 6900))) :lonset (quote (651 757 881 1038 1276 1686 1919 2038 2265 2559 2689 2884 3035 3214 3324 3530 3632 3851 3957 4078 4281 4503 4605 4862 5162 5486 5811 5927 6157 6462 6876 7111 7232 7470 7743 7849 8065 8173 8381 8497 8727 8838 8976 9146 9470 9705 9811 10049 10349 10462 10673 10997 11100 11238 11416 11654 11759 12065 12303 12422 12665 12946 13065 13305 13427 13589 13711 13835 13943 14070 14249 14559 14770 14897 15000 15238 15543 15868 16189 16300 16405 16519 16627 16832 17254 17486 17595 17832 18138 18257 18451 18603 18781 18897 19000 19113 19262 19370 19524 19762 19865 20084 20497 20732 20843 21046 21381 21500 21708 21819 22032 22141 22357 22659 22768 23022 23138 23316 23459 23676 23976 24119 24305 24613 24754 25038 25276 25384 25486 25686 25924 26249 26573 26684 26984 27219 27632 27868 27978 28081 28195 28516 28662 28876 28986 29165 29268 29513 29811 29930 30227 30459 30562 30778 31108 31211 31432 31632 31751 31862 31973 32168 32405 32516 32822 33054 33170 33403 33708 34030 34170 34349 34465 34595 34768 34973 35092 35324 35546 35654 35762 35976 36095 36300 36408 36624 36938 37046 37278 37386 37595 37705 38011 38243 38351 38576 38749 38892 38995 39246 39389 39540 39649 39870 39973 40184 40313 40549 40689 40840 41254 42168)) :ldur (quote ((95 176 59 67 67 97 164 672 135) (133 232) (1041 94 111) (665 67 67 54 76) (68 68 324 324 562 67) (181 68 68 71 63) (67 67 97 165 686 68 60 157) (173) (68 68 54 76 781 111) (68 68 325 325 203 649 68 79) (162) (67 67 70 62 127) (179) (68 68 97 165 668 67 67 157 162) (114 162 152 221 56 100 157 171) (71 70 76 60 103 133 148) (138 178 68 68 54 76) (251 68 92) (570 67 67 324 324) (133) (195 68 68 70 62) (1024 67 19) (95 176 59 68 98 165 414) (67 67 54 75 1041) (68 68 324 324 146 68 141) (68 68 71 63 325 114) (67 67 97 165 635 170 67) (133 243 95 176 59) (168 68 68 54 76 1041 113) (68 68 325 325 581 491 68) (211 67 67 70 62) (54 54 68 68 97 165 543 122 29 67) (173) (62 68 73 62 73 68 68 54 76 73 825) (68 149) (192 149 149 146 157 146 157 67 67 324 324 151) (52 46 63 54 54 51 121 132) (141 68 68 70 62 305) (67 170) (162 170 121 68 68 98 165 649) (67 67 54 75 89 73 87) (83 205 89 165 113) (67 100 124 92) (143 54 54 68 68 97 165 649) (62 68 73 62 73 68 68 54 76 219 73) (67 67 97 164 667 1148 68) (113 151 57 100 156 170) (67 54 76 70 71 76 59 102) (68 68 325 325 67 67) (570) (67 70 62 68) (67 67 97 165 667 143 68 68) (203 79 70 102 73) (138 127) (684 68 68 54 76) (67 67 324 324 68) (490 81 492 441 421 571) (192 67 67 70 62) (78 70 103 73 68 68 97 165 673 43 67 156) (197) (67 67 54 75 794) (67 67 324 324 562 68) (217 489 81 492 441 421) (68 68 70 62 100) (173) (68 68 98 165 200 673 43 127 59 67 146) (133 95 176 59) (100 130) (67 67 54 75 122 1041) (552) (68 68 324 324 562 67) (68 68 71 63 157) (192) (49 67 97 165 378 68 60) (113 1094 151 57 100 156 170) (68 68 54 76 354 70 70 75 59 103) (68 68 325 325 379 68) (67 70 62 324 67) (68 68 97 165 635 67 154) (1152 1262 1198 86 297) (1076) (68 68 54 76 135) (165) (67 67 324 324 581 67 498) (229 68 68 70 62) (68 68 98 165 635 135 30 68) (114 184 151 57 100 157 170) (67 67 54 75 789 70 70 76 59 103) (68 68 324 324 581 67) (162) (68 68 71 62 127) (178) (149 67 67 97 165 170 30 68 162) (160 613 613 616 87) (524) (68 68 54 76 324 159 163 109) (103 187) (102 138 67 81 76) (149 170 68 68 98 165 649) (209 67 67 54 75 73) (165 113) (68 97 165 635 68 1224) (68 68 54 76) (67 324 324 581 111 68) (198) (67 67 67 70 62 67 81) (68 98 165 181 29 68) (424) (67 67 67 54 75 318 83 68 70) (122) (67 324 324 346 68 68) (51 70 78 267 70) (68 68 68 70 62 289 67) (68 87 190) (133 67 97 164 378) (67 67 67 54 76 349 119 81 110) (111 100) (68 325 325 203 341 181 71 68 79) (219) (318 67 67 70 62 264 57 129) (67 97 165 119 68 98 67) (165) (68 68 68 54 76 324 338 111 141) (68 325 325 203 322 68 68 79) (157) (138 67 67 67 70 62 324) (68 97 165 384 765 67 67) (614 614 616 86) (525) (68 68 68 55 76 325) (119 67 97 165 200 68 68) (140 68 68 68 54 76 324 59 45 73 83 70) (62 57 45 68 98 165 349 695 68) (46) (67 67 67 54 75 362) (187 68 324 324 333 67 67) (170 68 68 68 71 63 325) (246 67 97 165 181 67 67) (1151 1262 1197 87) (1076) (68 68 68 54 76 319 119 70) (68 325 325 346 365 68 68) (219) (141 67 67 70 62 289 116) (163) (70 103 73 68 97 165 324 106 65 86 67) (238 168 78) (262 68 68 68 54 76 327 346) (327 67 324 324 76 67 67) (489 238 81 492 441 421) (122 319 68 68 68 70 62) (68 98 165 292 43 900 68 68) (156 184 181) (67 67 54 75 324 49 43 38 67 87) (46 68 68 97 165 173 68 68) (46 63 57) (68 68 54 76 325 94 68 68) (68) (67 67 67 67 97 164 667 67 67 133) (1151 1262 1197 87 197) (125 95 1076) (68 68 54 76 754) (68 68 325 325 68) (570) (192 67 67 70 62) (67 67 97 165 635 97 68) (184 94 175 60) (68 68 54 76 803 1040) (67 67 324 324 581 68) (67 67 70 62 113) (179) (68 68 98 165 687 67 29 135 146) (106 200) (83 100 162 129) (138 573 121 67 67 54 75) (68 146) (51 70 78 71 67 67 324 324 648) (68 68 70 62 160) (186) (68 68 98 165 673 68) (1114 30) (67 67 54 75 102 113) (102 97) (68 68 324 324 562 68 97 113) (189 216) (68 71 63 68 114 98) (67 67 97 165 667 149 60 67 92 100) (229 46 62 56 46) (68 68 54 76 92) (106) (68 68 325 325 378 67) (571) (159 67 67 70 62) (81 81 68 68 97 165 687 135 68) (138 56 46 68) (68 68 54 76 733 129) (129) (67 67 324 324 648 135 67) (151 46 44 33 59 43) (68 68 70 62 116) (192) (119 68 68 98 165 649 111 68) (159) (67 67 54 75 60 46 73 89) (59 232) (68 68 97 165 649 67 94) (146) (49 213 68 68 54 76 24) (100 146) (54 54 67 67 97 165 619 79 1322 68) (62 67 72 62 73 68 68 54 76 73))) :lvel (quote ((68 63 45 70 60 64 55 82 90) (54 103) (53 102 110) (113 70 90 41 49) (80 60 56 56 85 40) (119 80 90 60 51) (80 60 64 55 76 50 82 93) (118) (70 90 41 49 106 82) (80 60 56 56 68 61 40 49) (92) (85 90 60 51 89) (82) (70 60 64 55 89 47 50 93 96) (46 75 52 110 36 35 32 45) (60 55 59 74 55 112 96) (76 82 70 80 41 49) (110 40 108) (82 80 60 56 56) (95) (113 80 80 60 51) (112 50 116) (68 63 45 70 64 55 69) (80 70 41 49 53) (80 60 56 56 68 40 69) (80 60 60 51 77 78) (80 60 64 55 78 96 50) (54 103 68 63 45) (105 70 90 41 49 53 103) (80 60 56 56 82 105 40) (114 85 90 60 51) (32 52 70 60 64 55 72 77 60 50) (115) (39 38 33 36 31 70 90 41 49 39 111) (40 82) (62 23 40 19 19 30 23 80 60 56 56 74) (26 47 45 41 51 51 91 100) (87 80 90 60 51 89) (50 94) (107 67 112 80 60 64 55 82) (70 90 41 49 34 50 105) (106 65 85 63 67) (40 99 86 77) (123 32 52 80 60 64 55 82) (39 38 33 36 31 85 90 41 49 127 39) (80 60 64 55 89 115 50) (46 52 36 35 32 45) (90 41 49 60 55 59 74 55) (70 60 56 56 60 40) (82) (80 60 51 50) (70 60 64 55 89 86 60 60) (112 64 68 67 59) (80 99) (110 70 80 41 49) (80 60 56 56 40) (67 63 75 54 49 82) (110 80 80 60 51) (64 68 67 59 54 60 64 55 82 30 50 85) (118) (80 70 41 49 110) (80 60 56 56 85 40) (97 67 63 75 54 49) (80 60 60 51 85) (99) (70 60 64 55 106 82 30 92 82 50 82) (54 68 63 45) (94 114) (70 80 41 49 94 53) (113) (80 60 56 56 85 40) (80 80 60 51 119) (97) (113 80 64 55 78 50 82) (46 110 52 36 35 32 45) (70 90 41 49 80 60 55 59 74 55) (80 60 56 56 75 40) (90 60 51 76 90) (54 60 64 55 78 50 84) (51 37 36 69 112) (44) (80 70 41 49 116) (90) (80 60 56 56 82 40 102) (111 80 60 60 51) (80 60 64 55 78 89 60 50) (46 118 52 36 35 32 45) (70 90 41 49 115 60 55 59 74 55) (80 60 56 56 82 40) (92) (85 90 60 51 89) (82) (110 70 60 64 55 81 60 50 96) (86 51 48 58 69) (44) (70 80 41 49 73 107 80 71) (96 83) (85 74 40 60 98) (120 67 80 60 64 55 70) (117 80 80 41 49 50) (63 67) (80 64 55 78 50 108) (70 90 41 49) (80 56 56 82 89 50) (84) (85 90 55 60 51 30 76) (70 64 55 70 60 50) (119) (90 60 90 41 49 62 76 60 77) (26) (80 56 56 68 70 40) (67 58 63 117 56) (90 70 100 60 51 64 50) (70 79 106) (106 80 64 55 71) (90 70 70 41 49 68 118 84 82) (80 66) (90 56 56 68 75 117 102 70 49) (104) (97 90 100 60 51 68 67 115) (70 64 55 85 47 100 70) (121) (90 60 90 41 49 64 108 82 73) (80 56 56 68 75 70 40 49) (115) (120 90 70 100 60 51 67) (80 64 55 71 117 47 70) (51 48 58 69) (44) (90 70 80 41 49 70) (56 80 64 55 69 70 40) (109 90 70 100 41 49 62 64 72 75 82 81) (48 51 38 70 64 55 76 127 70) (51) (90 70 100 41 49 59) (104 80 56 56 71 50 40) (119 90 70 100 60 51 77) (115 80 64 55 70 50 40) (51 37 36 69) (44) (90 70 70 41 49 62 121 77) (90 56 56 68 115 70 40) (116) (119 90 100 60 51 64 41) (78) (68 67 59 80 64 55 69 49 98 79 70) (80 104 64) (95 90 70 80 41 49 68 116) (63 80 56 56 31 60 40) (67 104 63 75 54 49) (95 81 100 80 100 60 51) (90 64 55 78 30 118 70 60) (74 90 87) (90 80 41 49 78 42 43 43 70 55) (38 80 80 64 55 77 80 60) (51 48 51) (90 100 41 49 63 70 50 80) (40) (40 70 50 60 64 55 89 80 60 96) (51 37 36 69 117) (95 104 44) (80 80 41 49 110) (80 60 56 56 50) (82) (111 80 90 60 51) (70 60 64 55 78 92 50) (124 68 63 45) (70 80 41 49 110 53) (80 60 56 56 82 40) (80 80 60 51 45) (65) (70 60 64 55 76 50 60 89 93) (76 116) (76 99 84 103) (76 108 26 70 90 41 49) (40 101) (67 58 63 56 80 60 56 56 61) (80 90 60 51 120) (90) (80 60 64 55 82 50) (106 116) (70 90 41 49 76 64) (50 44) (80 60 56 56 85 40 83 64) (71 50) (90 60 51 90 66 85) (70 60 64 55 89 104 82 50 80 61) (115 51 48 51 38) (80 70 41 49 102) (99) (80 60 56 56 110 40) (82) (123 80 60 60 51) (49 40 70 60 64 55 76 78 50) (116 50 46 45) (80 90 41 49 120 113) (96) (70 60 56 56 61 108 40) (88 54 75 73 73 72) (78 90 60 51 83) (79) (56 80 60 64 55 82 67 50) (117) (70 90 41 49 64 72 75 115) (91 91) (80 60 64 55 82 40 79) (127) (55 127 85 90 41 49 43) (43 52) (32 52 80 60 64 55 72 55 114 50) (39 38 33 36 31 70 90 41 49 39))) :loffset (quote ((92 92 87 63 63 63 63 63 0) (40 0) (89 87 0) (43 0 0 0 0) (86 86 86 86 86 0) (14 0 0 0 0) (92 92 92 92 92 5 5 0) (0) (70 70 70 70 3 0) (100 100 100 100 100 100 11 0) (0) (100 100 100 100 0) (0) (94 94 94 94 94 27 5 2 0) (84 44 8 6 6 3 3 0) (48 43 43 40 32 13 0) (38 36 0 0 0 0) (25 19 0) (19 0 0 0 0) (0) (5 0 0 0 0) (19 16 0) (30 30 25 0 0 0 0) (68 68 68 68 0) (92 92 92 92 92 0 0) (92 92 92 92 92 0) (92 92 92 92 92 24 0) (59 35 5 5 0) (94 70 70 70 70 2 0) (89 89 89 89 89 6 0) (10 0 0 0 0) (94 92 89 89 89 89 89 8 3 0) (0) (79 73 68 65 65 54 54 54 54 54 0) (19 0) (32 29 29 24 21 19 13 0 0 0 0 0) (51 40 40 38 38 38 11 0) (54 0 0 0 0 0) (30 0) (68 30 17 0 0 0 0 0) (95 95 95 95 22 8 0) (76 16 0 0 0) (81 78 65 0) (35 5 3 0 0 0 0 0) (25 19 14 11 11 0 0 0 0 0 0) (90 90 90 90 90 17 0) (84 8 5 3 3 0) (70 70 70 16 10 10 8 0) (94 94 94 94 0 0) (0) (95 95 95 0) (95 95 95 95 95 3 0 0) (16 5 3 3 0) (86 0) (41 0 0 0 0) (87 87 87 87 0) (19 14 14 14 9 0) (11 0 0 0 0) (100 97 97 94 86 86 86 86 86 43 0 0) (0) (49 49 49 49 0) (92 92 92 92 92 0) (21 11 5 5 5 0) (57 57 57 57 0) (0) (97 97 97 97 97 97 54 27 11 6 0) (59 5 5 0) (100 0) (68 68 68 68 3 0) (0) (86 86 86 86 86 0) (100 100 100 100 0) (0) (89 87 87 87 87 0 0) (84 19 8 5 3 3 0) (70 70 70 70 70 16 11 11 8 0) (89 89 89 89 89 0) (89 89 89 89 0) (92 92 92 92 92 3 0) (16 16 13 3 0) (0) (86 86 86 86 0) (0) (98 98 98 98 98 6 0) (3 0 0 0 0) (92 92 92 92 92 22 6 0) (83 10 8 5 2 2 0) (71 71 71 71 17 17 11 11 9 0) (89 89 89 89 89 0) (0) (100 100 100 100 0) (0) (97 95 95 95 95 95 8 5 0) (62 14 14 11 0) (0) (87 87 87 87 87 6 0 0) (3 0) (98 76 68 41 0) (65 30 0 0 0 0 0) (97 87 87 87 87 0) (0 0) (89 89 89 89 2 0) (0 0 0 0) (90 90 90 90 3 0) (0) (100 100 100 100 100 11 0) (89 89 89 89 3 0) (0) (87 87 87 87 87 87 14 0 0) (0) (87 87 87 87 0 0) (8 8 8 5 0) (86 86 86 86 86 86 0) (22 22 0) (45 0 0 0 0) (70 70 70 70 70 70 21 5 0) (94 0) (100 100 100 100 100 30 16 11 0) (0) (92 65 65 65 65 65 5 0) (89 89 89 89 21 10 0) (0) (84 84 84 84 84 84 30 14 0) (100 100 100 100 100 14 14 0) (0) (21 0 0 0 0 0 0) (86 86 86 86 35 19 0) (13 13 11 0) (0) (0 0 0 0 0 0) (89 87 87 87 87 0 0) (97 86 86 86 86 86 86 19 19 10 0 0) (100 97 95 86 86 86 86 8 0) (0) (0 0 0 0 0 0) (97 89 89 89 89 0 0) (6 0 0 0 0 0 0) (94 89 89 89 89 0 0) (14 14 11 0) (0) (86 86 86 86 86 86 24 0) (89 89 89 89 14 0 0) (0) (75 54 54 54 54 54 0) (0) (100 100 97 89 89 89 89 32 21 3 0) (35 29 0) (98 65 65 65 65 65 65 0) (94 92 92 92 48 0 0) (11 8 5 5 5 0) (8 5 0 0 0 0 0) (92 92 92 92 49 17 0 0) (6 0 0) (98 98 98 98 98 38 38 30 6 0) (100 92 92 92 92 92 0 0) (13 2 0) (92 92 92 92 92 9 0 0) (0) (98 98 98 98 98 98 98 6 6 0) (22 22 19 8 0) (78 8 0) (5 5 5 5 0) (92 92 92 92 0) (0) (10 0 0 0 0) (92 92 92 92 92 14 0) (16 6 6 0) (67 67 67 67 24 0) (87 87 87 87 87 0) (89 89 89 89 0) (0) (94 94 94 94 94 8 8 5 0) (67 0) (100 94 5 0) (48 35 24 0 0 0 0) (32 0) (30 30 30 21 0 0 0 0 0) (92 92 92 92 0) (0) (86 86 86 86 86 0) (19 0) (89 89 89 89 0 0) (0 0) (89 89 89 89 89 0 0 0) (11 0) (89 89 89 0 0 0) (100 100 100 100 100 16 13 11 0 0) (22 16 5 3 0) (84 84 84 84 0) (0) (91 91 91 91 13 0) (0) (19 0 0 0 0) (95 95 92 92 92 92 92 22 0) (19 6 3 0) (83 83 83 83 37 0) (0) (92 92 92 92 92 27 0) (78 13 10 10 0 0) (62 62 62 62 0) (0) (95 92 92 92 92 92 30 0) (0) (87 87 87 87 19 19 11 0) (100 0) (97 97 97 97 97 8 0) (0) (83 62 56 56 56 56 0) (73 0) (95 92 90 90 90 90 90 11 6 0) (24 19 14 11 11 0 0 0 0 0))) :lchan (quote ((3 3 3 10 10 7 7 2 4) (3 4) (3 4 4) (4 10 10 7 7) (10 10 7 7 2 10) (4 10 10 7 7) (10 10 7 7 2 10 2 4) (4) (10 10 7 7 4 3) (10 10 7 7 3 2 10 3) (5) (10 10 7 7 5) (5) (10 10 7 7 2 3 10 4 5) (3 5 3 4 3 3 3 3) (3 3 3 3 3 4 5) (5 4 10 10 7 7) (4 10 5) (2 10 10 7 7) (4) (4 10 10 7 7) (4 10 4) (3 3 3 10 7 7 2) (10 10 7 7 3) (10 10 7 7 2 10 2) (10 10 7 7 2 2) (10 10 7 7 2 4 10) (3 4 3 3 3) (4 10 10 7 7 3 4) (10 10 7 7 2 4 10) (4 10 10 7 7) (3 3 10 10 7 7 2 4 2 10) (4) (3 3 3 3 3 10 10 7 7 3 4) (10 2) (5 3 3 3 3 3 3 10 10 7 7 2) (3 3 3 3 3 3 5 2) (5 10 10 7 7 2) (10 5) (5 3 4 10 10 7 7 2) (10 10 7 7 5 3 4) (4 5 4 3 3) (10 5 4 4) (4 3 3 10 10 7 7 2) (3 3 3 3 3 10 10 7 7 4 3) (10 10 7 7 2 4 10) (3 3 3 3 3 3) (10 7 7 3 3 3 3 3) (10 10 7 7 10 10) (2) (10 7 7 10) (10 10 7 7 2 4 10 10) (4 3 3 3 3) (4 4) (4 10 10 7 7) (10 10 7 7 10) (3 3 3 3 3 2) (4 10 10 7 7) (3 3 3 3 10 10 7 7 2 3 10 4) (4) (10 10 7 7 4) (10 10 7 7 2 10) (5 3 3 3 3 3) (10 10 7 7 5) (5) (10 10 7 7 4 2 3 5 2 10 4) (3 3 3 3) (4 4) (10 10 7 7 5 3) (4) (10 10 7 7 2 10) (10 10 7 7 4) (4) (4 10 7 7 2 10 2) (3 4 3 3 3 3 3) (10 10 7 7 2 3 3 3 3 3) (10 10 7 7 2 10) (10 7 7 2 10) (10 10 7 7 2 10 4) (3 3 3 3 4) (3) (10 10 7 7 4) (4) (10 10 7 7 2 10 4) (4 10 10 7 7) (10 10 7 7 2 4 2 10) (3 4 3 3 3 3 3) (10 10 7 7 4 3 3 3 3 3) (10 10 7 7 2 10) (5) (10 10 7 7 5) (5) (4 10 10 7 7 2 2 10 5) (5 3 3 3 3) (3) (10 10 7 7 2 4 5 2) (4 5) (4 5 10 4 4) (4 3 10 10 7 7 2) (4 10 10 7 7 3) (3 3) (10 7 7 2 10 4) (10 10 7 7) (10 7 7 2 3 10) (3) (10 10 10 7 7 10 3) (10 7 7 2 2 10) (4) (10 10 10 7 7 2 3 10 2) (3) (10 7 7 2 10 10) (3 3 3 4 3) (10 10 10 7 7 2 10) (10 2 4) (4 10 7 7 2) (10 10 10 7 7 2 4 5 3) (5 5) (10 7 7 3 2 4 5 10 3) (5) (5 10 10 7 7 2 5 4) (10 7 7 2 3 4 10) (4) (10 10 10 7 7 2 4 3 2) (10 7 7 3 2 10 10 3) (4) (4 10 10 10 7 7 2) (10 7 7 2 4 3 10) (3 3 3 3) (3) (10 10 10 7 7 2) (3 10 7 7 2 10 10) (4 10 10 10 7 7 2 3 3 3 4 2) (3 3 3 10 7 7 2 4 10) (3) (10 10 10 7 7 2) (4 10 7 7 2 10 10) (4 10 10 10 7 7 2) (4 10 7 7 2 10 10) (3 3 3 3) (3) (10 10 10 7 7 2 4 2) (10 7 7 2 4 10 10) (5) (4 10 10 7 7 2 5) (5) (3 3 3 10 7 7 2 5 4 2 10) (5 4 3) (5 10 10 10 7 7 2 4) (2 10 7 7 5 10 10) (3 4 3 3 3 3) (4 2 10 10 10 7 7) (10 7 7 2 3 4 10 10) (3 3 3) (10 10 7 7 2 3 3 3 10 2) (3 10 10 7 7 2 10 10) (3 3 3) (10 10 7 7 2 2 10 10) (10) (10 10 10 10 7 7 2 10 10 4) (3 3 3 3 4) (4 4 3) (10 10 7 7 4) (10 10 7 7 10) (2) (4 10 10 7 7) (10 10 7 7 2 4 10) (4 3 3 3) (10 10 7 7 4 3) (10 10 7 7 2 10) (10 10 7 7 5) (5) (10 10 7 7 2 10 2 5 4) (5 4) (3 4 5 4) (5 4 3 10 10 7 7) (10 5) (3 3 3 3 10 10 7 7 2) (10 10 7 7 4) (4) (10 10 7 7 2 10) (4 4) (10 10 7 7 3 3) (3 3) (10 10 7 7 2 10 3 3) (3 3) (10 7 7 10 3 3) (10 10 7 7 2 4 2 10 3 3) (4 3 3 3 3) (10 10 7 7 4) (4) (10 10 7 7 4 10) (2) (4 10 10 7 7) (3 3 10 10 7 7 2 4 10) (4 3 3 3) (10 10 7 7 4 5) (5) (10 10 7 7 2 5 10) (5 3 3 3 3 3) (10 10 7 7 5) (5) (3 10 10 7 7 2 5 10) (4) (10 10 7 7 3 3 3 4) (4 4) (10 10 7 7 2 10 4) (4) (3 4 10 10 7 7 3) (3 3) (3 3 10 10 7 7 2 3 4 10) (3 3 3 3 3 10 10 7 7 3))) :legato 0)))) (load-port-info newobj (quote ((0 0 0 0 0 0 0 0 0) (0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0) (0) (0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0) (0 0 0 0 0) (0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0) (0 0 0 0 0) (0) (0 0 0 0 0) (0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0) (0 0 0 0 0 0 0 0 0 0 0) (0 0) (0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0) (0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0) (0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0) (0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0) (0 0) (0 0 0 0 0 0) (0) (0 0 0 0 0 0) (0 0 0 0 0) (0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0) (0 0 0 0 0) (0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0) (0 0 0 0 0) (0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0) (0 0 0 0 0 0 0 0) (0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0) (0 0 0 0 0 0 0 0 0) (0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0) (0 0 0 0 0 0 0 0 0) (0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0) (0 0 0 0 0 0 0) (0) (0 0 0 0 0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0 0 0 0) (0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0) (0 0 0 0 0 0 0 0 0) (0 0) (0 0 0 0) (0 0 0 0 0 0 0) (0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0) (0 0 0 0 0 0) (0 0) (0 0 0 0 0 0) (0 0) (0 0 0 0 0 0 0 0) (0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0) (0 0 0 0 0 0) (0) (0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0) (0 0 0 0 0 0 0 0) (0) (0 0 0 0 0 0 0 0) (0 0) (0 0 0 0 0 0 0) (0) (0 0 0 0 0 0 0) (0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote ((nil (om-load-patch-abs1 "patch" (quote nil) (quote nil) 7.03 nil "" (om-make-point 200 200) (om-make-point 400 500)))))) (set-name newobj nil) (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (measure onset scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list nil nil nil (quote t) (quote :normal) 1 0 (om-make-point 400 20) (om-make-point 1027 260) 0 1000 nil 1 (quote :midi-player) nil nil (om-make-point 0 -14) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 24 2)) nil nil nil nil (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 126 71) (quote "<-- Test function can also be a \"lambda\" patch with a free input for MidiEvent ....") "" (om-make-point 590 181) nil (om-make-color 13/85 4/15 5/17) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "TEXTFILE" (quote textfile) (quote ((om-load-inputfun (quote input-funbox) "object or object list" "self" nil) (om-load-inputfun (quote input-funbox) "text to put in the file" "exp-list" nil) (om-load-inputfunmenu1 (quote input-funmenu) "append or supersede mode" "ed-mode" "supersede" (list (list "append" "append") (list "supersede" "supersede"))) (om-load-inputfunmenu1 (quote input-funmenu) "contents eval mode" "eval-mode" "text" (list (list "text" "text") (list "data list" "data") (list "list" "list"))))) (om-make-point 244 406) (om-make-point 85 68) (load-buffer-textfile (quote ("MIDIEVENT:: @743 note chan 3 track 1 port 0: (66 68 95)" "MIDIEVENT:: @743 note chan 3 track 1 port 0: (70 63 176)" "MIDIEVENT:: @738 note chan 3 track 1 port 0: (65 45 59)" "MIDIEVENT:: @714 note chan 2 track 1 port 0: (39 82 672)" "MIDIEVENT:: @797 note chan 3 track 1 port 0: (67 54 133)" "MIDIEVENT:: @970 note chan 3 track 1 port 0: (46 53 1041)" "MIDIEVENT:: @1362 note chan 2 track 1 port 0: (46 85 562)" "MIDIEVENT:: @2011 note chan 2 track 1 port 0: (38 76 686)" "MIDIEVENT:: @1924 note chan 2 track 1 port 0: (39 82 60)" "MIDIEVENT:: @2265 note chan 3 track 1 port 0: (74 82 111)" "MIDIEVENT:: @2659 note chan 3 track 1 port 0: (74 68 203)" "MIDIEVENT:: @2659 note chan 2 track 1 port 0: (45 61 649)" "MIDIEVENT:: @2559 note chan 3 track 1 port 0: (69 49 79)" "MIDIEVENT:: @3308 note chan 2 track 1 port 0: (39 89 668)" "MIDIEVENT:: @3241 note chan 3 track 1 port 0: (69 47 67)" "MIDIEVENT:: @3408 note chan 3 track 1 port 0: (84 46 114)" "MIDIEVENT:: @3332 note chan 3 track 1 port 0: (49 52 152)" "MIDIEVENT:: @3330 note chan 3 track 1 port 0: (83 36 56)" "MIDIEVENT:: @3327 note chan 3 track 1 port 0: (77 35 100)" "MIDIEVENT:: @3327 note chan 3 track 1 port 0: (55 32 157)" "MIDIEVENT:: @3324 note chan 3 track 1 port 0: (89 45 171)" "MIDIEVENT:: @3578 note chan 3 track 1 port 0: (49 60 71)" "MIDIEVENT:: @3573 note chan 3 track 1 port 0: (77 55 70)" "MIDIEVENT:: @3573 note chan 3 track 1 port 0: (55 59 76)" "MIDIEVENT:: @3570 note chan 3 track 1 port 0: (84 74 60)" "MIDIEVENT:: @3562 note chan 3 track 1 port 0: (89 55 103)" "MIDIEVENT:: @3976 note chan 2 track 1 port 0: (34 82 570)" "MIDIEVENT:: @4635 note chan 3 track 1 port 0: (65 68 95)" "MIDIEVENT:: @4635 note chan 3 track 1 port 0: (69 63 176)" "MIDIEVENT:: @4630 note chan 3 track 1 port 0: (64 45 59)" "MIDIEVENT:: @4605 note chan 2 track 1 port 0: (38 69 414)" "MIDIEVENT:: @4862 note chan 3 track 1 port 0: (45 53 1041)" "MIDIEVENT:: @5254 note chan 2 track 1 port 0: (45 68 146)" "MIDIEVENT:: @5162 note chan 2 track 1 port 0: (38 69 141)" "MIDIEVENT:: @5578 note chan 2 track 1 port 0: (40 77 325)" "MIDIEVENT:: @5486 note chan 2 track 1 port 0: (45 78 114)" "MIDIEVENT:: @5903 note chan 2 track 1 port 0: (39 78 635)" "MIDIEVENT:: @5986 note chan 3 track 1 port 0: (67 54 133)" "MIDIEVENT:: @5932 note chan 3 track 1 port 0: (66 68 95)" "MIDIEVENT:: @5932 note chan 3 track 1 port 0: (70 63 176)" "MIDIEVENT:: @5927 note chan 3 track 1 port 0: (65 45 59)" "MIDIEVENT:: @6159 note chan 3 track 1 port 0: (46 53 1041)" "MIDIEVENT:: @6551 note chan 2 track 1 port 0: (34 82 581)" "MIDIEVENT:: @7205 note chan 3 track 1 port 0: (86 32 54)" "MIDIEVENT:: @7203 note chan 3 track 1 port 0: (81 52 54)" "MIDIEVENT:: @7200 note chan 2 track 1 port 0: (38 72 543)" "MIDIEVENT:: @7114 note chan 2 track 1 port 0: (27 60 29)" "MIDIEVENT:: @7549 note chan 3 track 1 port 0: (81 39 62)" "MIDIEVENT:: @7543 note chan 3 track 1 port 0: (86 38 68)" "MIDIEVENT:: @7538 note chan 3 track 1 port 0: (74 33 73)" "MIDIEVENT:: @7535 note chan 3 track 1 port 0: (77 36 62)" "MIDIEVENT:: @7535 note chan 3 track 1 port 0: (71 31 73)" "MIDIEVENT:: @7524 note chan 3 track 1 port 0: (69 39 73)" "MIDIEVENT:: @7743 note chan 2 track 1 port 0: (45 82 149)" "MIDIEVENT:: @7878 note chan 3 track 1 port 0: (86 23 149)" "MIDIEVENT:: @7878 note chan 3 track 1 port 0: (81 40 149)" "MIDIEVENT:: @7873 note chan 3 track 1 port 0: (74 19 146)" "MIDIEVENT:: @7870 note chan 3 track 1 port 0: (77 19 157)" "MIDIEVENT:: @7868 note chan 3 track 1 port 0: (69 30 146)" "MIDIEVENT:: @7862 note chan 3 track 1 port 0: (71 23 157)" "MIDIEVENT:: @7849 note chan 2 track 1 port 0: (50 74 151)" "MIDIEVENT:: @8116 note chan 3 track 1 port 0: (86 26 52)" "MIDIEVENT:: @8105 note chan 3 track 1 port 0: (77 47 46)" "MIDIEVENT:: @8105 note chan 3 track 1 port 0: (81 45 63)" "MIDIEVENT:: @8103 note chan 3 track 1 port 0: (71 41 54)" "MIDIEVENT:: @8103 note chan 3 track 1 port 0: (69 51 54)" "MIDIEVENT:: @8103 note chan 3 track 1 port 0: (74 51 51)" "MIDIEVENT:: @8065 note chan 2 track 1 port 0: (45 100 132)" "MIDIEVENT:: @8173 note chan 2 track 1 port 0: (38 89 305)" "MIDIEVENT:: @8527 note chan 3 track 1 port 0: (74 67 170)" "MIDIEVENT:: @8497 note chan 2 track 1 port 0: (40 82 649)" "MIDIEVENT:: @8735 note chan 3 track 1 port 0: (40 50 73)" "MIDIEVENT:: @8838 note chan 3 track 1 port 0: (70 63 165)" "MIDIEVENT:: @8838 note chan 3 track 1 port 0: (82 67 113)" "MIDIEVENT:: @9151 note chan 3 track 1 port 0: (82 32 54)" "MIDIEVENT:: @9149 note chan 3 track 1 port 0: (75 52 54)" "MIDIEVENT:: @9146 note chan 2 track 1 port 0: (33 82 649)" "MIDIEVENT:: @9495 note chan 3 track 1 port 0: (75 39 62)" "MIDIEVENT:: @9489 note chan 3 track 1 port 0: (82 38 68)" "MIDIEVENT:: @9484 note chan 3 track 1 port 0: (70 33 73)" "MIDIEVENT:: @9481 note chan 3 track 1 port 0: (73 36 62)" "MIDIEVENT:: @9481 note chan 3 track 1 port 0: (67 31 73)" "MIDIEVENT:: @9470 note chan 3 track 1 port 0: (63 39 73)" "MIDIEVENT:: @9795 note chan 2 track 1 port 0: (38 89 667)" "MIDIEVENT:: @9895 note chan 3 track 1 port 0: (88 46 113)" "MIDIEVENT:: @9819 note chan 3 track 1 port 0: (53 52 151)" "MIDIEVENT:: @9816 note chan 3 track 1 port 0: (87 36 57)" "MIDIEVENT:: @9814 note chan 3 track 1 port 0: (81 35 100)" "MIDIEVENT:: @9814 note chan 3 track 1 port 0: (59 32 156)" "MIDIEVENT:: @9811 note chan 3 track 1 port 0: (93 45 170)" "MIDIEVENT:: @10065 note chan 3 track 1 port 0: (53 60 70)" "MIDIEVENT:: @10059 note chan 3 track 1 port 0: (81 55 71)" "MIDIEVENT:: @10059 note chan 3 track 1 port 0: (59 59 76)" "MIDIEVENT:: @10057 note chan 3 track 1 port 0: (88 74 59)" "MIDIEVENT:: @10049 note chan 3 track 1 port 0: (93 55 102)" "MIDIEVENT:: @10462 note chan 2 track 1 port 0: (45 82 570)" "MIDIEVENT:: @11092 note chan 2 track 1 port 0: (39 89 667)" "MIDIEVENT:: @11105 note chan 3 track 1 port 0: (61 64 79)" "MIDIEVENT:: @11103 note chan 3 track 1 port 0: (65 68 70)" "MIDIEVENT:: @11103 note chan 3 track 1 port 0: (70 67 102)" "MIDIEVENT:: @11100 note chan 3 track 1 port 0: (39 59 73)" "MIDIEVENT:: @11778 note chan 3 track 1 port 0: (70 67 490)" "MIDIEVENT:: @11773 note chan 3 track 1 port 0: (77 63 81)" "MIDIEVENT:: @11773 note chan 3 track 1 port 0: (82 75 492)" "MIDIEVENT:: @11773 note chan 3 track 1 port 0: (49 54 441)" "MIDIEVENT:: @11768 note chan 3 track 1 port 0: (58 49 421)" "MIDIEVENT:: @11759 note chan 2 track 1 port 0: (34 82 571)" "MIDIEVENT:: @12403 note chan 3 track 1 port 0: (65 64 78)" "MIDIEVENT:: @12400 note chan 3 track 1 port 0: (69 68 70)" "MIDIEVENT:: @12400 note chan 3 track 1 port 0: (74 67 103)" "MIDIEVENT:: @12397 note chan 3 track 1 port 0: (50 59 73)" "MIDIEVENT:: @12389 note chan 2 track 1 port 0: (38 82 673)" "MIDIEVENT:: @12346 note chan 3 track 1 port 0: (49 30 43)" "MIDIEVENT:: @13038 note chan 2 track 1 port 0: (45 85 562)" "MIDIEVENT:: @13076 note chan 3 track 1 port 0: (74 67 489)" "MIDIEVENT:: @13070 note chan 3 track 1 port 0: (81 63 81)" "MIDIEVENT:: @13070 note chan 3 track 1 port 0: (86 75 492)" "MIDIEVENT:: @13070 note chan 3 track 1 port 0: (53 54 441)" "MIDIEVENT:: @13065 note chan 3 track 1 port 0: (62 49 421)" "MIDIEVENT:: @13686 note chan 2 track 1 port 0: (39 82 673)" "MIDIEVENT:: @13643 note chan 3 track 1 port 0: (53 30 43)" "MIDIEVENT:: @13600 note chan 2 track 1 port 0: (38 82 59)" "MIDIEVENT:: @13770 note chan 3 track 1 port 0: (67 54 133)" "MIDIEVENT:: @13716 note chan 3 track 1 port 0: (66 68 95)" "MIDIEVENT:: @13716 note chan 3 track 1 port 0: (70 63 176)" "MIDIEVENT:: @13711 note chan 3 track 1 port 0: (65 45 59)" "MIDIEVENT:: @13943 note chan 3 track 1 port 0: (46 53 1041)" "MIDIEVENT:: @14335 note chan 2 track 1 port 0: (46 85 562)" "MIDIEVENT:: @14984 note chan 2 track 1 port 0: (38 78 378)" "MIDIEVENT:: @14897 note chan 2 track 1 port 0: (39 82 60)" "MIDIEVENT:: @15084 note chan 3 track 1 port 0: (88 46 113)" "MIDIEVENT:: @15008 note chan 3 track 1 port 0: (53 52 151)" "MIDIEVENT:: @15005 note chan 3 track 1 port 0: (87 36 57)" "MIDIEVENT:: @15003 note chan 3 track 1 port 0: (81 35 100)" "MIDIEVENT:: @15003 note chan 3 track 1 port 0: (59 32 156)" "MIDIEVENT:: @15000 note chan 3 track 1 port 0: (93 45 170)" "MIDIEVENT:: @15308 note chan 2 track 1 port 0: (40 80 354)" "MIDIEVENT:: @15254 note chan 3 track 1 port 0: (53 60 70)" "MIDIEVENT:: @15249 note chan 3 track 1 port 0: (81 55 70)" "MIDIEVENT:: @15249 note chan 3 track 1 port 0: (59 59 75)" "MIDIEVENT:: @15246 note chan 3 track 1 port 0: (88 74 59)" "MIDIEVENT:: @15238 note chan 3 track 1 port 0: (93 55 103)" "MIDIEVENT:: @15632 note chan 2 track 1 port 0: (41 75 379)" "MIDIEVENT:: @15957 note chan 2 track 1 port 0: (45 76 324)" "MIDIEVENT:: @16281 note chan 2 track 1 port 0: (39 78 635)" "MIDIEVENT:: @16316 note chan 3 track 1 port 0: (79 51 1152)" "MIDIEVENT:: @16316 note chan 3 track 1 port 0: (61 37 1262)" "MIDIEVENT:: @16313 note chan 3 track 1 port 0: (39 36 1198)" "MIDIEVENT:: @16303 note chan 3 track 1 port 0: (72 69 86)" "MIDIEVENT:: @16405 note chan 3 track 1 port 0: (73 44 1076)" "MIDIEVENT:: @16930 note chan 2 track 1 port 0: (34 82 581)" "MIDIEVENT:: @17578 note chan 2 track 1 port 0: (38 78 635)" "MIDIEVENT:: @17492 note chan 2 track 1 port 0: (27 60 30)" "MIDIEVENT:: @17678 note chan 3 track 1 port 0: (88 46 114)" "MIDIEVENT:: @17603 note chan 3 track 1 port 0: (53 52 151)" "MIDIEVENT:: @17600 note chan 3 track 1 port 0: (87 36 57)" "MIDIEVENT:: @17597 note chan 3 track 1 port 0: (81 35 100)" "MIDIEVENT:: @17597 note chan 3 track 1 port 0: (59 32 157)" "MIDIEVENT:: @17595 note chan 3 track 1 port 0: (93 45 170)" "MIDIEVENT:: @17849 note chan 3 track 1 port 0: (53 60 70)" "MIDIEVENT:: @17843 note chan 3 track 1 port 0: (81 55 70)" "MIDIEVENT:: @17843 note chan 3 track 1 port 0: (59 59 76)" "MIDIEVENT:: @17841 note chan 3 track 1 port 0: (88 74 59)" "MIDIEVENT:: @17832 note chan 3 track 1 port 0: (93 55 103)" "MIDIEVENT:: @18227 note chan 2 track 1 port 0: (45 82 581)" "MIDIEVENT:: @18876 note chan 2 track 1 port 0: (40 81 170)" "MIDIEVENT:: @18789 note chan 2 track 1 port 0: (26 60 30)" "MIDIEVENT:: @18911 note chan 3 track 1 port 0: (79 51 613)" "MIDIEVENT:: @18911 note chan 3 track 1 port 0: (50 48 613)" "MIDIEVENT:: @18908 note chan 3 track 1 port 0: (40 58 616)" "MIDIEVENT:: @18897 note chan 3 track 1 port 0: (75 69 87)" "MIDIEVENT:: @19000 note chan 3 track 1 port 0: (76 44 524)" "MIDIEVENT:: @19200 note chan 2 track 1 port 0: (46 73 324)" "MIDIEVENT:: @19113 note chan 2 track 1 port 0: (40 71 109)" "MIDIEVENT:: @19554 note chan 3 track 1 port 0: (73 67 170)" "MIDIEVENT:: @19524 note chan 2 track 1 port 0: (33 70 649)" "MIDIEVENT:: @19762 note chan 3 track 1 port 0: (45 50 73)" "MIDIEVENT:: @19865 note chan 3 track 1 port 0: (70 63 165)" "MIDIEVENT:: @19865 note chan 3 track 1 port 0: (82 67 113)" "MIDIEVENT:: @20173 note chan 2 track 1 port 0: (38 78 635)" "MIDIEVENT:: @20822 note chan 2 track 1 port 0: (33 82 581)" "MIDIEVENT:: @20735 note chan 3 track 1 port 0: (74 89 111)" "MIDIEVENT:: @20843 note chan 3 track 1 port 0: (86 84 198)" "MIDIEVENT:: @21046 note chan 3 track 1 port 0: (74 76 81)" "MIDIEVENT:: @21470 note chan 2 track 1 port 0: (33 70 181)" "MIDIEVENT:: @21384 note chan 2 track 1 port 0: (26 60 29)" "MIDIEVENT:: @21795 note chan 2 track 1 port 0: (31 62 318)" "MIDIEVENT:: @21722 note chan 3 track 1 port 0: (81 76 83)" "MIDIEVENT:: @21708 note chan 2 track 1 port 0: (21 77 70)" "MIDIEVENT:: @21819 note chan 3 track 1 port 0: (75 26 122)" "MIDIEVENT:: @22119 note chan 2 track 1 port 0: (29 68 346)" "MIDIEVENT:: @22149 note chan 3 track 1 port 0: (72 67 51)" "MIDIEVENT:: @22149 note chan 3 track 1 port 0: (67 58 70)" "MIDIEVENT:: @22149 note chan 3 track 1 port 0: (81 63 78)" "MIDIEVENT:: @22141 note chan 3 track 1 port 0: (63 56 70)" "MIDIEVENT:: @22443 note chan 2 track 1 port 0: (27 64 289)" "MIDIEVENT:: @22681 note chan 2 track 1 port 0: (39 79 87)" "MIDIEVENT:: @22768 note chan 2 track 1 port 0: (38 71 378)" "MIDIEVENT:: @23092 note chan 2 track 1 port 0: (40 68 349)" "MIDIEVENT:: @23022 note chan 3 track 1 port 0: (75 82 110)" "MIDIEVENT:: @23416 note chan 3 track 1 port 0: (75 68 203)" "MIDIEVENT:: @23416 note chan 2 track 1 port 0: (41 75 341)" "MIDIEVENT:: @23316 note chan 3 track 1 port 0: (69 49 79)" "MIDIEVENT:: @23741 note chan 2 track 1 port 0: (42 68 264)" "MIDIEVENT:: @24065 note chan 2 track 1 port 0: (43 85 119)" "MIDIEVENT:: @23997 note chan 3 track 1 port 0: (69 47 68)" "MIDIEVENT:: @24389 note chan 2 track 1 port 0: (45 64 324)" "MIDIEVENT:: @24319 note chan 3 track 1 port 0: (74 82 111)" "MIDIEVENT:: @24305 note chan 2 track 1 port 0: (43 73 141)" "MIDIEVENT:: @24713 note chan 3 track 1 port 0: (74 68 203)" "MIDIEVENT:: @24713 note chan 2 track 1 port 0: (46 75 322)" "MIDIEVENT:: @24613 note chan 3 track 1 port 0: (67 49 79)" "MIDIEVENT:: @25038 note chan 2 track 1 port 0: (50 67 324)" "MIDIEVENT:: @25362 note chan 2 track 1 port 0: (43 71 384)" "MIDIEVENT:: @25295 note chan 3 track 1 port 0: (67 47 67)" "MIDIEVENT:: @25397 note chan 3 track 1 port 0: (82 51 614)" "MIDIEVENT:: @25397 note chan 3 track 1 port 0: (53 48 614)" "MIDIEVENT:: @25395 note chan 3 track 1 port 0: (43 58 616)" "MIDIEVENT:: @25384 note chan 3 track 1 port 0: (78 69 86)" "MIDIEVENT:: @25486 note chan 3 track 1 port 0: (79 44 525)" "MIDIEVENT:: @25686 note chan 2 track 1 port 0: (50 70 325)" "MIDIEVENT:: @26013 note chan 3 track 1 port 0: (36 56 119)" "MIDIEVENT:: @26011 note chan 2 track 1 port 0: (36 69 200)" "MIDIEVENT:: @26335 note chan 2 track 1 port 0: (42 62 324)" "MIDIEVENT:: @26268 note chan 3 track 1 port 0: (84 64 59)" "MIDIEVENT:: @26268 note chan 3 track 1 port 0: (76 72 45)" "MIDIEVENT:: @26259 note chan 3 track 1 port 0: (70 75 73)" "MIDIEVENT:: @26249 note chan 2 track 1 port 0: (36 81 70)" "MIDIEVENT:: @26673 note chan 3 track 1 port 0: (55 48 62)" "MIDIEVENT:: @26670 note chan 3 track 1 port 0: (58 51 57)" "MIDIEVENT:: @26668 note chan 3 track 1 port 0: (43 38 45)" "MIDIEVENT:: @26659 note chan 2 track 1 port 0: (43 76 349)" "MIDIEVENT:: @26684 note chan 3 track 1 port 0: (65 51 46)" "MIDIEVENT:: @26984 note chan 2 track 1 port 0: (55 59 362)" "MIDIEVENT:: @27308 note chan 2 track 1 port 0: (49 71 333)" "MIDIEVENT:: @27632 note chan 2 track 1 port 0: (46 77 325)" "MIDIEVENT:: @27957 note chan 2 track 1 port 0: (36 70 181)" "MIDIEVENT:: @27992 note chan 3 track 1 port 0: (82 51 1151)" "MIDIEVENT:: @27992 note chan 3 track 1 port 0: (64 37 1262)" "MIDIEVENT:: @27989 note chan 3 track 1 port 0: (48 36 1197)" "MIDIEVENT:: @27978 note chan 3 track 1 port 0: (75 69 87)" "MIDIEVENT:: @28081 note chan 3 track 1 port 0: (76 44 1076)" "MIDIEVENT:: @28281 note chan 2 track 1 port 0: (34 62 319)" "MIDIEVENT:: @28195 note chan 2 track 1 port 0: (24 77 70)" "MIDIEVENT:: @28605 note chan 2 track 1 port 0: (33 68 346)" "MIDIEVENT:: @28930 note chan 2 track 1 port 0: (31 64 289)" "MIDIEVENT:: @29265 note chan 3 track 1 port 0: (65 68 70)" "MIDIEVENT:: @29265 note chan 3 track 1 port 0: (72 67 103)" "MIDIEVENT:: @29262 note chan 3 track 1 port 0: (41 59 73)" "MIDIEVENT:: @29254 note chan 2 track 1 port 0: (41 69 324)" "MIDIEVENT:: @29168 note chan 2 track 1 port 0: (42 79 86)" "MIDIEVENT:: @29268 note chan 3 track 1 port 0: (62 64 78)" "MIDIEVENT:: @29578 note chan 2 track 1 port 0: (48 68 327)" "MIDIEVENT:: @29905 note chan 2 track 1 port 0: (45 63 327)" "MIDIEVENT:: @29941 note chan 3 track 1 port 0: (72 67 489)" "MIDIEVENT:: @29935 note chan 3 track 1 port 0: (77 63 81)" "MIDIEVENT:: @29935 note chan 3 track 1 port 0: (84 75 492)" "MIDIEVENT:: @29935 note chan 3 track 1 port 0: (50 54 441)" "MIDIEVENT:: @29930 note chan 3 track 1 port 0: (60 49 421)" "MIDIEVENT:: @30232 note chan 2 track 1 port 0: (41 81 319)" "MIDIEVENT:: @30551 note chan 2 track 1 port 0: (40 78 292)" "MIDIEVENT:: @30508 note chan 3 track 1 port 0: (50 30 43)" "MIDIEVENT:: @30568 note chan 3 track 1 port 0: (46 74 156)" "MIDIEVENT:: @30562 note chan 3 track 1 port 0: (74 90 184)" "MIDIEVENT:: @30562 note chan 3 track 1 port 0: (76 87 181)" "MIDIEVENT:: @30876 note chan 2 track 1 port 0: (34 78 324)" "MIDIEVENT:: @30816 note chan 3 track 1 port 0: (46 42 49)" "MIDIEVENT:: @30816 note chan 3 track 1 port 0: (76 43 43)" "MIDIEVENT:: @30808 note chan 3 track 1 port 0: (74 43 38)" "MIDIEVENT:: @30778 note chan 2 track 1 port 0: (28 55 87)" "MIDIEVENT:: @31208 note chan 3 track 1 port 0: (45 38 46)" "MIDIEVENT:: @31200 note chan 2 track 1 port 0: (33 77 173)" "MIDIEVENT:: @31224 note chan 3 track 1 port 0: (61 51 46)" "MIDIEVENT:: @31213 note chan 3 track 1 port 0: (51 48 63)" "MIDIEVENT:: @31211 note chan 3 track 1 port 0: (55 51 57)" "MIDIEVENT:: @31524 note chan 2 track 1 port 0: (39 63 325)" "MIDIEVENT:: @31441 note chan 2 track 1 port 0: (33 70 94)" "MIDIEVENT:: @31849 note chan 2 track 1 port 0: (39 89 667)" "MIDIEVENT:: @31884 note chan 3 track 1 port 0: (79 51 1151)" "MIDIEVENT:: @31884 note chan 3 track 1 port 0: (61 37 1262)" "MIDIEVENT:: @31881 note chan 3 track 1 port 0: (39 36 1197)" "MIDIEVENT:: @31870 note chan 3 track 1 port 0: (72 69 87)" "MIDIEVENT:: @31973 note chan 3 track 1 port 0: (73 44 1076)" "MIDIEVENT:: @32516 note chan 2 track 1 port 0: (34 82 570)" "MIDIEVENT:: @33146 note chan 2 track 1 port 0: (38 78 635)" "MIDIEVENT:: @33176 note chan 3 track 1 port 0: (65 68 94)" "MIDIEVENT:: @33176 note chan 3 track 1 port 0: (69 63 175)" "MIDIEVENT:: @33170 note chan 3 track 1 port 0: (64 45 60)" "MIDIEVENT:: @33403 note chan 3 track 1 port 0: (45 53 1040)" "MIDIEVENT:: @33795 note chan 2 track 1 port 0: (45 82 581)" "MIDIEVENT:: @34443 note chan 2 track 1 port 0: (39 76 687)" "MIDIEVENT:: @34357 note chan 2 track 1 port 0: (26 60 29)" "MIDIEVENT:: @34695 note chan 3 track 1 port 0: (82 76 83)" "MIDIEVENT:: @34792 note chan 3 track 1 port 0: (77 26 121)" "MIDIEVENT:: @35122 note chan 3 track 1 port 0: (73 67 51)" "MIDIEVENT:: @35122 note chan 3 track 1 port 0: (67 58 70)" "MIDIEVENT:: @35122 note chan 3 track 1 port 0: (82 63 78)" "MIDIEVENT:: @35113 note chan 3 track 1 port 0: (65 56 71)" "MIDIEVENT:: @35092 note chan 2 track 1 port 0: (46 61 648)" "MIDIEVENT:: @35740 note chan 2 track 1 port 0: (38 82 673)" "MIDIEVENT:: @35976 note chan 3 track 1 port 0: (77 76 102)" "MIDIEVENT:: @35976 note chan 3 track 1 port 0: (81 64 113)" "MIDIEVENT:: @36095 note chan 3 track 1 port 0: (80 50 102)" "MIDIEVENT:: @36095 note chan 3 track 1 port 0: (76 44 97)" "MIDIEVENT:: @36389 note chan 2 track 1 port 0: (45 85 562)" "MIDIEVENT:: @36300 note chan 3 track 1 port 0: (77 83 97)" "MIDIEVENT:: @36300 note chan 3 track 1 port 0: (81 64 113)" "MIDIEVENT:: @36419 note chan 3 track 1 port 0: (80 71 189)" "MIDIEVENT:: @36408 note chan 3 track 1 port 0: (76 50 216)" "MIDIEVENT:: @36624 note chan 3 track 1 port 0: (81 66 114)" "MIDIEVENT:: @36624 note chan 3 track 1 port 0: (77 85 98)" "MIDIEVENT:: @37038 note chan 2 track 1 port 0: (39 89 667)" "MIDIEVENT:: @36951 note chan 2 track 1 port 0: (38 82 60)" "MIDIEVENT:: @36938 note chan 3 track 1 port 0: (77 80 92)" "MIDIEVENT:: @36938 note chan 3 track 1 port 0: (81 61 100)" "MIDIEVENT:: @37062 note chan 3 track 1 port 0: (61 51 46)" "MIDIEVENT:: @37051 note chan 3 track 1 port 0: (51 48 62)" "MIDIEVENT:: @37049 note chan 3 track 1 port 0: (55 51 56)" "MIDIEVENT:: @37046 note chan 3 track 1 port 0: (39 38 46)" "MIDIEVENT:: @37705 note chan 2 track 1 port 0: (34 82 571)" "MIDIEVENT:: @38338 note chan 3 track 1 port 0: (65 49 81)" "MIDIEVENT:: @38338 note chan 3 track 1 port 0: (53 40 81)" "MIDIEVENT:: @38335 note chan 2 track 1 port 0: (38 76 687)" "MIDIEVENT:: @38357 note chan 3 track 1 port 0: (57 50 56)" "MIDIEVENT:: @38354 note chan 3 track 1 port 0: (59 46 46)" "MIDIEVENT:: @38351 note chan 3 track 1 port 0: (38 45 68)" "MIDIEVENT:: @38984 note chan 2 track 1 port 0: (45 61 648)" "MIDIEVENT:: @39008 note chan 3 track 1 port 0: (71 54 46)" "MIDIEVENT:: @39005 note chan 3 track 1 port 0: (86 75 44)" "MIDIEVENT:: @39005 note chan 3 track 1 port 0: (74 73 33)" "MIDIEVENT:: @38995 note chan 3 track 1 port 0: (81 73 59)" "MIDIEVENT:: @38995 note chan 3 track 1 port 0: (77 72 43)" "MIDIEVENT:: @39635 note chan 3 track 1 port 0: (40 56 119)" "MIDIEVENT:: @39632 note chan 2 track 1 port 0: (40 82 649)" "MIDIEVENT:: @39889 note chan 3 track 1 port 0: (82 64 60)" "MIDIEVENT:: @39889 note chan 3 track 1 port 0: (74 72 46)" "MIDIEVENT:: @39881 note chan 3 track 1 port 0: (67 75 73)" "MIDIEVENT:: @40281 note chan 2 track 1 port 0: (33 82 649)" "MIDIEVENT:: @40632 note chan 3 track 1 port 0: (67 55 49)" "MIDIEVENT:: @40549 note chan 3 track 1 port 0: (45 43 24)" "MIDIEVENT:: @40762 note chan 3 track 1 port 0: (67 43 100)" "MIDIEVENT:: @40689 note chan 3 track 1 port 0: (73 52 146)" "MIDIEVENT:: @40935 note chan 3 track 1 port 0: (86 32 54)" "MIDIEVENT:: @40932 note chan 3 track 1 port 0: (81 52 54)" "MIDIEVENT:: @40930 note chan 2 track 1 port 0: (38 72 619)" "MIDIEVENT:: @40851 note chan 3 track 1 port 0: (61 55 79)" "MIDIEVENT:: @41278 note chan 3 track 1 port 0: (81 39 62)" "MIDIEVENT:: @41273 note chan 3 track 1 port 0: (86 38 67)" "MIDIEVENT:: @41268 note chan 3 track 1 port 0: (74 33 72)" "MIDIEVENT:: @41265 note chan 3 track 1 port 0: (77 36 62)" "MIDIEVENT:: @41265 note chan 3 track 1 port 0: (71 31 73)" "MIDIEVENT:: @41254 note chan 3 track 1 port 0: (69 39 73)" "" "" "")) (quote textfile) "supersede" "text") "x" nil (pairlis (quote (show-stems winpos winsize mode grillestep notechancolor? cmnpref obj-mode palette-mode zoom inport outport deltapict)) (list (quote t) 2621450 18350450 0 1000 nil (list 1 15 2 2 1) 0 0 1 0 0 (om-make-point 0 0))) nil nil nil nil (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote abstraction) "mypatch" (om-load-patch-abs1 "more-complex-test-func" (quote ((let ((box (om-load-boxcall (quote genfun) "TEST-TYPE" (quote test-type) (quote ((om-load-inputfun (quote input-funbox) "a MidiEvent" "SELF" nil) (om-load-inputfunmenu1 (quote input-funmenu) "a MIDI event type" "TYPE" (quote :note) (list (list "Note" (quote :note)) (list "KeyOn " (quote :keyon)) (list "KeyOff" (quote :keyoff)) (list "KeyPress" (quote :keypress)) (list "CtrlChange" (quote :ctrlchange)) (list "ProgChange" (quote :progchange)) (list "ChanPress" (quote :chanpress)) (list "PitchWheel/PitchBend" (quote :pitchbend)) (list "SongPos" (quote :songpos)) (list "SongSel" (quote :songsel)) (list "Clock" (quote :clock)) (list "Start" (quote :start)) (list "Continue" (quote :continue)) (list "Stop" (quote :stop)) (list "Tune" (quote :tune)) (list "ActiveSens" (quote :activesens)) (list "Reset" (quote :reset)) (list "SysEx" (quote :sysex)) (list "Stream" (quote :stream)) (list "Private" (quote :private)) (list "Process" (quote :process)) (list "DProcess" (quote :dprocess)) (list "QFrame" (quote :qframe)) (list "Ctrl14b" (quote :ctrl14b)) (list "NonRegParam" (quote :nonregparam)) (list "RegParam" (quote :regparam)) (list "SeqNum" (quote :seqnum)) (list "Textual" (quote :textual)) (list "Copyright" (quote :copyright)) (list "SeqName" (quote :seqname)) (list "InstrName" (quote :instrname)) (list "Lyric" (quote :lyric)) (list "Marker" (quote :marker)) (list "CuePoint" (quote :cuepoint)) (list "ChanPrefix" (quote :chanprefix)) (list "EndTrack" (quote :endtrack)) (list "Tempo" (quote :tempo)) (list "SMPTEOffset" (quote :smpteoffset)) (list "TimeSign" (quote :timesign)) (list "KeySign" (quote :keysign)) (list "Specific" (quote :specific)) (list "PortPrefix" (quote :portprefix)) (list "RcvAlarm" (quote :rcvalarm)) (list "ApplAlarm" (quote :applalarm)) (list "Reserved" (quote :reserved)) (list "dead" (quote :dead)))))) (om-make-point 189 161) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "TEST-TYPE" (quote test-type) (quote ((om-load-inputfun (quote input-funbox) "a MidiEvent" "SELF" nil) (om-load-inputfunmenu1 (quote input-funmenu) "a MIDI event type" "TYPE" (quote :keyoff) (list (list "Note" (quote :note)) (list "KeyOn " (quote :keyon)) (list "KeyOff" (quote :keyoff)) (list "KeyPress" (quote :keypress)) (list "CtrlChange" (quote :ctrlchange)) (list "ProgChange" (quote :progchange)) (list "ChanPress" (quote :chanpress)) (list "PitchWheel/PitchBend" (quote :pitchbend)) (list "SongPos" (quote :songpos)) (list "SongSel" (quote :songsel)) (list "Clock" (quote :clock)) (list "Start" (quote :start)) (list "Continue" (quote :continue)) (list "Stop" (quote :stop)) (list "Tune" (quote :tune)) (list "ActiveSens" (quote :activesens)) (list "Reset" (quote :reset)) (list "SysEx" (quote :sysex)) (list "Stream" (quote :stream)) (list "Private" (quote :private)) (list "Process" (quote :process)) (list "DProcess" (quote :dprocess)) (list "QFrame" (quote :qframe)) (list "Ctrl14b" (quote :ctrl14b)) (list "NonRegParam" (quote :nonregparam)) (list "RegParam" (quote :regparam)) (list "SeqNum" (quote :seqnum)) (list "Textual" (quote :textual)) (list "Copyright" (quote :copyright)) (list "SeqName" (quote :seqname)) (list "InstrName" (quote :instrname)) (list "Lyric" (quote :lyric)) (list "Marker" (quote :marker)) (list "CuePoint" (quote :cuepoint)) (list "ChanPrefix" (quote :chanprefix)) (list "EndTrack" (quote :endtrack)) (list "Tempo" (quote :tempo)) (list "SMPTEOffset" (quote :smpteoffset)) (list "TimeSign" (quote :timesign)) (list "KeySign" (quote :keysign)) (list "Specific" (quote :specific)) (list "PortPrefix" (quote :portprefix)) (list "RcvAlarm" (quote :rcvalarm)) (list "ApplAlarm" (quote :applalarm)) (list "Reserved" (quote :reserved)) (list "dead" (quote :dead)))))) (om-make-point 130 163) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "TEST-TYPE" (quote test-type) (quote ((om-load-inputfun (quote input-funbox) "a MidiEvent" "SELF" nil) (om-load-inputfunmenu1 (quote input-funmenu) "a MIDI event type" "TYPE" (quote :keyon) (list (list "Note" (quote :note)) (list "KeyOn " (quote :keyon)) (list "KeyOff" (quote :keyoff)) (list "KeyPress" (quote :keypress)) (list "CtrlChange" (quote :ctrlchange)) (list "ProgChange" (quote :progchange)) (list "ChanPress" (quote :chanpress)) (list "PitchWheel/PitchBend" (quote :pitchbend)) (list "SongPos" (quote :songpos)) (list "SongSel" (quote :songsel)) (list "Clock" (quote :clock)) (list "Start" (quote :start)) (list "Continue" (quote :continue)) (list "Stop" (quote :stop)) (list "Tune" (quote :tune)) (list "ActiveSens" (quote :activesens)) (list "Reset" (quote :reset)) (list "SysEx" (quote :sysex)) (list "Stream" (quote :stream)) (list "Private" (quote :private)) (list "Process" (quote :process)) (list "DProcess" (quote :dprocess)) (list "QFrame" (quote :qframe)) (list "Ctrl14b" (quote :ctrl14b)) (list "NonRegParam" (quote :nonregparam)) (list "RegParam" (quote :regparam)) (list "SeqNum" (quote :seqnum)) (list "Textual" (quote :textual)) (list "Copyright" (quote :copyright)) (list "SeqName" (quote :seqname)) (list "InstrName" (quote :instrname)) (list "Lyric" (quote :lyric)) (list "Marker" (quote :marker)) (list "CuePoint" (quote :cuepoint)) (list "ChanPrefix" (quote :chanprefix)) (list "EndTrack" (quote :endtrack)) (list "Tempo" (quote :tempo)) (list "SMPTEOffset" (quote :smpteoffset)) (list "TimeSign" (quote :timesign)) (list "KeySign" (quote :keysign)) (list "Specific" (quote :specific)) (list "PortPrefix" (quote :portprefix)) (list "RcvAlarm" (quote :rcvalarm)) (list "ApplAlarm" (quote :applalarm)) (list "Reserved" (quote :reserved)) (list "dead" (quote :dead)))))) (om-make-point 67 164) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 320 92) (quote "This patch returns TRUE if $- the MidiEvent is type KeyOn OR KeyOff, $AND $- the second field of the event (the velocity, for keyOn/keyOff MidiMessages) is < 65... ") "" (om-make-point 421 158) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OMAND" (quote omand) (quote ((om-load-inputfun (quote input-funbox) "patch" "SELF" nil) (om-load-inputfun (quote input-funbox) "add patch" "REST" nil))) (om-make-point 254 292) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 337 218) (om-make-point 31 28) 65 "65" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OM<" (quote om<) (quote ((om-load-inputfun (quote input-funbox) "a number" "SELF" 0) (om-load-inputfun (quote input-funbox) "a number" "NUM" 1))) (om-make-point 323 249) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "SECOND" (quote second) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 295 189) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OMOR" (quote omor) (quote ((om-load-inputfun (quote input-funbox) "patch" "SELF" nil) (om-load-inputfun (quote input-funbox) "add patch" "REST" nil) (om-load-inputfun (quote input-funbox) "other things" "REST" nil))) (om-make-point 120 239) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote slot) "slots" (quote midievent) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfunmenu1 (quote input-funmenu) "midi event type" "ev-type" (quote keyon) (list (list "Note" (quote (quote note))) (list "KeyOn " (quote (quote keyon))) (list "KeyOff" (quote (quote keyoff))) (list "KeyPress" (quote (quote keypress))) (list "CtrlChange" (quote (quote ctrlchange))) (list "ProgChange" (quote (quote progchange))) (list "ChanPress" (quote (quote chanpress))) (list "PitchWheel/PitchBend" (quote (quote pitchbend))) (list "SongPos" (quote (quote songpos))) (list "SongSel" (quote (quote songsel))) (list "Clock" (quote (quote clock))) (list "Start" (quote (quote start))) (list "Continue" (quote (quote continue))) (list "Stop" (quote (quote stop))) (list "Tune" (quote (quote tune))) (list "ActiveSens" (quote (quote activesens))) (list "Reset" (quote (quote reset))) (list "SysEx" (quote (quote sysex))) (list "Stream" (quote (quote stream))) (list "Private" (quote (quote private))) (list "Process" (quote (quote process))) (list "DProcess" (quote (quote dprocess))) (list "QFrame" (quote (quote qframe))) (list "Ctrl14b" (quote (quote ctrl14b))) (list "NonRegParam" (quote (quote nonregparam))) (list "RegParam" (quote (quote regparam))) (list "SeqNum" (quote (quote seqnum))) (list "Textual" (quote (quote textual))) (list "Copyright" (quote (quote copyright))) (list "SeqName" (quote (quote seqname))) (list "InstrName" (quote (quote instrname))) (list "Lyric" (quote (quote lyric))) (list "Marker" (quote (quote marker))) (list "CuePoint" (quote (quote cuepoint))) (list "ChanPrefix" (quote (quote chanprefix))) (list "EndTrack" (quote (quote endtrack))) (list "Tempo" (quote (quote tempo))) (list "SMPTEOffset" (quote (quote smpteoffset))) (list "TimeSign" (quote (quote timesign))) (list "KeySign" (quote (quote keysign))) (list "Specific" (quote (quote specific))) (list "PortPrefix" (quote (quote portprefix))) (list "RcvAlarm" (quote (quote rcvalarm))) (list "ApplAlarm" (quote (quote applalarm))) (list "Reserved" (quote (quote reserved))) (list "dead" (quote (quote dead))))) (om-load-inputfun (quote input-funbox) "date" "ev-date" 0) (om-load-inputfun (quote input-funbox) "track" "ev-ref" 0) (om-load-inputfun (quote input-funbox) "port" "ev-port" 0) (om-load-inputfun (quote input-funbox) "channel" "ev-chan" 1) (om-load-inputfun (quote input-funbox) "event content" "ev-fields" nil))) (om-make-point 260 122) (om-make-point 90 53) nil nil nil 7))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 136 40) (quote "<-- Output : true or false") "" (om-make-point 313 350) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 136 40) (quote "<-- Input for Midi Event") "" (om-make-point 286 59) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "input" 0 (om-make-point 194 50) "no documentation" "MidiEvent" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output" 0 (om-make-point 242 339) (quote ((om-load-inputfun (quote input-funbox) "out" "out" nil))) "OUTPUT" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((12 0 0 0 nil 0) (12 0 1 0 nil 0) (12 0 2 0 nil 0) (8 0 4 0 nil 0) (6 0 4 1 nil 0) (7 0 6 0 nil 0) (5 0 6 1 nil 0) (9 6 7 0 nil 0) (2 0 8 0 nil 0) (1 0 8 1 nil 0) (0 0 8 2 nil 0) (12 0 9 0 nil 0) (4 0 13 0 nil 0))) 7.03 nil "" (om-make-point 200 200) (om-make-point 775 445)) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "input" nil))) (om-make-point 445 182) nil nil "l" "more-complex-test-func"))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 240 104) (quote "<-- An eventMidi-seq containing all events from original MidiFile corresponding to the test function $(i.e. only channels 2 and 3 : bass and piano)$(Play with \"P\" key)") "" (om-make-point 542 331) nil (om-make-color 13/85 4/15 5/17) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 178 53) (quote "The test function must be set as a lambda function with a single free input for MidiEvent.") "" (om-make-point 449 106) nil (om-make-color 13/85 4/15 5/17) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 401 113) (om-make-point 42 28) (list 2 3) "(2 3)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "TEST-CHANNEL" (quote test-channel) (quote ((om-load-inputfun (quote input-funbox) "midi event" "SELF" nil) (om-load-inputfun (quote input-funbox) "channel or channel list" "CHANNEL" nil))) (om-make-point 351 142) nil nil "l" "test-channel" 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "EVENTMIDI-SEQ" (quote eventmidi-seq) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "LTYPE" (list (quote keyon))) (om-load-inputfun (quote input-funbox) "no documentation" "LDATE" (list 0)) (om-load-inputfun (quote input-funbox) "no documentation" "LREF" (list 4)) (om-load-inputfun (quote input-funbox) "no documentation" "LPORT" 0) (om-load-inputfun (quote input-funbox) "no documentation" "LCHAN" (list 1)) (om-load-inputfun (quote input-funbox) "no documentation" "LFIELDS" (list nil)))) (om-make-point 420 328) (om-make-point 112 102) (let ((newobj (when (find-class (quote eventmidi-seq) nil) (let ((rep (make-instance (quote eventmidi-seq) :ldate (quote (714 714 714 738 743 797 970 1038 1038 1276 1362 1362 1362 1686 1686 1924 2011 2011 2011 2335 2335 2559 2570 2659 2659 2659 2659 2984 2984 3219 3241 3308 3308 3308 3324 3327 3327 3330 3332 3408 3562 3573 3573 3578 3632 3632 3870 3957 3957 3957 4281 4281 4519 4605 4605 4630 4635 4862 4930 4930 5162 5254 5254 5254 5578 5578 5578 5811 5903 5903 5903 5927 5932 5986 6159 6227 6227 6462 6551 6551 6551 6876 6876 7111 7114 7200 7200 7200 7203 7205 7524 7524 7524 7535 7535 7538 7543 7549 7762 7849 7849 7849 7862 7868 7870 7873 7878 7878 7881 8103 8103 8103 8105 8105 8116 8173 8173 8411 8497 8497 8497 8735 8749 8822 8822 8838 9057 9146 9146 9146 9149 9151 9470 9470 9470 9481 9481 9484 9489 9495 9705 9795 9795 9795 9811 9814 9814 9816 9819 9895 10049 10059 10059 10065 10119 10119 10349 10349 10443 10443 10443 10673 10768 10768 10997 10997 11092 11092 11092 11100 11105 11416 11416 11654 11741 11741 11741 11768 11773 11773 12065 12065 12303 12346 12389 12389 12389 12389 12397 12403 12714 12714 12946 13038 13038 13038 13065 13070 13070 13362 13362 13362 13595 13643 13686 13686 13686 13711 13716 13770 13943 14011 14011 14249 14335 14335 14335 14659 14659 14897 14984 14984 15000 15003 15003 15005 15008 15084 15238 15249 15249 15254 15308 15308 15543 15632 15632 15632 15957 15957 16192 16281 16281 16281 16281 16313 16316 16316 16405 16605 16605 16838 16930 16930 16930 17254 17254 17254 17486 17492 17578 17578 17578 17595 17597 17597 17600 17603 17678 17832 17843 17843 17849 17903 17903 18138 18227 18227 18227 18551 18551 18786 18789 18876 18876 18876 18908 18911 18911 19000 19200 19200 19411 19438 19524 19524 19524 19762 19849 19849 19865 20086 20173 20173 20497 20497 20732 20822 20822 21057 21146 21146 21146 21381 21384 21470 21470 21708 21795 21795 21795 21795 21819 22032 22119 22119 22141 22149 22149 22357 22443 22443 22443 22768 22768 23092 23092 23316 23416 23416 23741 23741 23997 24065 24065 24389 24389 24389 24389 24613 24627 24713 24713 25038 25038 25295 25362 25362 25395 25397 25397 25486 25686 25686 25924 26011 26011 26013 26268 26335 26335 26335 26659 26659 26668 26670 26673 26684 26984 26984 26984 27219 27219 27308 27308 27632 27632 27868 27868 27957 27957 27989 27992 27992 28081 28281 28281 28281 28516 28605 28605 28876 28930 28930 28930 29197 29254 29254 29262 29268 29578 29578 29811 29811 29859 29903 29903 29905 29930 29935 29935 30227 30227 30459 30508 30551 30551 30778 30808 30816 30816 30876 30876 31108 31200 31200 31208 31211 31213 31224 31432 31524 31524 31524 31632 31757 31849 31849 31849 31849 31849 31881 31884 31884 31973 32173 32173 32405 32497 32497 32497 32822 32822 33054 33146 33146 33146 33170 33176 33403 33470 33470 33708 33795 33795 33795 34030 34119 34119 34357 34357 34443 34443 34443 34768 34768 34792 35005 35092 35092 35092 35092 35113 35122 35122 35416 35416 35654 35740 35740 35740 35976 36065 36065 36095 36095 36300 36300 36389 36389 36389 36408 36713 36713 36938 36949 37038 37038 37038 37046 37049 37051 37062 37362 37362 37595 37686 37686 37686 38011 38011 38011 38243 38335 38335 38335 38338 38338 38351 38354 38357 38659 38659 38892 38984 38984 38984 38984 39008 39308 39308 39540 39632 39632 39632 39635 39889 39957 39957 40192 40281 40281 40281 40549 40605 40605 40632 40689 40762 40840 40851 40930 40930 40930 40932 40935 41254 41254 41254 41265 41265 41268 41273 41278)) :ltype (quote (:note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note)) :lchan (quote (10 7 7 3 3 3 3 7 7 10 10 7 7 7 7 10 10 7 7 7 7 3 10 10 7 7 2 7 7 10 3 10 7 7 3 3 3 3 3 3 3 3 3 3 7 7 10 10 7 7 7 7 10 7 7 3 3 3 7 7 10 10 7 7 10 7 7 10 10 7 7 3 3 3 3 7 7 10 10 7 7 7 7 10 2 10 7 7 3 3 7 7 3 3 3 3 3 3 10 10 7 7 3 3 3 3 3 3 5 3 3 3 3 3 3 7 7 10 10 7 7 3 5 7 7 3 10 10 7 7 3 3 7 7 3 3 3 3 3 3 10 10 7 7 3 3 3 3 3 3 3 3 3 3 7 7 10 10 10 7 7 10 7 7 10 10 10 7 7 3 3 7 7 10 10 7 7 3 3 3 7 7 10 3 10 10 7 7 3 3 7 7 10 10 7 7 3 3 3 10 7 7 10 3 10 7 7 3 3 3 3 7 7 10 10 7 7 7 7 10 7 7 3 3 3 3 3 3 3 3 3 3 7 7 10 10 7 7 7 7 10 10 10 7 7 3 3 3 3 7 7 10 10 7 7 10 7 7 10 2 10 7 7 3 3 3 3 3 3 3 3 3 3 7 7 10 10 7 7 7 7 10 2 10 7 7 3 3 3 3 7 7 4 10 10 7 7 3 7 7 3 10 7 7 7 7 10 7 7 10 10 7 7 10 2 7 7 10 10 7 7 2 3 10 7 7 3 3 3 10 7 7 2 7 7 7 7 3 7 7 7 7 3 7 7 10 7 7 2 3 10 7 7 7 7 3 7 7 3 3 3 3 7 7 10 7 7 3 3 7 7 2 7 7 3 3 3 3 7 7 2 10 10 7 7 7 7 10 10 7 7 3 3 3 3 7 7 2 10 7 7 5 7 7 2 5 7 7 3 3 7 7 10 10 5 7 7 2 3 3 3 7 7 10 3 7 7 2 3 3 3 7 7 10 7 7 3 3 3 3 10 7 7 2 10 10 10 10 10 7 7 3 3 3 3 7 7 10 10 7 7 7 7 10 10 7 7 3 3 3 7 7 10 10 7 7 5 7 7 10 2 10 7 7 7 7 3 10 10 7 7 2 3 3 3 7 7 10 10 7 7 3 7 7 3 3 10 3 10 7 7 3 7 7 3 10 10 7 7 3 3 3 3 7 7 10 10 7 7 10 7 7 10 10 7 7 3 3 3 3 3 7 7 10 10 7 7 2 3 7 7 10 10 7 7 3 3 7 7 10 10 7 7 3 7 7 3 3 3 10 3 10 7 7 3 3 7 7 3 3 3 3 3 3)) :lref (quote (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)) :lport (quote (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)) :lfields (quote ((35 60 67) (55 64 97) (49 55 164) (65 45 59) (70 63 176) (67 54 133) (46 53 1041) (49 41 54) (55 49 76) (42 40 67) (35 60 68) (55 56 324) (49 56 324) (55 60 71) (49 51 63) (42 50 68) (35 60 67) (59 64 97) (53 55 165) (53 41 54) (59 49 76) (69 49 79) (42 40 68) (35 60 68) (59 56 325) (53 56 325) (45 61 649) (59 60 70) (53 51 62) (42 50 67) (69 47 67) (35 60 68) (55 64 97) (49 55 165) (89 45 171) (77 35 100) (55 32 157) (83 36 56) (49 52 152) (84 46 114) (89 55 103) (77 55 70) (55 59 76) (49 60 71) (49 41 54) (55 49 76) (42 40 68) (35 60 67) (55 56 324) (49 56 324) (55 60 70) (49 51 62) (42 50 67) (59 64 98) (53 55 165) (64 45 59) (69 63 176) (45 53 1041) (53 41 54) (59 49 75) (42 40 68) (35 60 68) (59 56 324) (53 56 324) (35 60 68) (59 60 71) (53 51 63) (42 50 67) (35 60 67) (55 64 97) (49 55 165) (65 45 59) (70 63 176) (67 54 133) (46 53 1041) (49 41 54) (55 49 76) (42 40 68) (35 60 68) (55 56 325) (49 56 325) (55 60 70) (49 51 62) (42 50 67) (27 60 29) (35 60 68) (59 64 97) (53 55 165) (81 52 54) (86 32 54) (53 41 54) (59 49 76) (69 39 73) (77 36 62) (71 31 73) (74 33 73) (86 38 68) (81 39 62) (42 40 68) (35 60 67) (59 56 324) (53 56 324) (71 23 157) (69 30 146) (77 19 157) (74 19 146) (86 23 149) (81 40 149) (69 62 192) (71 41 54) (69 51 54) (74 51 51) (77 47 46) (81 45 63) (86 26 52) (59 60 70) (53 51 62) (42 50 67) (35 60 68) (55 64 98) (50 55 165) (40 50 73) (69 34 89) (50 41 54) (55 49 75) (70 63 165) (42 40 67) (35 60 68) (55 64 97) (49 55 165) (75 52 54) (82 32 54) (49 41 54) (55 49 76) (63 39 73) (73 36 62) (67 31 73) (70 33 73) (82 38 68) (75 39 62) (42 50 68) (35 60 67) (59 64 97) (53 55 164) (93 45 170) (81 35 100) (59 32 156) (87 36 57) (53 52 151) (88 46 113) (93 55 102) (81 55 71) (59 59 76) (53 60 70) (53 41 54) (59 49 76) (42 60 67) (38 40 67) (35 60 68) (59 56 325) (53 56 325) (38 50 68) (59 60 70) (53 51 62) (42 60 68) (38 60 68) (35 60 67) (55 64 97) (49 55 165) (39 59 73) (61 64 79) (49 41 54) (55 49 76) (42 40 68) (35 60 67) (55 56 324) (49 56 324) (58 49 421) (77 63 81) (49 54 441) (55 60 70) (49 51 62) (42 50 67) (49 30 43) (46 54 68) (35 60 68) (59 64 97) (53 55 165) (50 59 73) (65 64 78) (53 41 54) (59 49 75) (42 40 68) (35 60 67) (59 56 324) (53 56 324) (62 49 421) (81 63 81) (53 54 441) (35 60 68) (59 60 70) (53 51 62) (42 50 67) (53 30 43) (35 60 68) (55 64 98) (49 55 165) (65 45 59) (70 63 176) (67 54 133) (46 53 1041) (49 41 54) (55 49 75) (42 40 67) (35 60 68) (55 56 324) (49 56 324) (55 60 71) (49 51 63) (42 50 68) (59 64 97) (53 55 165) (93 45 170) (81 35 100) (59 32 156) (87 36 57) (53 52 151) (88 46 113) (93 55 103) (81 55 70) (59 59 75) (53 60 70) (53 41 54) (59 49 76) (42 40 68) (35 60 68) (59 56 325) (53 56 325) (59 60 70) (53 51 62) (42 50 67) (46 54 68) (35 60 68) (55 64 97) (49 55 165) (39 36 1198) (79 51 1152) (61 37 1262) (73 44 1076) (49 41 54) (55 49 76) (42 40 67) (35 60 67) (55 56 324) (49 56 324) (35 60 68) (55 60 70) (49 51 62) (42 50 68) (27 60 30) (35 60 68) (59 64 98) (53 55 165) (93 45 170) (81 35 100) (59 32 157) (87 36 57) (53 52 151) (88 46 114) (93 55 103) (81 55 70) (59 59 76) (53 60 70) (53 41 54) (59 49 75) (42 40 67) (35 60 68) (59 56 324) (53 56 324) (59 60 71) (53 51 62) (42 50 68) (26 60 30) (35 60 67) (55 64 97) (50 55 165) (40 58 616) (79 51 613) (50 48 613) (76 44 524) (50 41 54) (55 49 76) (69 60 81) (42 40 67) (35 60 68) (55 64 98) (49 55 165) (45 50 73) (49 41 54) (55 49 75) (70 63 165) (42 50 68) (59 64 97) (53 55 165) (53 41 54) (59 49 76) (42 50 68) (59 56 324) (53 56 324) (38 30 67) (38 55 67) (59 60 70) (53 51 62) (42 50 68) (26 60 29) (55 64 98) (48 55 165) (38 60 68) (37 60 67) (48 41 54) (55 49 75) (31 62 318) (75 26 122) (38 40 68) (55 56 324) (48 56 324) (63 56 70) (67 58 70) (81 63 78) (38 50 67) (55 60 70) (48 51 62) (27 64 289) (60 64 97) (54 55 164) (54 41 54) (60 49 76) (69 49 79) (60 56 325) (54 56 325) (60 60 70) (54 51 62) (69 47 68) (58 64 97) (53 55 165) (37 60 68) (53 41 54) (58 49 76) (45 64 324) (67 49 79) (38 40 68) (58 56 325) (53 56 325) (58 60 70) (53 51 62) (67 47 67) (58 64 97) (53 55 165) (43 58 616) (82 51 614) (53 48 614) (79 44 525) (53 41 55) (58 49 76) (38 40 68) (58 64 97) (52 55 165) (36 56 119) (84 64 59) (52 41 54) (58 49 76) (42 62 324) (58 64 98) (53 55 165) (43 38 45) (58 51 57) (55 48 62) (65 51 46) (53 41 54) (58 49 75) (55 59 362) (51 50 67) (38 40 67) (58 56 324) (53 56 324) (58 60 71) (53 51 63) (51 50 67) (38 40 67) (58 64 97) (52 55 165) (48 36 1197) (82 51 1151) (64 37 1262) (76 44 1076) (52 41 54) (58 49 76) (34 62 319) (38 40 68) (58 56 325) (52 56 325) (72 41 116) (58 60 70) (52 51 62) (31 64 289) (75 49 106) (57 64 97) (50 55 165) (41 59 73) (62 64 78) (50 41 54) (57 49 76) (51 60 67) (38 40 67) (72 31 76) (57 56 324) (50 56 324) (45 63 327) (60 49 421) (77 63 81) (50 54 441) (57 60 70) (50 51 62) (38 60 68) (50 30 43) (55 64 98) (50 55 165) (28 55 87) (74 43 38) (46 42 49) (76 43 43) (50 41 54) (55 49 75) (38 60 68) (55 64 97) (49 55 165) (45 38 46) (55 51 57) (51 48 63) (61 51 46) (38 50 68) (49 41 54) (55 49 76) (39 63 325) (38 40 68) (38 60 67) (49 40 67) (38 50 67) (35 60 67) (55 64 97) (49 55 164) (39 36 1197) (79 51 1151) (61 37 1262) (73 44 1076) (49 41 54) (55 49 76) (42 50 68) (35 60 68) (55 56 325) (49 56 325) (55 60 70) (49 51 62) (42 50 68) (35 60 67) (59 64 97) (53 55 165) (64 45 60) (69 63 175) (45 53 1040) (53 41 54) (59 49 76) (42 40 68) (35 60 67) (59 56 324) (53 56 324) (67 45 113) (59 60 70) (53 51 62) (42 50 67) (26 60 29) (35 60 68) (55 64 98) (49 55 165) (49 41 54) (55 49 75) (77 26 121) (42 40 68) (35 60 67) (55 56 324) (49 56 324) (46 61 648) (65 56 71) (67 58 70) (82 63 78) (55 60 70) (49 51 62) (42 50 68) (35 60 68) (59 64 98) (53 55 165) (81 64 113) (53 41 54) (59 49 75) (80 50 102) (76 44 97) (42 40 68) (81 64 113) (35 60 68) (59 56 324) (53 56 324) (76 50 216) (59 60 71) (53 51 63) (81 61 100) (42 50 67) (35 60 67) (55 64 97) (49 55 165) (39 38 46) (55 51 56) (51 48 62) (61 51 46) (49 41 54) (55 49 76) (42 40 67) (35 60 68) (55 56 325) (49 56 325) (35 60 67) (55 60 70) (49 51 62) (42 50 68) (35 60 68) (59 64 97) (53 55 165) (65 49 81) (53 40 81) (38 45 68) (59 46 46) (57 50 56) (53 41 54) (59 49 76) (42 40 67) (35 60 67) (59 56 324) (53 56 324) (45 61 648) (71 54 46) (59 60 70) (53 51 62) (42 50 68) (35 60 68) (55 64 98) (50 55 165) (40 56 119) (82 64 60) (50 41 54) (55 49 75) (42 40 67) (35 60 68) (55 64 97) (49 55 165) (45 43 24) (49 41 54) (55 49 76) (67 55 49) (73 52 146) (67 43 100) (42 50 68) (61 55 79) (35 60 67) (59 64 97) (53 55 165) (81 52 54) (86 32 54) (53 41 54) (59 49 76) (69 39 73) (77 36 62) (71 31 73) (74 33 72) (86 38 67) (81 39 62)))))) (setf (name rep) "Midi Events sequence") rep)))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (measure onset scale approx fontsize staff cmnpref deltapict outport inport zoom notechancolor? grillestep mode winsize winpos palette-mode obj-mode show-stems player)) (list nil nil nil 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil 0 1 nil 1000 0 18350450 2621450 0 0 (quote t) (quote :midi-player))) nil nil nil nil (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 281 55) (quote "Get-MidiEvents :$- first input : any musical or MIDI object$- second input (optional) : test function for midi events") "" (om-make-point 21 241) nil (om-make-color 13/85 4/15 5/17) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "GET-MIDIEVENTS" (quote get-midievents) (quote ((om-load-inputfun (quote input-funbox) "midifile" "SELF" nil) (om-load-inputfun (quote input-funbox) "lambda test function for midi events to extract" "TEST" nil))) (om-make-point 326 252) nil nil nil "get-midievents" 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "tunesia-short.mid" (quote midifile) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil))) (om-make-point 74 113) (om-make-point 50 72) (let ((newobj nil)) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "") (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (measure onset scale approx fontsize staff cmnpref deltapict outport inport zoom notechancolor? grillestep mode winsize winpos palette-mode obj-mode show-stems player)) (list nil nil nil 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) 0 0 1 nil 1000 0 (om-make-point 750 362) (om-make-point 470 177) 0 0 (quote t) (quote :midishare))) nil nil nil nil (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 675 26) (quote "Let's use filter boxes to filter events from a MIDI object using optional input of the \"get-MidiEvents\" function.$") "" (om-make-point 13 41) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 152 37) (quote "MidiEvent Filters ") "" (om-make-point 256 1) nil (om-make-color 0 0 0) (om-make-font "Geneva" 14 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((0 0 1 0 nil 0) (12 0 1 1 nil 0) (13 0 2 0 nil 0) (1 0 4 1 nil 0) (8 0 9 1 nil 0) (12 0 10 0 nil 0) (2 0 12 0 nil 0) (9 0 12 1 nil 0))) nil 7.03))
