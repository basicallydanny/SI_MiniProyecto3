; OM File Header - Saved 2024/09/24 11:58:47
; (6.110101 :patc (om-make-point 299 24) (om-make-point 573 39) (om-make-point 894 757) "No documentation " 183 0 nil "2024/09/22 15:55:10")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "03-midi sequences" (quote ((let ((box (om-load-editor-box1 "MIDI-MIX-CONSOLE" (quote midi-mix-console) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "output port number" "midiport" nil) (om-load-inputfun (quote input-funbox) "number of tracks" "nbtracks" 3))) (om-make-point 649 465) (om-make-point 119 58) (let ((rep (make-instance (quote midi-mix-console) :midiport nil :nbtracks 3))) (setf (channels-ctrl rep) (list (if (find-class (quote channel-ctrl) nil) (make-instance (quote channel-ctrl) :midiport nil :midichannel 1 :program 0 :pan-ctrl 64 :control1-num 1 :control2-num 2 :control1-val 0 :control2-val 0 :vol-ctrl 100 :pitch-ctrl 8192 :from-file t)) (if (find-class (quote channel-ctrl) nil) (make-instance (quote channel-ctrl) :midiport nil :midichannel 2 :program 0 :pan-ctrl 64 :control1-num 1 :control2-num 2 :control1-val 0 :control2-val 0 :vol-ctrl 100 :pitch-ctrl 8192 :from-file t)) (if (find-class (quote channel-ctrl) nil) (make-instance (quote channel-ctrl) :midiport nil :midichannel 3 :program 0 :pan-ctrl 64 :control1-num 1 :control2-num 2 :control1-val 0 :control2-val 0 :vol-ctrl 100 :pitch-ctrl 8192 :from-file t)))) (setf (miditrack rep) (quote 0)) rep) "x" nil (pairlis (quote (scale show-stems mode grillestep notechancolor? cmnpref obj-mode zoom deltapict winsize winpos player)) (list nil (quote t) 0 1000 nil (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) 0 1 (om-make-point 0 0) (om-make-point 240 560) (om-make-point 0 0) (quote :midi-player))) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHORD-SEQ" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 1000)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 160 46) (om-make-point 156 77) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6600 7000 6500 4200 3500 5500 4900 3900 5700) (6700 5800) (4600 6500 6100) (7200 3700 4200 4900 5500) (4200 3500 5500 4900 4600 4200) (7000 3700 4200 5500 4900) (4200 3500 5900 5300 3800 4200 3900 6500) (6800) (3700 4200 5300 5900 6900 7400) (4200 3500 5900 5300 7400 4500 4200 6900) (6100) (3700 4200 5900 5300 6200) (6400) (4200 3500 5500 4900 3900 6900 4200 5700 6500) (8400 6300 4900 5800 8300 7700 5500 8900) (4900 7700 5500 8400 8900 6100 6500) (6700 6500 3700 4200 4900 5500) (7200 4200 6800) (3400 4200 3500 5500 4900) (7000) (6500 3700 4200 5500 4900) (6900 4200 6800) (6500 6900 6400 4200 5900 5300 3800) (3700 4200 5300 5900 4500) (4200 3500 5900 5300 4500 4200 3800) (4200 3500 5900 5300 4000 4500) (4200 3500 5500 4900 3900 5700 4200) (6700 5800 6600 7000 6500) (6500 3700 4200 4900 5500 4600 6100) (4200 3500 5500 4900 3400 7200 4200) (7000 3700 4200 5500 4900) (8600 8100 4200 3500 5900 5300 3800 6500 2700 4200) (6800) (8100 8600 7400 7700 7100 3700 4200 5300 5900 6900 6900) (4200 4500) (6900 8600 8100 7400 7700 6900 7100 4200 3500 5900 5300 5000) (8600 7700 8100 7100 6900 7400 7000 4500) (7300 3700 4200 5900 5300 3800) (4200 7400) (7200 7400 6900 4200 3500 5500 5000 4000) (3700 4200 5000 5500 6900 4000 7000) (7000 7000 6900 7000 8200) (4200 7200 6700 6900) (6300 8200 7500 4200 3500 5500 4900 3300) (7500 8200 7000 7300 6700 3700 4200 4900 5500 6100 6300) (4200 3500 5900 5300 3800 6200 4200) (8800 5300 8700 8100 5900 9300) (4200 5300 5900 5300 8100 5900 8800 9300) (4200 3500 5900 5300 4200 3800) (4500) (4200 5900 5300 3800) (4200 3500 5500 4900 3900 5700 4200 3800) (5800 6100 6500 7000 3900) (6500 6100) (7200 3700 4200 4900 5500) (4200 3500 5500 4900 4200) (7000 7700 8200 4900 5800 3400) (7000 3700 4200 5500 4900) (6500 6900 7400 5000 4600 3500 5900 5300 3800 4900 4200 6500) (6800) (3700 4200 5300 5900 6900) (4200 3500 5900 5300 4500 4200) (7300 7400 8100 8600 5300 6200) (4200 3500 5900 5300 7400) (7600) (4200 3500 5500 4900 5800 3900 5300 7400 3800 4200 5700) (6700 6600 7000 6500) (6500 6100) (3700 4200 4900 5500 7300 4600) (7200) (4200 3500 5500 4900 4600 4200) (3700 4200 5500 4900 7000) (6500) (6800 4200 5900 5300 3800 4200 3900) (8800 6900 5300 8700 8100 5900 9300) (3700 4200 5300 5900 4000 5300 8100 5900 8800 9300) (4200 3500 5900 5300 4100 4200) (4200 5900 5300 4500 3700) (4600 3500 5500 4900 3900 4200 5700) (7900 6100 3900 7200 5800) (7300) (3700 4200 4900 5500 6100) (6500) (4200 3500 5500 4900 3400 4200 7200) (7000 4200 3500 5500 4900) (4200 3500 5900 5300 3800 6500 2700 4200) (8800 6800 5300 8700 8100 5900 9300) (3700 4200 5300 5900 6900 5300 8100 5900 8800 9300) (4200 3500 5900 5300 4500 4200) (7300) (3700 4200 5900 5300 7400) (7600) (6900 4200 3500 5500 5000 4000 2600 4200 7700) (7900 7900 5000 4000 7500) (7600) (3700 4200 5000 5500 4600 7000 7400 4000) (6900 7000) (6700 6900 4200 6900 7000) (6300 7300 4200 3500 5500 4900 3300) (6100 3700 4200 4900 5500 4500) (7000 8200) (4200 5900 5300 3800 4200 6200) (3700 4200 5300 5900) (4200 5900 5300 3300 7400 4200) (8600) (3700 4200 3800 5900 5300 3800 7400) (5100 5500 4800 3300 2600 4200) (7200) (5100 3700 4200 4800 5500 3100 8100 3800 2100) (7500) (5100 5500 4800 2900 5100 3800) (7200 6700 8100 6900 6300) (5100 3700 4200 5500 4800 2700 3800) (5100 3900 6700) (6600 5100 6000 5400 3800) (5100 3700 4200 5400 6000 4000 7500 6500 7500) (6900 6600) (5100 6000 5400 7500 4100 7400 7200 5100 6900) (7700) (7700 5100 4200 6000 5400 4200 7500 7200) (5100 5800 5300 4300 6900 6900 5100) (7000) (5100 3700 4200 5300 5800 4500 6700 7400 4300) (5100 5800 5300 7400 4600 5100 3800 6700) (6900) (6600 5100 3700 4200 5800 5300 5000) (5100 5800 5300 4300 6700 6700 5100) (8200 5300 4300 7800) (7900) (5100 3700 4200 5300 5800 5000) (3600 5100 5800 5200 3600 5100 3800) (6900 5100 3700 4200 5200 5800 4200 8400 7600 7000 6700 3600) (5500 5800 4300 5100 5800 5300 4300 7000 5100) (6500) (5100 3700 4200 5300 5800 5500) (6700 5100 5800 5300 4900 5100 3800) (6500 5100 3700 4200 5800 5300 4600) (6400 5100 5800 5200 3600 5100 3800) (8200 6400 4800 7500) (7600) (5100 3700 4200 5200 5800 3400 7300 2400) (5100 5800 5200 3300 7200 5100 3800) (7500) (7000 5100 4200 5800 5200 3100 7200) (7300) (6500 7200 4100 5100 5700 5000 4100 7500 6800 4200 5100) (7700 6900 6200) (7400 5100 3700 4200 5000 5700 4800 6500) (4500 5100 5700 5000 7200 5100 3800) (7200 6700 7700 8400 5000 6000) (6500 4100 5100 3700 4200 5700 5000) (3500 5500 5000 4000 5000 6900 5100 3800) (4600 7400 7600) (5100 4200 5000 5500 3400 4600 7600 7400 3800 2800) (4500 5100 3800 5500 4900 3300 5100 3800) (6100 5100 5500) (5100 4200 4900 5500 3900 3300 3800 3500) (3800) (4900 4200 3800 3500 5500 4900 3900 5100 3800 5700) (7900 6100 3900 7200 5800) (6500 6100 7300) (3700 4200 4900 5500 7200) (4200 3500 5500 4900 4200) (3400) (7000 3700 4200 5500 4900) (4200 3500 5900 5300 3800 6500 4200) (6800 6500 6900 6400) (3700 4200 5300 5900 6900 4500) (4200 3500 5900 5300 4500 4200) (3700 4200 5900 5300 6700) (7300) (4200 3500 5500 4900 3900 4200 2600 7900 5700) (7600 5800) (8200 6500 7700 6100) (7500 7200 7700 3700 4200 4900 5500) (4200 7700) (7300 6700 8200 6500 4200 3500 5500 4900 4600) (3700 4200 5500 4900 7000) (6500) (4200 3500 5900 5300 3800 4200) (6900 6800) (3700 4200 5300 5900 7700 8100) (8000 7600) (4200 3500 5900 5300 4500 4200 7700 8100) (8000 7600) (4200 5900 5300 3700 8100 7700) (4200 3500 5500 4900 3900 5700 3800 4200 7700 8100) (5800 6100 5100 5500 3900) (3700 4200 4900 5500 6100) (6500) (4200 3500 5500 4900 7200 4200) (3400) (7000 4200 3500 5500 4900) (6500 5300 4200 3500 5900 5300 3800 6500 4200) (6800 5700 5900 3800) (3700 4200 5300 5900 6900 7200) (7300) (4200 3500 5900 5300 4500 7000 4200) (6900 7100 8600 7400 8100 7700) (3700 4200 5900 5300 6700) (6500) (4000 4200 3500 5500 5000 4000 6100 4200) (6900) (3700 4200 5000 5500 8200 7400 6700 7000) (7000 6900) (4200 3500 5500 4900 3300 4200 6700) (6300) (6700 6100 3700 4200 4900 5500 4500) (6700 7300) (8600 8100 4200 3500 5900 5300 3800 6100 6200 4200) (8100 8600 7400 7700 7100 3700 4200 5300 5900 6900))) :lonset (quote (451 557 681 838 1076 1486 1719 1838 2065 2359 2489 2684 2835 3014 3124 3330 3432 3651 3757 3878 4081 4303 4405 4662 4962 5286 5611 5727 5957 6262 6676 6911 7032 7270 7543 7649 7865 7973 8181 8297 8527 8638 8776 8946 9270 9505 9611 9849 10149 10262 10473 10797 10900 11038 11216 11454 11559 11865 12103 12222 12465 12746 12865 13105 13227 13389 13511 13635 13743 13870 14049 14359 14570 14697 14800 15038 15343 15668 15989 16100 16205 16319 16427 16632 17054 17286 17395 17632 17938 18057 18251 18403 18581 18697 18800 18913 19062 19170 19324 19562 19665 19884 20297 20532 20643 20846 21181 21300 21508 21619 21832 21941 22157 22459 22568 22822 22938 23116 23259 23476 23776 23919 24105 24413 24554 24838 25076 25184 25286 25486 25724 26049 26373 26484 26784 27019 27432 27668 27778 27881 27995 28316 28462 28676 28786 28965 29068 29313 29611 29730 30027 30259 30362 30578 30908 31011 31232 31432 31551 31662 31773 31968 32205 32316 32622 32854 32970 33203 33508 33830 33970 34149 34265 34395 34568 34773 34892 35124 35346 35454 35562 35776 35895 36100 36208 36424 36738 36846 37078 37186 37395 37505 37811 38043 38151 38376 38549 38692 38795 39046 39189 39340 39449 39670 39773 39984 40113 40349 40489 40640 41054 41968)) :ldur (quote ((95 176 59 67 67 97 164 672 135) (133 232) (1041 94 111) (665 67 67 54 76) (68 68 324 324 562 67) (181 68 68 71 63) (67 67 97 165 686 68 60 157) (173) (68 68 54 76 781 111) (68 68 325 325 203 649 68 79) (162) (67 67 70 62 127) (179) (68 68 97 165 668 67 67 157 162) (114 162 152 221 56 100 157 171) (71 70 76 60 103 133 148) (138 178 68 68 54 76) (251 68 92) (570 67 67 324 324) (133) (195 68 68 70 62) (1024 67 19) (95 176 59 68 98 165 414) (67 67 54 75 1041) (68 68 324 324 146 68 141) (68 68 71 63 325 114) (67 67 97 165 635 170 67) (133 243 95 176 59) (168 68 68 54 76 1041 113) (68 68 325 325 581 491 68) (211 67 67 70 62) (54 54 68 68 97 165 543 122 29 67) (173) (62 68 73 62 73 68 68 54 76 73 825) (68 149) (192 149 149 146 157 146 157 67 67 324 324 151) (52 46 63 54 54 51 121 132) (141 68 68 70 62 305) (67 170) (162 170 121 68 68 98 165 649) (67 67 54 75 89 73 87) (83 205 89 165 113) (67 100 124 92) (143 54 54 68 68 97 165 649) (62 68 73 62 73 68 68 54 76 219 73) (67 67 97 164 667 1148 68) (113 151 57 100 156 170) (67 54 76 70 71 76 59 102) (68 68 325 325 67 67) (570) (67 70 62 68) (67 67 97 165 667 143 68 68) (203 79 70 102 73) (138 127) (684 68 68 54 76) (67 67 324 324 68) (490 81 492 441 421 571) (192 67 67 70 62) (78 70 103 73 68 68 97 165 673 43 67 156) (197) (67 67 54 75 794) (67 67 324 324 562 68) (217 489 81 492 441 421) (68 68 70 62 100) (173) (68 68 98 165 200 673 43 127 59 67 146) (133 95 176 59) (100 130) (67 67 54 75 122 1041) (552) (68 68 324 324 562 67) (68 68 71 63 157) (192) (49 67 97 165 378 68 60) (113 1094 151 57 100 156 170) (68 68 54 76 354 70 70 75 59 103) (68 68 325 325 379 68) (67 70 62 324 67) (68 68 97 165 635 67 154) (1152 1262 1198 86 297) (1076) (68 68 54 76 135) (165) (67 67 324 324 581 67 498) (229 68 68 70 62) (68 68 98 165 635 135 30 68) (114 184 151 57 100 157 170) (67 67 54 75 789 70 70 76 59 103) (68 68 324 324 581 67) (162) (68 68 71 62 127) (178) (149 67 67 97 165 170 30 68 162) (160 613 613 616 87) (524) (68 68 54 76 324 159 163 109) (103 187) (102 138 67 81 76) (149 170 68 68 98 165 649) (209 67 67 54 75 73) (165 113) (68 97 165 635 68 1224) (68 68 54 76) (67 324 324 581 111 68) (198) (67 67 67 70 62 67 81) (68 98 165 181 29 68) (424) (67 67 67 54 75 318 83 68 70) (122) (67 324 324 346 68 68) (51 70 78 267 70) (68 68 68 70 62 289 67) (68 87 190) (133 67 97 164 378) (67 67 67 54 76 349 119 81 110) (111 100) (68 325 325 203 341 181 71 68 79) (219) (318 67 67 70 62 264 57 129) (67 97 165 119 68 98 67) (165) (68 68 68 54 76 324 338 111 141) (68 325 325 203 322 68 68 79) (157) (138 67 67 67 70 62 324) (68 97 165 384 765 67 67) (614 614 616 86) (525) (68 68 68 55 76 325) (119 67 97 165 200 68 68) (140 68 68 68 54 76 324 59 45 73 83 70) (62 57 45 68 98 165 349 695 68) (46) (67 67 67 54 75 362) (187 68 324 324 333 67 67) (170 68 68 68 71 63 325) (246 67 97 165 181 67 67) (1151 1262 1197 87) (1076) (68 68 68 54 76 319 119 70) (68 325 325 346 365 68 68) (219) (141 67 67 70 62 289 116) (163) (70 103 73 68 97 165 324 106 65 86 67) (238 168 78) (262 68 68 68 54 76 327 346) (327 67 324 324 76 67 67) (489 238 81 492 441 421) (122 319 68 68 68 70 62) (68 98 165 292 43 900 68 68) (156 184 181) (67 67 54 75 324 49 43 38 67 87) (46 68 68 97 165 173 68 68) (46 63 57) (68 68 54 76 325 94 68 68) (68) (67 67 67 67 97 164 667 67 67 133) (1151 1262 1197 87 197) (125 95 1076) (68 68 54 76 754) (68 68 325 325 68) (570) (192 67 67 70 62) (67 67 97 165 635 97 68) (184 94 175 60) (68 68 54 76 803 1040) (67 67 324 324 581 68) (67 67 70 62 113) (179) (68 68 98 165 687 67 29 135 146) (106 200) (83 100 162 129) (138 573 121 67 67 54 75) (68 146) (51 70 78 71 67 67 324 324 648) (68 68 70 62 160) (186) (68 68 98 165 673 68) (1114 30) (67 67 54 75 102 113) (102 97) (68 68 324 324 562 68 97 113) (189 216) (68 71 63 68 114 98) (67 67 97 165 667 149 60 67 92 100) (229 46 62 56 46) (68 68 54 76 92) (106) (68 68 325 325 378 67) (571) (159 67 67 70 62) (81 81 68 68 97 165 687 135 68) (138 56 46 68) (68 68 54 76 733 129) (129) (67 67 324 324 648 135 67) (151 46 44 33 59 43) (68 68 70 62 116) (192) (119 68 68 98 165 649 111 68) (159) (67 67 54 75 60 46 73 89) (59 232) (68 68 97 165 649 67 94) (146) (49 213 68 68 54 76 24) (100 146) (54 54 67 67 97 165 619 79 1322 68) (62 67 72 62 73 68 68 54 76 73))) :lvel (quote ((68 63 45 70 60 64 55 82 90) (54 103) (53 102 110) (113 70 90 41 49) (80 60 56 56 85 40) (119 80 90 60 51) (80 60 64 55 76 50 82 93) (118) (70 90 41 49 106 82) (80 60 56 56 68 61 40 49) (92) (85 90 60 51 89) (82) (70 60 64 55 89 47 50 93 96) (46 75 52 110 36 35 32 45) (60 55 59 74 55 112 96) (76 82 70 80 41 49) (110 40 108) (82 80 60 56 56) (95) (113 80 80 60 51) (112 50 116) (68 63 45 70 64 55 69) (80 70 41 49 53) (80 60 56 56 68 40 69) (80 60 60 51 77 78) (80 60 64 55 78 96 50) (54 103 68 63 45) (105 70 90 41 49 53 103) (80 60 56 56 82 105 40) (114 85 90 60 51) (32 52 70 60 64 55 72 77 60 50) (115) (39 38 33 36 31 70 90 41 49 39 111) (40 82) (62 23 40 19 19 30 23 80 60 56 56 74) (26 47 45 41 51 51 91 100) (87 80 90 60 51 89) (50 94) (107 67 112 80 60 64 55 82) (70 90 41 49 34 50 105) (106 65 85 63 67) (40 99 86 77) (123 32 52 80 60 64 55 82) (39 38 33 36 31 85 90 41 49 127 39) (80 60 64 55 89 115 50) (46 52 36 35 32 45) (90 41 49 60 55 59 74 55) (70 60 56 56 60 40) (82) (80 60 51 50) (70 60 64 55 89 86 60 60) (112 64 68 67 59) (80 99) (110 70 80 41 49) (80 60 56 56 40) (67 63 75 54 49 82) (110 80 80 60 51) (64 68 67 59 54 60 64 55 82 30 50 85) (118) (80 70 41 49 110) (80 60 56 56 85 40) (97 67 63 75 54 49) (80 60 60 51 85) (99) (70 60 64 55 106 82 30 92 82 50 82) (54 68 63 45) (94 114) (70 80 41 49 94 53) (113) (80 60 56 56 85 40) (80 80 60 51 119) (97) (113 80 64 55 78 50 82) (46 110 52 36 35 32 45) (70 90 41 49 80 60 55 59 74 55) (80 60 56 56 75 40) (90 60 51 76 90) (54 60 64 55 78 50 84) (51 37 36 69 112) (44) (80 70 41 49 116) (90) (80 60 56 56 82 40 102) (111 80 60 60 51) (80 60 64 55 78 89 60 50) (46 118 52 36 35 32 45) (70 90 41 49 115 60 55 59 74 55) (80 60 56 56 82 40) (92) (85 90 60 51 89) (82) (110 70 60 64 55 81 60 50 96) (86 51 48 58 69) (44) (70 80 41 49 73 107 80 71) (96 83) (85 74 40 60 98) (120 67 80 60 64 55 70) (117 80 80 41 49 50) (63 67) (80 64 55 78 50 108) (70 90 41 49) (80 56 56 82 89 50) (84) (85 90 55 60 51 30 76) (70 64 55 70 60 50) (119) (90 60 90 41 49 62 76 60 77) (26) (80 56 56 68 70 40) (67 58 63 117 56) (90 70 100 60 51 64 50) (70 79 106) (106 80 64 55 71) (90 70 70 41 49 68 118 84 82) (80 66) (90 56 56 68 75 117 102 70 49) (104) (97 90 100 60 51 68 67 115) (70 64 55 85 47 100 70) (121) (90 60 90 41 49 64 108 82 73) (80 56 56 68 75 70 40 49) (115) (120 90 70 100 60 51 67) (80 64 55 71 117 47 70) (51 48 58 69) (44) (90 70 80 41 49 70) (56 80 64 55 69 70 40) (109 90 70 100 41 49 62 64 72 75 82 81) (48 51 38 70 64 55 76 127 70) (51) (90 70 100 41 49 59) (104 80 56 56 71 50 40) (119 90 70 100 60 51 77) (115 80 64 55 70 50 40) (51 37 36 69) (44) (90 70 70 41 49 62 121 77) (90 56 56 68 115 70 40) (116) (119 90 100 60 51 64 41) (78) (68 67 59 80 64 55 69 49 98 79 70) (80 104 64) (95 90 70 80 41 49 68 116) (63 80 56 56 31 60 40) (67 104 63 75 54 49) (95 81 100 80 100 60 51) (90 64 55 78 30 118 70 60) (74 90 87) (90 80 41 49 78 42 43 43 70 55) (38 80 80 64 55 77 80 60) (51 48 51) (90 100 41 49 63 70 50 80) (40) (40 70 50 60 64 55 89 80 60 96) (51 37 36 69 117) (95 104 44) (80 80 41 49 110) (80 60 56 56 50) (82) (111 80 90 60 51) (70 60 64 55 78 92 50) (124 68 63 45) (70 80 41 49 110 53) (80 60 56 56 82 40) (80 80 60 51 45) (65) (70 60 64 55 76 50 60 89 93) (76 116) (76 99 84 103) (76 108 26 70 90 41 49) (40 101) (67 58 63 56 80 60 56 56 61) (80 90 60 51 120) (90) (80 60 64 55 82 50) (106 116) (70 90 41 49 76 64) (50 44) (80 60 56 56 85 40 83 64) (71 50) (90 60 51 90 66 85) (70 60 64 55 89 104 82 50 80 61) (115 51 48 51 38) (80 70 41 49 102) (99) (80 60 56 56 110 40) (82) (123 80 60 60 51) (49 40 70 60 64 55 76 78 50) (116 50 46 45) (80 90 41 49 120 113) (96) (70 60 56 56 61 108 40) (88 54 75 73 73 72) (78 90 60 51 83) (79) (56 80 60 64 55 82 67 50) (117) (70 90 41 49 64 72 75 115) (91 91) (80 60 64 55 82 40 79) (127) (55 127 85 90 41 49 43) (43 52) (32 52 80 60 64 55 72 55 114 50) (39 38 33 36 31 70 90 41 49 39))) :loffset (quote ((92 92 87 63 63 63 63 63 0) (40 0) (89 87 0) (43 0 0 0 0) (86 86 86 86 86 0) (14 0 0 0 0) (92 92 92 92 92 5 5 0) (0) (70 70 70 70 3 0) (100 100 100 100 100 100 11 0) (0) (100 100 100 100 0) (0) (94 94 94 94 94 27 5 2 0) (84 44 8 6 6 3 3 0) (48 43 43 40 32 13 0) (38 36 0 0 0 0) (25 19 0) (19 0 0 0 0) (0) (5 0 0 0 0) (19 16 0) (30 30 25 0 0 0 0) (68 68 68 68 0) (92 92 92 92 92 0 0) (92 92 92 92 92 0) (92 92 92 92 92 24 0) (59 35 5 5 0) (94 70 70 70 70 2 0) (89 89 89 89 89 6 0) (10 0 0 0 0) (94 92 89 89 89 89 89 8 3 0) (0) (79 73 68 65 65 54 54 54 54 54 0) (19 0) (32 29 29 24 21 19 13 0 0 0 0 0) (51 40 40 38 38 38 11 0) (54 0 0 0 0 0) (30 0) (68 30 17 0 0 0 0 0) (95 95 95 95 22 8 0) (76 16 0 0 0) (81 78 65 0) (35 5 3 0 0 0 0 0) (25 19 14 11 11 0 0 0 0 0 0) (90 90 90 90 90 17 0) (84 8 5 3 3 0) (70 70 70 16 10 10 8 0) (94 94 94 94 0 0) (0) (95 95 95 0) (95 95 95 95 95 3 0 0) (16 5 3 3 0) (86 0) (41 0 0 0 0) (87 87 87 87 0) (19 14 14 14 9 0) (11 0 0 0 0) (100 97 97 94 86 86 86 86 86 43 0 0) (0) (49 49 49 49 0) (92 92 92 92 92 0) (21 11 5 5 5 0) (57 57 57 57 0) (0) (97 97 97 97 97 97 54 27 11 6 0) (59 5 5 0) (100 0) (68 68 68 68 3 0) (0) (86 86 86 86 86 0) (100 100 100 100 0) (0) (89 87 87 87 87 0 0) (84 19 8 5 3 3 0) (70 70 70 70 70 16 11 11 8 0) (89 89 89 89 89 0) (89 89 89 89 0) (92 92 92 92 92 3 0) (16 16 13 3 0) (0) (86 86 86 86 0) (0) (98 98 98 98 98 6 0) (3 0 0 0 0) (92 92 92 92 92 22 6 0) (83 10 8 5 2 2 0) (71 71 71 71 17 17 11 11 9 0) (89 89 89 89 89 0) (0) (100 100 100 100 0) (0) (97 95 95 95 95 95 8 5 0) (62 14 14 11 0) (0) (87 87 87 87 87 6 0 0) (3 0) (98 76 68 41 0) (65 30 0 0 0 0 0) (97 87 87 87 87 0) (0 0) (89 89 89 89 2 0) (0 0 0 0) (90 90 90 90 3 0) (0) (100 100 100 100 100 11 0) (89 89 89 89 3 0) (0) (87 87 87 87 87 87 14 0 0) (0) (87 87 87 87 0 0) (8 8 8 5 0) (86 86 86 86 86 86 0) (22 22 0) (45 0 0 0 0) (70 70 70 70 70 70 21 5 0) (94 0) (100 100 100 100 100 30 16 11 0) (0) (92 65 65 65 65 65 5 0) (89 89 89 89 21 10 0) (0) (84 84 84 84 84 84 30 14 0) (100 100 100 100 100 14 14 0) (0) (21 0 0 0 0 0 0) (86 86 86 86 35 19 0) (13 13 11 0) (0) (0 0 0 0 0 0) (89 87 87 87 87 0 0) (97 86 86 86 86 86 86 19 19 10 0 0) (100 97 95 86 86 86 86 8 0) (0) (0 0 0 0 0 0) (97 89 89 89 89 0 0) (6 0 0 0 0 0 0) (94 89 89 89 89 0 0) (14 14 11 0) (0) (86 86 86 86 86 86 24 0) (89 89 89 89 14 0 0) (0) (75 54 54 54 54 54 0) (0) (100 100 97 89 89 89 89 32 21 3 0) (35 29 0) (98 65 65 65 65 65 65 0) (94 92 92 92 48 0 0) (11 8 5 5 5 0) (8 5 0 0 0 0 0) (92 92 92 92 49 17 0 0) (6 0 0) (98 98 98 98 98 38 38 30 6 0) (100 92 92 92 92 92 0 0) (13 2 0) (92 92 92 92 92 9 0 0) (0) (98 98 98 98 98 98 98 6 6 0) (22 22 19 8 0) (78 8 0) (5 5 5 5 0) (92 92 92 92 0) (0) (10 0 0 0 0) (92 92 92 92 92 14 0) (16 6 6 0) (67 67 67 67 24 0) (87 87 87 87 87 0) (89 89 89 89 0) (0) (94 94 94 94 94 8 8 5 0) (67 0) (100 94 5 0) (48 35 24 0 0 0 0) (32 0) (30 30 30 21 0 0 0 0 0) (92 92 92 92 0) (0) (86 86 86 86 86 0) (19 0) (89 89 89 89 0 0) (0 0) (89 89 89 89 89 0 0 0) (11 0) (89 89 89 0 0 0) (100 100 100 100 100 16 13 11 0 0) (22 16 5 3 0) (84 84 84 84 0) (0) (91 91 91 91 13 0) (0) (19 0 0 0 0) (95 95 92 92 92 92 92 22 0) (19 6 3 0) (83 83 83 83 37 0) (0) (92 92 92 92 92 27 0) (78 13 10 10 0 0) (62 62 62 62 0) (0) (95 92 92 92 92 92 30 0) (0) (87 87 87 87 19 19 11 0) (100 0) (97 97 97 97 97 8 0) (0) (83 62 56 56 56 56 0) (73 0) (95 92 90 90 90 90 90 11 6 0) (24 19 14 11 11 0 0 0 0 0))) :lchan (quote ((3 3 3 10 10 7 7 2 4) (3 4) (3 4 4) (4 10 10 7 7) (10 10 7 7 2 10) (4 10 10 7 7) (10 10 7 7 2 10 2 4) (4) (10 10 7 7 4 3) (10 10 7 7 3 2 10 3) (5) (10 10 7 7 5) (5) (10 10 7 7 2 3 10 4 5) (3 5 3 4 3 3 3 3) (3 3 3 3 3 4 5) (5 4 10 10 7 7) (4 10 5) (2 10 10 7 7) (4) (4 10 10 7 7) (4 10 4) (3 3 3 10 7 7 2) (10 10 7 7 3) (10 10 7 7 2 10 2) (10 10 7 7 2 2) (10 10 7 7 2 4 10) (3 4 3 3 3) (4 10 10 7 7 3 4) (10 10 7 7 2 4 10) (4 10 10 7 7) (3 3 10 10 7 7 2 4 2 10) (4) (3 3 3 3 3 10 10 7 7 3 4) (10 2) (5 3 3 3 3 3 3 10 10 7 7 2) (3 3 3 3 3 3 5 2) (5 10 10 7 7 2) (10 5) (5 3 4 10 10 7 7 2) (10 10 7 7 5 3 4) (4 5 4 3 3) (10 5 4 4) (4 3 3 10 10 7 7 2) (3 3 3 3 3 10 10 7 7 4 3) (10 10 7 7 2 4 10) (3 3 3 3 3 3) (10 7 7 3 3 3 3 3) (10 10 7 7 10 10) (2) (10 7 7 10) (10 10 7 7 2 4 10 10) (4 3 3 3 3) (4 4) (4 10 10 7 7) (10 10 7 7 10) (3 3 3 3 3 2) (4 10 10 7 7) (3 3 3 3 10 10 7 7 2 3 10 4) (4) (10 10 7 7 4) (10 10 7 7 2 10) (5 3 3 3 3 3) (10 10 7 7 5) (5) (10 10 7 7 4 2 3 5 2 10 4) (3 3 3 3) (4 4) (10 10 7 7 5 3) (4) (10 10 7 7 2 10) (10 10 7 7 4) (4) (4 10 7 7 2 10 2) (3 4 3 3 3 3 3) (10 10 7 7 2 3 3 3 3 3) (10 10 7 7 2 10) (10 7 7 2 10) (10 10 7 7 2 10 4) (3 3 3 3 4) (3) (10 10 7 7 4) (4) (10 10 7 7 2 10 4) (4 10 10 7 7) (10 10 7 7 2 4 2 10) (3 4 3 3 3 3 3) (10 10 7 7 4 3 3 3 3 3) (10 10 7 7 2 10) (5) (10 10 7 7 5) (5) (4 10 10 7 7 2 2 10 5) (5 3 3 3 3) (3) (10 10 7 7 2 4 5 2) (4 5) (4 5 10 4 4) (4 3 10 10 7 7 2) (4 10 10 7 7 3) (3 3) (10 7 7 2 10 4) (10 10 7 7) (10 7 7 2 3 10) (3) (10 10 10 7 7 10 3) (10 7 7 2 2 10) (4) (10 10 10 7 7 2 3 10 2) (3) (10 7 7 2 10 10) (3 3 3 4 3) (10 10 10 7 7 2 10) (10 2 4) (4 10 7 7 2) (10 10 10 7 7 2 4 5 3) (5 5) (10 7 7 3 2 4 5 10 3) (5) (5 10 10 7 7 2 5 4) (10 7 7 2 3 4 10) (4) (10 10 10 7 7 2 4 3 2) (10 7 7 3 2 10 10 3) (4) (4 10 10 10 7 7 2) (10 7 7 2 4 3 10) (3 3 3 3) (3) (10 10 10 7 7 2) (3 10 7 7 2 10 10) (4 10 10 10 7 7 2 3 3 3 4 2) (3 3 3 10 7 7 2 4 10) (3) (10 10 10 7 7 2) (4 10 7 7 2 10 10) (4 10 10 10 7 7 2) (4 10 7 7 2 10 10) (3 3 3 3) (3) (10 10 10 7 7 2 4 2) (10 7 7 2 4 10 10) (5) (4 10 10 7 7 2 5) (5) (3 3 3 10 7 7 2 5 4 2 10) (5 4 3) (5 10 10 10 7 7 2 4) (2 10 7 7 5 10 10) (3 4 3 3 3 3) (4 2 10 10 10 7 7) (10 7 7 2 3 4 10 10) (3 3 3) (10 10 7 7 2 3 3 3 10 2) (3 10 10 7 7 2 10 10) (3 3 3) (10 10 7 7 2 2 10 10) (10) (10 10 10 10 7 7 2 10 10 4) (3 3 3 3 4) (4 4 3) (10 10 7 7 4) (10 10 7 7 10) (2) (4 10 10 7 7) (10 10 7 7 2 4 10) (4 3 3 3) (10 10 7 7 4 3) (10 10 7 7 2 10) (10 10 7 7 5) (5) (10 10 7 7 2 10 2 5 4) (5 4) (3 4 5 4) (5 4 3 10 10 7 7) (10 5) (3 3 3 3 10 10 7 7 2) (10 10 7 7 4) (4) (10 10 7 7 2 10) (4 4) (10 10 7 7 3 3) (3 3) (10 10 7 7 2 10 3 3) (3 3) (10 7 7 10 3 3) (10 10 7 7 2 4 2 10 3 3) (4 3 3 3 3) (10 10 7 7 4) (4) (10 10 7 7 4 10) (2) (4 10 10 7 7) (3 3 10 10 7 7 2 4 10) (4 3 3 3) (10 10 7 7 4 5) (5) (10 10 7 7 2 5 10) (5 3 3 3 3 3) (10 10 7 7 5) (5) (3 10 10 7 7 2 5 10) (4) (10 10 7 7 3 3 3 4) (4 4) (10 10 7 7 2 10 4) (4) (3 4 10 10 7 7 3) (3 3) (3 3 10 10 7 7 2 3 4 10) (3 3 3 3 3 10 10 7 7 3))) :legato 0)))) (load-port-info newobj (quote ((0 0 0 0 0 0 0 0 0) (0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0) (0) (0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0) (0 0 0 0 0) (0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0) (0 0 0 0 0) (0) (0 0 0 0 0) (0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0) (0 0 0 0 0 0 0 0 0 0 0) (0 0) (0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0) (0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0) (0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0) (0) (0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0) (0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0) (0 0) (0 0 0 0 0 0) (0) (0 0 0 0 0 0) (0 0 0 0 0) (0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0) (0 0 0 0 0) (0) (0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0) (0 0 0 0 0) (0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0) (0 0 0 0 0 0 0 0) (0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0) (0 0 0 0 0 0 0 0 0) (0) (0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0) (0 0 0 0 0 0 0 0 0) (0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0) (0 0 0 0 0 0 0) (0) (0 0 0 0 0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0 0 0 0) (0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0) (0 0 0 0 0) (0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0) (0 0 0 0 0 0 0 0 0) (0 0) (0 0 0 0) (0 0 0 0 0 0 0) (0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0) (0 0 0 0 0 0) (0 0) (0 0 0 0 0 0) (0 0) (0 0 0 0 0 0 0 0) (0 0) (0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0) (0 0 0 0 0) (0) (0 0 0 0 0 0) (0) (0 0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0) (0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 0 0) (0) (0 0 0 0 0 0 0 0) (0) (0 0 0 0 0 0 0 0) (0 0) (0 0 0 0 0 0 0) (0) (0 0 0 0 0 0 0) (0 0) (0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote ((nil (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.110101 nil "" (om-make-point 200 200) (om-make-point 400 500)))))) (set-name newobj nil) (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list nil (quote t) (quote :normal) 1 0 (om-make-point 400 22) (om-make-point 370 280) 0 1000 nil 1 (quote :midishare) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 24 2)) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 164 23) (quote "Settings for the MIDI channels") "" (om-make-point 648 426) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "GET-MIDIEVENTS2" (quote get-midievents) (quote ((om-load-inputfun (quote input-funbox) "midifile" "SELF" nil))) (om-make-point 505 538) nil nil nil "get-midievents" 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 100 26) (quote "All in channel 1") "" (om-make-point 493 471) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux1" (quote t) (quote nil) (om-make-point 478 426) (om-make-point 26 26) (list 1) "(1)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "EVENTMIDI-SEQ1" (quote eventmidi-seq) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "LTYPE" (list (quote keyon))) (om-load-inputfun (quote input-funbox) "no documentation" "LDATE" (list 0)) (om-load-inputfun (quote input-funbox) "no documentation" "LREF" (list 0)) (om-load-inputfun (quote input-funbox) "no documentation" "LPORT" (list 0)) (om-load-inputfun (quote input-funbox) "no documentation" "LCHAN" (list 1)) (om-load-inputfun (quote input-funbox) "no documentation" "LFIELDS" (list nil)))) (om-make-point 387 456) (om-make-point 93 61) (let ((newobj (when (find-class (quote eventmidi-seq) nil) (let ((rep (make-instance (quote eventmidi-seq) :ldate (quote (514 514 538 543 543 597 770 838 838 1162 1162 1486 1486 1811 1811 2065 2135 2135 2359 2459 2459 2459 2784 2784 3041 3108 3108 3124 3127 3127 3130 3132 3208 3362 3370 3373 3373 3378 3432 3432 3757 3757 4081 4081 4405 4405 4430 4435 4435 4662 4730 4730 5054 5054 5378 5378 5703 5703 5727 5732 5732 5786 5959 6027 6027 6351 6351 6676 6676 7000 7000 7003 7005 7324 7324 7324 7335 7335 7338 7343 7349 7649 7649 7662 7668 7670 7673 7678 7678 7903 7903 7903 7905 7905 7916 7973 7973 8297 8297 8327 8535 8622 8622 8638 8638 8946 8946 8949 8951 9270 9270 9270 9281 9281 9284 9289 9295 9595 9595 9611 9614 9614 9616 9619 9695 9849 9857 9859 9859 9865 9919 9919 10243 10243 10568 10568 10892 10892 10900 10903 10903 10905 11216 11216 11541 11541 11568 11573 11573 11573 11578 11865 11865 12146 12189 12189 12197 12200 12200 12203 12514 12514 12838 12838 12865 12870 12870 12870 12876 13162 13162 13443 13486 13486 13511 13516 13516 13570 13743 13811 13811 14135 14135 14459 14459 14784 14784 14800 14803 14803 14805 14808 14884 15038 15046 15049 15049 15054 15108 15108 15432 15432 15757 15757 16081 16081 16103 16113 16116 16116 16205 16405 16405 16730 16730 17054 17054 17378 17378 17395 17397 17397 17400 17403 17478 17632 17641 17643 17643 17649 17703 17703 18027 18027 18351 18351 18676 18676 18697 18708 18711 18711 18800 19000 19000 19324 19324 19354 19562 19649 19649 19665 19665 19973 19973 20297 20297 20535 20622 20622 20643 20846 20946 20946 21270 21270 21522 21595 21595 21619 21919 21919 21941 21949 21949 21949 22243 22243 22568 22568 22822 22892 22892 23116 23216 23216 23216 23541 23541 23797 23865 23865 24119 24189 24189 24413 24513 24513 24513 24838 24838 25095 25162 25162 25184 25195 25197 25197 25286 25486 25486 25811 25811 25813 26059 26068 26068 26135 26135 26459 26459 26468 26470 26473 26484 26784 26784 27108 27108 27432 27432 27757 27757 27778 27789 27792 27792 27881 28081 28081 28405 28405 28730 28730 29054 29054 29062 29065 29065 29068 29378 29378 29703 29703 29730 29735 29735 29735 29741 30027 30027 30308 30351 30351 30362 30362 30368 30608 30616 30616 30676 30676 31000 31000 31008 31011 31013 31024 31324 31324 31649 31649 31670 31681 31684 31684 31773 31973 31973 32297 32297 32622 32622 32946 32946 32970 32976 32976 33203 33270 33270 33595 33595 33919 33919 34243 34243 34495 34568 34568 34592 34892 34892 34913 34922 34922 34922 35216 35216 35540 35540 35776 35776 35865 35865 35895 35895 36100 36100 36189 36189 36208 36219 36424 36424 36513 36513 36738 36738 36838 36838 36846 36849 36851 36862 37162 37162 37486 37486 37811 37811 38135 38135 38138 38138 38151 38154 38157 38459 38459 38784 38784 38795 38795 38805 38805 38808 39108 39108 39432 39432 39435 39681 39689 39689 39757 39757 40081 40081 40349 40405 40405 40432 40489 40562 40651 40730 40730 40732 40735 41054 41054 41054 41065 41065 41068 41073 41078)) :ltype (quote (:note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note)) :lchan (quote (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)) :lref (quote (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)) :lport (quote (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)) :lfields (quote ((55 64 97) (49 55 164) (65 45 59) (66 68 95) (70 63 176) (67 54 133) (46 53 1041) (49 41 54) (55 49 76) (55 56 324) (49 56 324) (55 60 71) (49 51 63) (59 64 97) (53 55 165) (74 82 111) (53 41 54) (59 49 76) (69 49 79) (59 56 325) (53 56 325) (74 68 203) (59 60 70) (53 51 62) (69 47 67) (55 64 97) (49 55 165) (89 45 171) (77 35 100) (55 32 157) (83 36 56) (49 52 152) (84 46 114) (89 55 103) (84 74 60) (77 55 70) (55 59 76) (49 60 71) (49 41 54) (55 49 76) (55 56 324) (49 56 324) (55 60 70) (49 51 62) (59 64 98) (53 55 165) (64 45 59) (65 68 95) (69 63 176) (45 53 1041) (53 41 54) (59 49 75) (59 56 324) (53 56 324) (59 60 71) (53 51 63) (55 64 97) (49 55 165) (65 45 59) (66 68 95) (70 63 176) (67 54 133) (46 53 1041) (49 41 54) (55 49 76) (55 56 325) (49 56 325) (55 60 70) (49 51 62) (59 64 97) (53 55 165) (81 52 54) (86 32 54) (53 41 54) (59 49 76) (69 39 73) (77 36 62) (71 31 73) (74 33 73) (86 38 68) (81 39 62) (59 56 324) (53 56 324) (71 23 157) (69 30 146) (77 19 157) (74 19 146) (86 23 149) (81 40 149) (71 41 54) (69 51 54) (74 51 51) (77 47 46) (81 45 63) (86 26 52) (59 60 70) (53 51 62) (55 64 98) (50 55 165) (74 67 170) (40 50 73) (50 41 54) (55 49 75) (70 63 165) (82 67 113) (55 64 97) (49 55 165) (75 52 54) (82 32 54) (49 41 54) (55 49 76) (63 39 73) (73 36 62) (67 31 73) (70 33 73) (82 38 68) (75 39 62) (59 64 97) (53 55 164) (93 45 170) (81 35 100) (59 32 156) (87 36 57) (53 52 151) (88 46 113) (93 55 102) (88 74 59) (81 55 71) (59 59 76) (53 60 70) (53 41 54) (59 49 76) (59 56 325) (53 56 325) (59 60 70) (53 51 62) (55 64 97) (49 55 165) (39 59 73) (65 68 70) (70 67 102) (61 64 79) (49 41 54) (55 49 76) (55 56 324) (49 56 324) (58 49 421) (77 63 81) (82 75 492) (49 54 441) (70 67 490) (55 60 70) (49 51 62) (49 30 43) (59 64 97) (53 55 165) (50 59 73) (69 68 70) (74 67 103) (65 64 78) (53 41 54) (59 49 75) (59 56 324) (53 56 324) (62 49 421) (81 63 81) (86 75 492) (53 54 441) (74 67 489) (59 60 70) (53 51 62) (53 30 43) (55 64 98) (49 55 165) (65 45 59) (66 68 95) (70 63 176) (67 54 133) (46 53 1041) (49 41 54) (55 49 75) (55 56 324) (49 56 324) (55 60 71) (49 51 63) (59 64 97) (53 55 165) (93 45 170) (81 35 100) (59 32 156) (87 36 57) (53 52 151) (88 46 113) (93 55 103) (88 74 59) (81 55 70) (59 59 75) (53 60 70) (53 41 54) (59 49 76) (59 56 325) (53 56 325) (59 60 70) (53 51 62) (55 64 97) (49 55 165) (72 69 86) (39 36 1198) (79 51 1152) (61 37 1262) (73 44 1076) (49 41 54) (55 49 76) (55 56 324) (49 56 324) (55 60 70) (49 51 62) (59 64 98) (53 55 165) (93 45 170) (81 35 100) (59 32 157) (87 36 57) (53 52 151) (88 46 114) (93 55 103) (88 74 59) (81 55 70) (59 59 76) (53 60 70) (53 41 54) (59 49 75) (59 56 324) (53 56 324) (59 60 71) (53 51 62) (55 64 97) (50 55 165) (75 69 87) (40 58 616) (79 51 613) (50 48 613) (76 44 524) (50 41 54) (55 49 76) (55 64 98) (49 55 165) (73 67 170) (45 50 73) (49 41 54) (55 49 75) (70 63 165) (82 67 113) (59 64 97) (53 55 165) (53 41 54) (59 49 76) (74 89 111) (59 56 324) (53 56 324) (86 84 198) (74 76 81) (59 60 70) (53 51 62) (55 64 98) (48 55 165) (81 76 83) (48 41 54) (55 49 75) (75 26 122) (55 56 324) (48 56 324) (63 56 70) (72 67 51) (67 58 70) (81 63 78) (55 60 70) (48 51 62) (60 64 97) (54 55 164) (75 82 110) (54 41 54) (60 49 76) (69 49 79) (60 56 325) (54 56 325) (75 68 203) (60 60 70) (54 51 62) (69 47 68) (58 64 97) (53 55 165) (74 82 111) (53 41 54) (58 49 76) (67 49 79) (58 56 325) (53 56 325) (74 68 203) (58 60 70) (53 51 62) (67 47 67) (58 64 97) (53 55 165) (78 69 86) (43 58 616) (82 51 614) (53 48 614) (79 44 525) (53 41 55) (58 49 76) (58 64 97) (52 55 165) (36 56 119) (70 75 73) (84 64 59) (76 72 45) (52 41 54) (58 49 76) (58 64 98) (53 55 165) (43 38 45) (58 51 57) (55 48 62) (65 51 46) (53 41 54) (58 49 75) (58 56 324) (53 56 324) (58 60 71) (53 51 63) (58 64 97) (52 55 165) (75 69 87) (48 36 1197) (82 51 1151) (64 37 1262) (76 44 1076) (52 41 54) (58 49 76) (58 56 325) (52 56 325) (58 60 70) (52 51 62) (57 64 97) (50 55 165) (41 59 73) (65 68 70) (72 67 103) (62 64 78) (50 41 54) (57 49 76) (57 56 324) (50 56 324) (60 49 421) (77 63 81) (84 75 492) (50 54 441) (72 67 489) (57 60 70) (50 51 62) (50 30 43) (55 64 98) (50 55 165) (74 90 184) (76 87 181) (46 74 156) (74 43 38) (46 42 49) (76 43 43) (50 41 54) (55 49 75) (55 64 97) (49 55 165) (45 38 46) (55 51 57) (51 48 63) (61 51 46) (49 41 54) (55 49 76) (55 64 97) (49 55 164) (72 69 87) (39 36 1197) (79 51 1151) (61 37 1262) (73 44 1076) (49 41 54) (55 49 76) (55 56 325) (49 56 325) (55 60 70) (49 51 62) (59 64 97) (53 55 165) (64 45 60) (65 68 94) (69 63 175) (45 53 1040) (53 41 54) (59 49 76) (59 56 324) (53 56 324) (59 60 70) (53 51 62) (55 64 98) (49 55 165) (82 76 83) (49 41 54) (55 49 75) (77 26 121) (55 56 324) (49 56 324) (65 56 71) (73 67 51) (67 58 70) (82 63 78) (55 60 70) (49 51 62) (59 64 98) (53 55 165) (77 76 102) (81 64 113) (53 41 54) (59 49 75) (80 50 102) (76 44 97) (77 83 97) (81 64 113) (59 56 324) (53 56 324) (76 50 216) (80 71 189) (81 66 114) (77 85 98) (59 60 71) (53 51 63) (77 80 92) (81 61 100) (55 64 97) (49 55 165) (39 38 46) (55 51 56) (51 48 62) (61 51 46) (49 41 54) (55 49 76) (55 56 325) (49 56 325) (55 60 70) (49 51 62) (59 64 97) (53 55 165) (65 49 81) (53 40 81) (38 45 68) (59 46 46) (57 50 56) (53 41 54) (59 49 76) (59 56 324) (53 56 324) (81 73 59) (77 72 43) (86 75 44) (74 73 33) (71 54 46) (59 60 70) (53 51 62) (55 64 98) (50 55 165) (40 56 119) (67 75 73) (82 64 60) (74 72 46) (50 41 54) (55 49 75) (55 64 97) (49 55 165) (45 43 24) (49 41 54) (55 49 76) (67 55 49) (73 52 146) (67 43 100) (61 55 79) (59 64 97) (53 55 165) (81 52 54) (86 32 54) (53 41 54) (59 49 76) (69 39 73) (77 36 62) (71 31 73) (74 33 72) (86 38 67) (81 39 62)))))) (setf (name rep) "Midi Events sequence") rep)))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (scale approx fontsize staff cmnpref deltapict outport inport zoom notechancolor? grillestep mode winsize winpos palette-mode obj-mode show-stems player)) (list nil 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) 0 0 1 nil 1000 0 18350450 2621450 0 0 (quote t) (quote :midishare))) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "EVENTMIDI-SEQ2" (quote eventmidi-seq) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "LTYPE" (list (quote keyon))) (om-load-inputfun (quote input-funbox) "no documentation" "LDATE" (list 0)) (om-load-inputfun (quote input-funbox) "no documentation" "LREF" (list 0)) (om-load-inputfun (quote input-funbox) "no documentation" "LPORT" (list 0)) (om-load-inputfun (quote input-funbox) "no documentation" "LCHAN" (list 1)) (om-load-inputfun (quote input-funbox) "no documentation" "LFIELDS" (list nil)))) (om-make-point 44 418) (om-make-point 87 79) (let ((newobj (when (find-class (quote eventmidi-seq) nil) (let ((rep (make-instance (quote eventmidi-seq) :ldate (quote (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3614 3614 3614 3681 3681 3938 3938 4005 4005 4176 4243 4262 4262 4262 4286 4330 4330 4586 4586 4654 4654 4824 4824 4824 4884 4892 4911 4911 4911 4978 4978 5235 5235 5303 5303 5470 5538 5559 5559 5559 5597 5627 5627 5884 5884 5951 5951 6119 6186 6208 6208 6208 6208 6276 6276 6532 6532 6600 6600 6770 6838 6857 6857 6876 6876 6924 6924 7181 7181 7249 7249 7419 7446 7486 7505 7505 7573 7830 7830 7897 7897 7919 8062 8062 8130 8154 8154 8154 8203 8222 8222 8300 8386 8478 8478 8478 8500 8546 8546 8711 8778 8803 8803 8803 8803 8870 8870 9127 9127 9195 9195 9362 9430 9438 9451 9451 9451 9519 9519 9776 9776 9843 9843 10011 10014 10032 10043 10078 10100 10100 10100 10168 10168 10424 10424 10492 10492 10643 10643 10662 10730 10749 10749 10749 10792 10816 10816 10900 10965 11073 11073 11073 11097 11141 11141 11311 11378 11378 11397 11397 11397 11465 11465 11722 11722 11789 11789 11957 12024 12046 12046 12046 12046 12114 12114 12370 12370 12438 12438 12605 12673 12695 12695 12695 12695 12762 12762 13019 13086 13249 13249 13316 13316 13343 13343 13362 13362 13411 13411 13573 13641 13668 13735 13897 13897 13932 13965 13965 13992 13992 13992 14059 14059 14316 14316 14384 14384 14554 14622 14641 14641 14659 14659 14708 14708 14965 14965 15032 15032 15203 15230 15270 15289 15289 15289 15357 15357 15614 15614 15681 15681 15846 15914 15938 15938 15938 15962 16005 16005 16262 16262 16330 16330 16495 16500 16500 16559 16562 16586 16586 16586 16654 16654 16911 16911 16978 16978 17149 17216 17235 17235 17235 17259 17303 17303 17559 17559 17627 17627 17797 17797 17797 17857 17865 17884 17884 17951 18208 18208 18208 18262 18276 18276 18443 18511 18532 18532 18532 18562 18600 18600 18768 18835 18857 18857 18911 18924 19092 19159 19181 19181 19181 19181 19249 19249 19505 19505 19573 19573 19738 19805 19816 19830 19830 19830 19897 19897 20154 20154 20222 20222 20386 20392 20411 20422 20454 20478 20478 20478 20546 20546 20803 20803 20870 20870 21038 21105 21113 21127 21127 21127 21195 21195 21451 21451 21519 21519 21686 21689 21708 21719 21754 21776 21776 21776 21843 21843 21946 22013 22100 22100 22100 22122 22168 22168 22338 22405 22424 22424 22424 22424 22492 22492 22749 22749 22816 22816 22986 23054 23073 23073 23073 23141 23397 23397 23465 23465 23632 23700 23708 23722 23722 23789 23957 24024 24046 24046 24046 24113 24113 24113 24281 24284 24303 24313 24349 24370 24370 24438 24551 24608 24608 24676 24678 24695 24695 24695 24695 24762 24762 24762 24932 24932 25000 25000 25013 25019 25019 25086 25257 25324 25343 25343 25343 25343 25365 25411 25411 25411 25581 25581 25632 25649 25668 25668 25668 25735 25992 25992 25992 25992 26046 26059 26059 26059 26227 26295 26316 26316 26341 26384 26641 26641 26641 26657 26708 26708 26876 26905 26943 26965 26965 27032 27084 27205 27289 27289 27289 27289 27346 27357 27357 27357 27527 27527 27595 27595 27613 27613 27613 27681 27935 27938 27938 27938 27938 28005 28005 28005 28176 28243 28262 28262 28262 28330 28586 28586 28586 28586 28646 28654 28654 28654 28824 28824 28892 28892 28911 28911 28911 28978 29111 29149 29219 29235 29235 29235 29235 29303 29303 29303 29473 29541 29559 29559 29559 29627 29884 29884 29884 29884 29908 29951 29951 29951 30119 30119 30186 30186 30208 30208 30246 30276 30532 30532 30532 30532 30541 30600 30600 30600 30768 30768 30835 30835 30857 30857 30857 30924 31038 31095 31165 31181 31181 31181 31181 31249 31249 31249 31416 31416 31484 31484 31500 31505 31505 31573 31830 31830 31830 31851 31897 31897 32065 32068 32119 32132 32154 32154 32154 32222 32478 32478 32478 32478 32478 32546 32546 32546 32711 32711 32778 32778 32803 32805 32805 32870 33127 33127 33127 33132 33132 33195 33195 33195 33359 33359 33427 33427 33451 33451 33451 33519 33678 33684 33743 33751 33765 33776 33776 33776 33843 33843 34008 34008 34076 34076 34100 34100 34100 34100 34168 34168 34273 34332 34332 34341 34400 34400 34424 34424 34424 34435 34492 34492 34532 34600 34657 34657 34724 34724 34749 34749 34749 34749 34749 34749 34816 34816 34816 34816 35073 35073 35141 35141 35305 35373 35397 35397 35416 35416 35465 35465 35722 35722 35789 35789 35954 35986 36022 36046 36046 36046 36113 36113 36370 36370 36438 36438 36608 36676 36681 36695 36695 36695 36762 36762 37019 37019 37086 37086 37257 37257 37276 37286 37324 37343 37343 37343 37411 37411 37668 37668 37735 37735 37905 37973 37992 37992 37992 38030 38059 38059 38316 38316 38384 38384 38554 38622 38640 38640 38640 38640 38708 38708 38965 38965 39032 39032 39200 39268 39289 39289 39289 39313 39357 39357 39524 39592 39613 39681 39849 39851 39851 39911 39916 39938 39938 39938 40005 40005 40262 40262 40330 40330 40495 40562 40586 40586 40605 40605 40654 40654 40911 40911 40978 40978 41143 41176 41211 41235 41235 41235 41303 41303 41559 41559 41627 41627 41792 41859 41884 41884 41884 41922 41951 41951 42208 42208 42276 42276 42440 42508 42532 42532 42532 42532 42600 42600 42857 42857 42924 42924 43092 43159 43181 43181 43181 43181 43249 43249 43505 43505 43573 43573 43740 43808 43830 43830 43830 43830 43897 43897 44154 44154 44222 44222 44449)) :ltype (quote (:ctrlchange :ctrlchange :ctrlchange :ctrlchange :ctrlchange :ctrlchange :progchange :ctrlchange :ctrlchange :ctrlchange :ctrlchange :ctrlchange :ctrlchange :ctrlchange :progchange :keyon :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyoff :keyon :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyoff :keyon :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyoff :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyoff :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyoff :keyon :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyon :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyon :keyoff :keyon :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyoff :keyon :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyon :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyoff :keyon :keyoff :keyon :keyoff :keyon :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyoff :keyon :keyoff :keyon :keyoff :keyon :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyoff :keyon :keyon :keyon :keyoff :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyoff :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyon :keyon :keyon :keyoff :keyon :keyoff :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyoff :keyon :keyoff :keyon :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyon :keyoff :keyon :keyon :keyoff :keyon :keyoff :keyoff :keyon :keyon :keyoff :keyoff :keyoff)) :lchan (quotelref (quotelport (quotelfields (quote ((93 0) (91 40) (123 0) (10 64) (121 0) (7 100) (32) (64 0) (93 0) (91 40) (123 0) (10 64) (121 0) (7 90) (32) (39 82) (35 60) (42 70) (42 64) (35 64) (42 90) (37 70) (37 64) (42 64) (42 40) (42 64) (35 60) (42 80) (46 85) (39 64) (42 64) (35 64) (42 90) (37 80) (37 64) (42 64) (46 64) (39 82) (42 50) (39 64) (42 64) (35 60) (42 80) (38 76) (42 64) (35 64) (42 90) (37 70) (37 64) (42 64) (42 40) (42 64) (45 61) (35 60) (42 80) (38 64) (42 64) (35 64) (42 90) (37 85) (37 64) (42 64) (42 50) (42 64) (35 60) (42 70) (45 64) (39 89) (42 64) (35 64) (42 80) (37 70) (37 64) (42 64) (42 40) (42 64) (35 60) (42 80) (39 64) (34 82) (42 64) (35 64) (42 80) (37 80) (37 64) (42 64) (42 50) (34 64) (42 64) (42 70) (38 69) (42 64) (42 70) (37 80) (37 64) (42 64) (38 64) (38 69) (42 40) (42 64) (35 60) (42 80) (45 68) (38 64) (42 64) (35 64) (45 64) (45 78) (40 77) (35 60) (42 80) (45 64) (42 64) (35 64) (42 50) (42 64) (35 60) (42 80) (40 64) (39 78) (42 64) (35 64) (42 90) (37 70) (37 64) (42 64) (42 40) (42 64) (39 64) (34 82) (35 60) (42 80) (42 64) (35 64) (42 90) (37 85) (37 64) (42 64) (42 50) (27 60) (34 64) (27 64) (42 64) (35 60) (42 70) (38 72) (42 64) (35 64) (42 90) (37 70) (37 64) (42 64) (38 64) (45 82) (42 40) (42 64) (35 60) (42 80) (50 74) (45 64) (42 64) (35 64) (50 64) (45 100) (38 89) (42 90) (37 80) (45 64) (37 64) (42 64) (42 50) (42 64) (38 64) (40 82) (35 60) (42 80) (42 64) (35 64) (42 90) (37 70) (37 64) (42 64) (42 40) (42 64) (35 60) (42 80) (40 64) (33 82) (42 64) (35 64) (42 90) (37 85) (37 64) (42 64) (42 50) (42 64) (35 60) (42 80) (33 64) (38 89) (42 64) (35 64) (42 90) (42 64) (38 40) (42 60) (42 64) (38 64) (35 60) (42 70) (38 64) (45 82) (42 64) (35 64) (38 50) (38 64) (42 80) (42 64) (38 60) (42 60) (45 64) (42 64) (38 64) (35 60) (42 70) (39 89) (42 64) (35 64) (42 80) (37 70) (37 64) (42 64) (42 40) (42 64) (35 60) (42 80) (39 64) (34 82) (42 64) (35 64) (42 80) (37 80) (37 64) (42 64) (42 50) (34 64) (42 64) (35 60) (46 54) (38 82) (46 64) (35 64) (42 70) (37 80) (37 64) (42 64) (42 40) (42 64) (35 60) (42 80) (45 85) (38 64) (42 64) (35 64) (35 60) (42 80) (42 64) (35 64) (42 50) (45 64) (38 82) (38 64) (42 64) (35 60) (42 70) (39 82) (42 64) (35 64) (42 80) (37 70) (37 64) (42 64) (42 40) (42 64) (35 60) (42 80) (46 85) (39 64) (42 64) (35 64) (42 80) (37 80) (37 64) (42 64) (46 64) (39 82) (42 50) (39 64) (42 64) (42 80) (38 78) (42 64) (40 80) (42 90) (37 70) (38 64) (37 64) (42 64) (42 40) (42 64) (35 60) (42 80) (41 75) (40 64) (42 64) (35 64) (37 90) (37 64) (42 90) (45 76) (41 64) (42 64) (42 50) (42 64) (35 60) (46 54) (45 64) (39 78) (46 64) (35 64) (42 70) (37 80) (37 64) (42 64) (42 40) (42 64) (39 64) (34 82) (35 60) (42 80) (42 64) (35 64) (35 60) (42 80) (42 64) (35 64) (42 50) (27 60) (34 64) (27 64) (42 64) (35 60) (42 80) (38 78) (42 64) (35 64) (42 90) (37 70) (37 64) (42 64) (42 40) (42 64) (38 64) (45 82) (35 60) (42 80) (42 64) (35 64) (42 90) (37 85) (37 64) (42 64) (42 50) (26 60) (45 64) (26 64) (42 64) (35 60) (42 70) (40 81) (42 64) (35 64) (40 64) (40 71) (46 73) (42 80) (37 70) (40 64) (37 64) (42 64) (42 40) (42 64) (35 60) (42 80) (46 64) (33 70) (42 64) (35 64) (42 80) (37 80) (37 64) (42 64) (42 50) (42 64) (42 80) (33 64) (38 78) (42 64) (42 90) (37 70) (37 64) (42 64) (42 50) (42 64) (38 64) (33 82) (42 80) (42 64) (38 30) (38 64) (38 55) (42 90) (37 85) (37 64) (42 64) (38 64) (42 50) (26 60) (33 64) (26 64) (42 64) (51 70) (33 70) (51 64) (33 64) (21 77) (38 60) (38 64) (21 64) (31 62) (42 90) (37 60) (51 90) (51 64) (37 64) (42 64) (38 40) (51 70) (51 64) (38 64) (31 64) (29 68) (51 80) (51 64) (38 50) (38 64) (42 100) (37 70) (51 90) (27 64) (29 64) (51 64) (37 64) (42 64) (39 79) (51 70) (27 64) (51 64) (51 80) (39 64) (38 71) (51 64) (40 68) (42 70) (37 70) (51 90) (38 64) (51 64) (37 64) (42 64) (51 70) (51 64) (41 75) (51 90) (40 64) (51 64) (42 68) (42 100) (51 90) (41 64) (51 64) (42 64) (51 70) (42 64) (51 64) (51 70) (43 85) (51 64) (43 64) (43 73) (45 64) (42 90) (37 60) (51 90) (43 64) (51 64) (37 64) (42 64) (38 40) (51 70) (51 64) (38 64) (51 80) (45 64) (46 75) (51 64) (46 64) (50 67) (42 100) (37 70) (51 90) (51 64) (37 64) (42 64) (51 70) (51 64) (51 80) (50 64) (43 71) (51 64) (50 70) (42 80) (37 70) (51 90) (43 64) (51 64) (37 64) (42 64) (38 40) (51 70) (51 64) (38 64) (51 80) (50 64) (36 69) (51 64) (36 64) (36 81) (36 64) (42 62) (42 100) (37 70) (51 90) (51 64) (37 64) (42 64) (51 70) (51 64) (51 70) (42 64) (43 76) (51 64) (55 59) (42 100) (37 70) (51 90) (43 64) (51 64) (37 64) (42 64) (38 40) (51 50) (51 64) (38 64) (51 80) (49 71) (55 64) (51 64) (46 77) (42 100) (37 70) (51 90) (49 64) (51 64) (37 64) (42 64) (38 40) (51 50) (51 64) (38 64) (51 80) (46 64) (36 70) (51 64) (36 64) (24 77) (24 64) (34 62) (42 70) (37 70) (51 90) (51 64) (37 64) (42 64) (38 40) (51 70) (51 64) (38 64) (34 64) (33 68) (51 90) (51 64) (31 64) (42 100) (51 90) (33 64) (51 64) (42 64) (51 70) (42 79) (31 64) (51 64) (42 64) (41 69) (51 80) (51 64) (41 64) (48 68) (42 80) (37 70) (51 90) (51 64) (37 64) (42 64) (38 40) (51 60) (51 64) (38 64) (51 80) (48 64) (45 63) (51 64) (42 100) (37 80) (51 100) (45 64) (41 81) (51 64) (37 64) (42 64) (38 60) (51 70) (51 64) (38 64) (35 90) (41 64) (40 78) (35 64) (28 55) (38 70) (40 64) (38 64) (28 64) (34 78) (42 80) (51 90) (51 64) (42 64) (38 60) (51 80) (51 64) (38 64) (38 80) (51 80) (34 64) (33 77) (51 64) (38 64) (33 64) (35 80) (38 50) (33 70) (38 64) (35 64) (42 100) (51 90) (39 63) (33 64) (51 64) (42 64) (38 40) (38 64) (38 60) (51 80) (51 64) (38 64) (35 60) (38 50) (42 70) (49 40) (39 64) (39 89) (49 64) (42 64) (38 64) (35 64) (42 80) (37 80) (37 64) (42 64) (42 50) (42 64) (35 60) (42 80) (39 64) (34 82) (42 64) (35 64) (42 90) (37 80) (37 64) (42 64) (42 50) (34 64) (42 64) (35 60) (42 70) (38 78) (42 64) (35 64) (42 80) (37 70) (37 64) (42 64) (42 40) (42 64) (38 64) (45 82) (35 60) (42 80) (42 64) (35 64) (42 80) (37 80) (37 64) (42 64) (26 60) (42 50) (45 64) (26 64) (42 64) (35 60) (42 70) (39 76) (42 64) (35 64) (42 90) (37 70) (37 64) (42 64) (42 40) (42 64) (35 60) (42 80) (46 61) (39 64) (42 64) (35 64) (42 90) (37 80) (37 64) (42 64) (42 50) (42 64) (46 64) (38 82) (35 60) (42 80) (42 64) (35 64) (42 90) (37 70) (37 64) (42 64) (42 40) (42 64) (35 60) (42 80) (45 85) (38 64) (42 64) (35 64) (37 90) (37 64) (42 90) (42 64) (42 50) (45 64) (38 82) (38 64) (42 64) (39 89) (35 60) (42 70) (42 64) (35 64) (42 70) (37 80) (37 64) (42 64) (42 40) (42 64) (35 60) (42 80) (39 64) (34 82) (42 64) (35 64) (35 60) (42 80) (42 64) (35 64) (42 50) (34 64) (42 64) (35 60) (42 70) (38 76) (42 64) (35 64) (42 90) (37 80) (37 64) (42 64) (42 40) (42 64) (35 60) (42 70) (45 61) (38 64) (42 64) (35 64) (42 90) (37 78) (37 64) (42 64) (42 50) (42 64) (35 60) (42 80) (45 64) (40 82) (42 64) (35 64) (42 90) (37 70) (37 64) (42 64) (42 40) (42 64) (40 64) (33 82) (35 60) (42 80) (42 64) (35 64) (42 90) (37 85) (37 64) (42 64) (42 50) (42 64) (35 60) (42 80) (33 64) (38 72) (42 64) (35 64) (42 90) (37 70) (37 64) (42 64) (38 64)))))) (setf (name rep) "Midi Events sequence") rep)))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (scale approx fontsize staff cmnpref deltapict outport inport zoom notechancolor? grillestep mode winsize winpos palette-mode obj-mode show-stems player)) (list nil 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) 0 0 1 nil 1000 0 18350450 2621450 0 0 (quote t) (quote :midishare))) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 111 51) (quote "Final sequence -->$(play with \"P\" key)") "" (om-make-point 111 669) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "EVENTMIDI-SEQ2" (quote eventmidi-seq) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "LTYPE" (list (quote keyon))) (om-load-inputfun (quote input-funbox) "no documentation" "LDATE" (list 0)) (om-load-inputfun (quote input-funbox) "no documentation" "LREF" (list 0)) (om-load-inputfun (quote input-funbox) "no documentation" "LPORT" (list 0)) (om-load-inputfun (quote input-funbox) "no documentation" "LCHAN" (list 1)) (om-load-inputfun (quote input-funbox) "no documentation" "LFIELDS" (list nil)))) (om-make-point 239 663) (om-make-point 74 57) (let ((newobj (when (find-class (quote eventmidi-seq) nil) (let ((rep (make-instance (quote eventmidi-seq) :ldate (quote (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 514 514 514 514 514 538 543 543 597 770 838 838 838 838 1076 1162 1162 1162 1162 1162 1486 1486 1486 1486 1724 1724 1811 1811 1811 1811 1811 2065 2135 2135 2135 2135 2359 2370 2459 2459 2459 2459 2459 2459 2784 2784 2784 2784 3019 3041 3108 3108 3108 3108 3108 3124 3127 3127 3130 3132 3208 3362 3370 3373 3373 3378 3432 3432 3432 3432 3670 3757 3757 3757 3757 3776 4081 4081 4081 4081 4319 4405 4405 4405 4405 4430 4435 4435 4662 4730 4730 4730 4730 4962 4962 5054 5054 5054 5054 5054 5286 5378 5378 5378 5378 5378 5611 5703 5703 5703 5703 5703 5727 5732 5732 5786 5959 6027 6027 6027 6027 6262 6351 6351 6351 6351 6351 6676 6676 6676 6676 6911 6914 7000 7000 7000 7000 7000 7003 7005 7324 7324 7324 7324 7324 7335 7335 7338 7343 7349 7543 7562 7649 7649 7649 7649 7649 7662 7668 7670 7673 7678 7678 7865 7903 7903 7903 7905 7905 7916 7973 7973 7973 7973 7973 8211 8297 8297 8297 8297 8297 8327 8535 8622 8622 8622 8622 8638 8638 8857 8946 8946 8946 8946 8946 8949 8951 9270 9270 9270 9270 9270 9281 9281 9284 9289 9295 9505 9595 9595 9595 9595 9595 9611 9614 9614 9616 9619 9695 9849 9857 9859 9859 9865 9919 9919 9919 10149 10149 10243 10243 10243 10243 10262 10473 10568 10568 10568 10797 10797 10892 10892 10892 10892 10892 10900 10903 10903 10905 11216 11216 11216 11216 11454 11541 11541 11541 11541 11559 11568 11573 11573 11573 11578 11865 11865 11865 11865 12103 12146 12189 12189 12189 12189 12189 12197 12200 12200 12203 12514 12514 12514 12514 12746 12838 12838 12838 12838 12838 12865 12870 12870 12870 12876 13162 13162 13162 13162 13395 13400 13443 13486 13486 13486 13486 13486 13511 13516 13516 13570 13743 13811 13811 13811 13811 14049 14135 14135 14135 14135 14135 14459 14459 14459 14459 14697 14697 14784 14784 14784 14784 14800 14803 14803 14805 14808 14884 15038 15046 15049 15049 15054 15108 15108 15108 15108 15108 15343 15432 15432 15432 15432 15432 15668 15757 15757 15757 15757 15992 16081 16081 16081 16081 16081 16103 16113 16116 16116 16205 16405 16405 16405 16405 16638 16730 16730 16730 16730 16730 17054 17054 17054 17054 17286 17292 17378 17378 17378 17378 17378 17395 17397 17397 17400 17403 17478 17632 17641 17643 17643 17649 17703 17703 17703 17703 17938 18027 18027 18027 18027 18027 18351 18351 18351 18351 18586 18589 18676 18676 18676 18676 18676 18697 18708 18711 18711 18800 18913 19000 19000 19000 19000 19000 19238 19324 19324 19324 19324 19324 19354 19562 19649 19649 19649 19649 19665 19665 19886 19973 19973 19973 19973 20297 20297 20297 20297 20532 20535 20622 20622 20622 20622 20643 20846 20857 20946 20946 20946 20946 20946 21181 21184 21270 21270 21270 21270 21508 21508 21522 21595 21595 21595 21595 21595 21595 21619 21832 21832 21919 21919 21919 21919 21941 21949 21949 21949 22157 22243 22243 22243 22243 22243 22243 22481 22481 22568 22568 22568 22568 22822 22892 22892 22892 22892 22892 22892 23116 23127 23216 23216 23216 23216 23216 23541 23541 23541 23541 23541 23776 23797 23865 23865 23865 23865 24105 24119 24189 24189 24189 24189 24189 24189 24413 24427 24427 24513 24513 24513 24513 24513 24838 24838 24838 24838 24838 24838 25076 25095 25162 25162 25162 25162 25184 25195 25197 25197 25286 25486 25486 25486 25486 25486 25486 25724 25724 25811 25811 25811 25811 25813 26049 26059 26068 26068 26135 26135 26135 26135 26135 26135 26373 26459 26459 26459 26459 26468 26470 26473 26484 26784 26784 26784 26784 26784 26784 27019 27019 27108 27108 27108 27108 27432 27432 27432 27432 27432 27432 27668 27668 27757 27757 27757 27757 27778 27789 27792 27792 27881 27995 28081 28081 28081 28081 28081 28081 28316 28316 28405 28405 28405 28405 28730 28730 28730 28730 28730 28965 28968 29054 29054 29054 29054 29062 29065 29065 29068 29378 29378 29378 29378 29378 29378 29611 29611 29703 29703 29703 29705 29730 29735 29735 29735 29741 30027 30027 30027 30027 30027 30032 30259 30259 30308 30351 30351 30351 30351 30362 30362 30368 30578 30584 30608 30616 30616 30676 30676 30676 30676 30676 30908 30908 31000 31000 31000 31000 31000 31008 31011 31013 31024 31232 31232 31241 31324 31324 31324 31324 31324 31432 31557 31557 31649 31649 31649 31649 31649 31649 31649 31670 31681 31684 31684 31773 31973 31973 31973 31973 32205 32297 32297 32297 32297 32316 32622 32622 32622 32622 32854 32946 32946 32946 32946 32946 32970 32976 32976 33203 33270 33270 33270 33270 33508 33595 33595 33595 33595 33595 33919 33919 33919 33919 34157 34157 34243 34243 34243 34243 34243 34495 34568 34568 34568 34568 34592 34805 34892 34892 34892 34892 34892 34913 34922 34922 34922 35216 35216 35216 35216 35454 35540 35540 35540 35540 35540 35776 35776 35865 35865 35865 35865 35895 35895 36100 36100 36100 36189 36189 36189 36189 36189 36208 36219 36424 36424 36424 36513 36513 36513 36738 36738 36749 36751 36838 36838 36838 36838 36838 36846 36849 36851 36862 37162 37162 37162 37162 37395 37486 37486 37486 37486 37505 37811 37811 37811 37811 38043 38135 38135 38135 38135 38135 38138 38138 38151 38154 38157 38459 38459 38459 38459 38692 38784 38784 38784 38784 38784 38795 38795 38805 38805 38808 39108 39108 39108 39108 39340 39432 39432 39432 39432 39432 39435 39681 39689 39689 39757 39757 39757 39757 39992 40081 40081 40081 40081 40081 40349 40405 40405 40405 40405 40432 40489 40562 40640 40651 40730 40730 40730 40730 40730 40732 40735 41054 41054 41054 41054 41054 41065 41065 41068 41073 41078)) :ltype (quote (:ctrlchange :ctrlchange :pitchbend :ctrlchange :ctrlchange :progchange :ctrlchange :ctrlchange :pitchbend :ctrlchange :ctrlchange :progchange :ctrlchange :ctrlchange :pitchbend :ctrlchange :ctrlchange :progchange :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note)) :lchan (quote (3 3 3 3 3 3 2 2 2 2 2 2 1 1 1 1 1 1 10 10 2 1 1 1 1 1 1 1 10 10 1 1 10 10 10 2 1 1 10 10 1 1 10 2 10 10 2 1 1 1 10 10 1 1 1 10 10 10 2 1 1 1 10 10 1 1 10 1 10 10 2 1 1 1 1 1 1 1 1 1 1 1 1 1 10 10 1 1 10 10 10 1 1 2 10 10 1 1 10 10 2 1 1 1 1 1 1 10 10 1 1 10 2 10 10 2 1 1 2 10 10 2 1 1 10 10 10 2 1 1 1 1 1 1 1 10 10 1 1 10 10 10 2 1 1 10 10 1 1 10 2 10 10 2 1 1 1 1 10 10 1 1 1 1 1 1 1 1 2 10 10 10 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 10 10 2 1 1 10 10 10 2 1 1 1 1 10 10 1 1 1 1 10 10 10 2 1 1 1 1 10 10 1 1 1 1 1 1 1 1 10 10 10 2 1 1 1 1 1 1 1 1 1 1 1 1 1 10 1 1 10 10 10 10 1 1 2 10 10 1 1 10 10 10 10 2 1 1 1 1 1 1 10 10 1 1 10 10 10 1 1 2 1 1 1 1 1 10 10 1 1 10 1 10 10 2 1 1 1 1 1 1 10 10 1 1 10 10 10 2 1 1 1 1 1 1 1 10 10 1 1 10 2 1 10 10 2 1 1 1 1 1 1 1 10 10 1 1 10 10 10 2 1 1 10 10 1 1 10 2 10 2 1 1 1 1 1 1 1 1 1 1 1 1 1 10 10 2 1 1 10 10 10 2 1 1 10 10 2 1 1 10 10 10 2 1 1 1 1 1 1 1 10 10 1 1 10 10 10 2 1 1 10 10 1 1 10 2 10 10 2 1 1 1 1 1 1 1 1 1 1 1 1 1 10 10 1 1 10 10 10 2 1 1 10 10 1 1 10 2 10 10 2 1 1 1 1 1 1 1 2 10 10 2 1 1 10 10 10 2 1 1 1 1 10 10 1 1 1 1 10 10 2 1 1 10 10 1 1 10 1 10 2 1 1 1 1 10 10 10 10 1 1 10 2 10 2 1 1 10 2 1 10 10 10 2 1 1 1 10 10 10 2 1 1 1 1 1 1 10 10 10 10 2 1 1 10 2 10 2 1 1 1 10 10 10 2 1 1 1 10 10 2 1 1 1 10 10 2 1 1 10 1 10 2 1 1 2 1 10 10 10 2 1 1 1 10 10 10 2 1 1 1 10 10 10 2 1 1 10 1 10 2 1 1 1 1 1 1 1 10 10 10 2 1 1 10 10 10 2 1 1 1 2 1 1 1 10 10 10 2 1 1 10 10 2 1 1 1 1 1 1 10 10 10 2 1 1 10 10 10 2 1 1 10 10 10 2 1 1 10 10 10 2 1 1 1 1 1 1 1 2 10 10 10 2 1 1 10 10 10 2 1 1 10 10 2 1 1 10 2 10 2 1 1 1 1 1 1 10 10 10 2 1 1 10 10 10 1 1 2 1 1 1 1 1 10 10 10 1 1 2 10 10 1 10 2 1 1 1 1 1 2 10 1 1 1 10 10 2 1 1 10 10 10 10 2 1 1 1 1 1 1 10 10 2 10 10 2 1 1 10 10 10 10 10 10 10 2 1 1 1 1 1 1 1 10 10 1 1 10 10 10 1 1 2 10 10 1 1 10 10 10 2 1 1 1 1 1 1 10 10 1 1 10 10 10 2 1 1 10 10 1 1 10 2 10 10 2 1 1 1 10 10 1 1 1 10 10 10 2 1 1 1 1 1 1 10 10 1 1 10 10 10 2 1 1 1 1 10 10 1 1 1 1 10 1 1 10 10 2 1 1 1 1 10 1 1 10 1 1 1 1 10 2 10 10 2 1 1 1 1 1 1 10 10 1 1 10 10 10 1 1 2 10 10 1 1 10 10 10 2 1 1 1 1 1 1 1 10 10 1 1 10 10 10 2 1 1 1 1 1 1 1 10 10 1 1 10 10 10 2 1 1 1 1 1 1 10 10 1 1 10 10 10 2 1 1 1 10 10 1 1 1 1 1 10 1 10 10 2 1 1 1 1 10 10 1 1 1 1 1 1 1 1)) :lref (quote (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)) :lport (quotelfields (quote ((2 0) (1 0) (0) (10 64) (7 100) (0) (2 0) (1 0) (0) (10 64) (7 100) (0) (2 0) (1 0) (4949) (10 64) (7 103) (0) (42 70 67) (35 60 67) (39 82 672) (55 64 97) (49 55 164) (65 45 59) (66 68 95) (70 63 176) (67 54 133) (46 53 1041) (37 70 67) (42 90 67) (49 41 54) (55 49 76) (42 40 67) (42 80 68) (35 60 68) (46 85 562) (55 56 324) (49 56 324) (37 80 68) (42 90 68) (55 60 71) (49 51 63) (42 50 68) (39 82 60) (42 80 67) (35 60 67) (38 76 686) (59 64 97) (53 55 165) (74 82 111) (37 70 68) (42 90 68) (53 41 54) (59 49 76) (69 49 79) (42 40 68) (42 80 68) (35 60 68) (45 61 649) (59 56 325) (53 56 325) (74 68 203) (37 85 67) (42 90 67) (59 60 70) (53 51 62) (42 50 67) (69 47 67) (42 70 68) (35 60 68) (39 89 668) (55 64 97) (49 55 165) (89 45 171) (77 35 100) (55 32 157) (83 36 56) (49 52 152) (84 46 114) (89 55 103) (84 74 60) (77 55 70) (55 59 76) (49 60 71) (37 70 68) (42 80 68) (49 41 54) (55 49 76) (42 40 68) (42 80 67) (35 60 67) (55 56 324) (49 56 324) (34 82 570) (37 80 68) (42 80 68) (55 60 70) (49 51 62) (42 50 67) (42 70 68) (38 69 414) (59 64 98) (53 55 165) (64 45 59) (65 68 95) (69 63 176) (45 53 1041) (37 80 67) (42 70 67) (53 41 54) (59 49 75) (42 40 68) (38 69 141) (42 80 68) (35 60 68) (45 68 146) (59 56 324) (53 56 324) (45 78 114) (42 80 68) (35 60 68) (40 77 325) (59 60 71) (53 51 63) (42 50 67) (42 80 67) (35 60 67) (39 78 635) (55 64 97) (49 55 165) (65 45 59) (66 68 95) (70 63 176) (67 54 133) (46 53 1041) (37 70 68) (42 90 68) (49 41 54) (55 49 76) (42 40 68) (42 80 68) (35 60 68) (34 82 581) (55 56 325) (49 56 325) (37 85 67) (42 90 67) (55 60 70) (49 51 62) (42 50 67) (27 60 29) (42 70 68) (35 60 68) (38 72 543) (59 64 97) (53 55 165) (81 52 54) (86 32 54) (37 70 68) (42 90 68) (53 41 54) (59 49 76) (69 39 73) (77 36 62) (71 31 73) (74 33 73) (86 38 68) (81 39 62) (45 82 149) (42 40 68) (42 80 67) (35 60 67) (50 74 151) (59 56 324) (53 56 324) (71 23 157) (69 30 146) (77 19 157) (74 19 146) (86 23 149) (81 40 149) (45 100 132) (71 41 54) (69 51 54) (74 51 51) (77 47 46) (81 45 63) (86 26 52) (37 80 68) (42 90 68) (38 89 305) (59 60 70) (53 51 62) (42 50 67) (42 80 68) (35 60 68) (40 82 649) (55 64 98) (50 55 165) (74 67 170) (40 50 73) (37 70 67) (42 90 67) (50 41 54) (55 49 75) (70 63 165) (82 67 113) (42 40 67) (42 80 68) (35 60 68) (33 82 649) (55 64 97) (49 55 165) (75 52 54) (82 32 54) (37 85 68) (42 90 68) (49 41 54) (55 49 76) (63 39 73) (73 36 62) (67 31 73) (70 33 73) (82 38 68) (75 39 62) (42 50 68) (42 80 67) (35 60 67) (38 89 667) (59 64 97) (53 55 164) (93 45 170) (81 35 100) (59 32 156) (87 36 57) (53 52 151) (88 46 113) (93 55 102) (88 74 59) (81 55 71) (59 59 76) (53 60 70) (42 90 67) (53 41 54) (59 49 76) (42 60 67) (38 40 67) (42 70 68) (35 60 68) (59 56 325) (53 56 325) (45 82 570) (38 50 68) (42 80 67) (59 60 70) (53 51 62) (42 60 68) (38 60 68) (42 70 67) (35 60 67) (39 89 667) (55 64 97) (49 55 165) (39 59 73) (65 68 70) (70 67 102) (61 64 79) (37 70 68) (42 80 68) (49 41 54) (55 49 76) (42 40 68) (42 80 67) (35 60 67) (55 56 324) (49 56 324) (34 82 571) (58 49 421) (77 63 81) (82 75 492) (49 54 441) (70 67 490) (37 80 67) (42 80 67) (55 60 70) (49 51 62) (42 50 67) (49 30 43) (46 54 68) (35 60 68) (38 82 673) (59 64 97) (53 55 165) (50 59 73) (69 68 70) (74 67 103) (65 64 78) (37 80 67) (42 70 67) (53 41 54) (59 49 75) (42 40 68) (42 80 67) (35 60 67) (45 85 562) (59 56 324) (53 56 324) (62 49 421) (81 63 81) (86 75 492) (53 54 441) (74 67 489) (42 80 68) (35 60 68) (59 60 70) (53 51 62) (42 50 67) (38 82 59) (53 30 43) (42 70 68) (35 60 68) (39 82 673) (55 64 98) (49 55 165) (65 45 59) (66 68 95) (70 63 176) (67 54 133) (46 53 1041) (37 70 67) (42 80 67) (49 41 54) (55 49 75) (42 40 67) (42 80 68) (35 60 68) (46 85 562) (55 56 324) (49 56 324) (37 80 68) (42 80 68) (55 60 71) (49 51 63) (42 50 68) (39 82 60) (42 80 67) (38 78 378) (59 64 97) (53 55 165) (93 45 170) (81 35 100) (59 32 156) (87 36 57) (53 52 151) (88 46 113) (93 55 103) (88 74 59) (81 55 70) (59 59 75) (53 60 70) (37 70 68) (42 90 68) (40 80 354) (53 41 54) (59 49 76) (42 40 68) (42 80 68) (35 60 68) (41 75 379) (59 56 325) (53 56 325) (37 90 67) (42 90 67) (45 76 324) (59 60 70) (53 51 62) (42 50 67) (46 54 68) (35 60 68) (39 78 635) (55 64 97) (49 55 165) (72 69 86) (39 36 1198) (79 51 1152) (61 37 1262) (73 44 1076) (37 80 68) (42 70 68) (49 41 54) (55 49 76) (42 40 67) (42 80 67) (35 60 67) (34 82 581) (55 56 324) (49 56 324) (42 80 68) (35 60 68) (55 60 70) (49 51 62) (42 50 68) (27 60 30) (42 80 68) (35 60 68) (38 78 635) (59 64 98) (53 55 165) (93 45 170) (81 35 100) (59 32 157) (87 36 57) (53 52 151) (88 46 114) (93 55 103) (88 74 59) (81 55 70) (59 59 76) (53 60 70) (37 70 67) (42 90 67) (53 41 54) (59 49 75) (42 40 67) (42 80 68) (35 60 68) (45 82 581) (59 56 324) (53 56 324) (37 85 68) (42 90 68) (59 60 71) (53 51 62) (42 50 68) (26 60 30) (42 70 67) (35 60 67) (40 81 170) (55 64 97) (50 55 165) (75 69 87) (40 58 616) (79 51 613) (50 48 613) (76 44 524) (40 71 109) (37 70 68) (42 80 68) (46 73 324) (50 41 54) (55 49 76) (42 40 67) (42 80 68) (35 60 68) (33 70 649) (55 64 98) (49 55 165) (73 67 170) (45 50 73) (37 80 67) (42 80 67) (49 41 54) (55 49 75) (70 63 165) (82 67 113) (42 50 68) (42 80 68) (38 78 635) (59 64 97) (53 55 165) (37 70 68) (42 90 68) (53 41 54) (59 49 76) (42 50 68) (74 89 111) (42 80 67) (33 82 581) (59 56 324) (53 56 324) (86 84 198) (74 76 81) (38 30 67) (37 85 67) (42 90 67) (38 55 67) (59 60 70) (53 51 62) (42 50 68) (26 60 29) (51 70 68) (33 70 181) (55 64 98) (48 55 165) (38 60 68) (21 77 70) (81 76 83) (51 90 67) (37 60 67) (42 90 67) (31 62 318) (48 41 54) (55 49 75) (75 26 122) (51 70 68) (38 40 68) (51 80 67) (29 68 346) (55 56 324) (48 56 324) (63 56 70) (72 67 51) (67 58 70) (81 63 78) (38 50 67) (51 90 68) (37 70 68) (42 100 68) (27 64 289) (55 60 70) (48 51 62) (51 70 68) (39 79 87) (51 80 67) (38 71 378) (60 64 97) (54 55 164) (75 82 110) (51 90 67) (37 70 67) (42 70 67) (40 68 349) (54 41 54) (60 49 76) (69 49 79) (51 70 68) (51 90 68) (41 75 341) (60 56 325) (54 56 325) (75 68 203) (51 90 67) (42 100 67) (42 68 264) (60 60 70) (54 51 62) (51 70 67) (69 47 68) (51 70 67) (43 85 119) (58 64 97) (53 55 165) (43 73 141) (74 82 111) (51 90 68) (37 60 68) (42 90 68) (45 64 324) (53 41 54) (58 49 76) (67 49 79) (51 70 68) (38 40 68) (51 80 68) (46 75 322) (58 56 325) (53 56 325) (74 68 203) (51 90 67) (37 70 67) (42 100 67) (50 67 324) (58 60 70) (53 51 62) (51 70 67) (67 47 67) (51 80 68) (43 71 384) (58 64 97) (53 55 165) (78 69 86) (43 58 616) (82 51 614) (53 48 614) (79 44 525) (51 90 68) (37 70 68) (42 80 68) (50 70 325) (53 41 55) (58 49 76) (51 70 68) (38 40 68) (51 80 67) (36 69 200) (58 64 97) (52 55 165) (36 56 119) (36 81 70) (70 75 73) (84 64 59) (76 72 45) (51 90 68) (37 70 68) (42 100 68) (42 62 324) (52 41 54) (58 49 76) (51 70 68) (51 70 68) (43 76 349) (58 64 98) (53 55 165) (43 38 45) (58 51 57) (55 48 62) (65 51 46) (51 90 67) (37 70 67) (42 100 67) (55 59 362) (53 41 54) (58 49 75) (51 50 67) (38 40 67) (51 80 68) (49 71 333) (58 56 324) (53 56 324) (51 90 68) (37 70 68) (42 100 68) (46 77 325) (58 60 71) (53 51 63) (51 50 67) (38 40 67) (51 80 67) (36 70 181) (58 64 97) (52 55 165) (75 69 87) (48 36 1197) (82 51 1151) (64 37 1262) (76 44 1076) (24 77 70) (51 90 68) (37 70 68) (42 70 68) (34 62 319) (52 41 54) (58 49 76) (51 70 68) (38 40 68) (51 90 68) (33 68 346) (58 56 325) (52 56 325) (51 90 67) (42 100 67) (31 64 289) (58 60 70) (52 51 62) (51 70 67) (42 79 86) (51 80 68) (41 69 324) (57 64 97) (50 55 165) (41 59 73) (65 68 70) (72 67 103) (62 64 78) (51 90 68) (37 70 68) (42 80 68) (48 68 327) (50 41 54) (57 49 76) (51 60 67) (38 40 67) (51 80 67) (57 56 324) (50 56 324) (45 63 327) (60 49 421) (77 63 81) (84 75 492) (50 54 441) (72 67 489) (51 100 68) (37 80 68) (42 100 68) (57 60 70) (50 51 62) (41 81 319) (51 70 68) (38 60 68) (50 30 43) (35 90 68) (40 78 292) (55 64 98) (50 55 165) (74 90 184) (76 87 181) (46 74 156) (28 55 87) (38 70 67) (74 43 38) (46 42 49) (76 43 43) (51 90 67) (42 80 67) (34 78 324) (50 41 54) (55 49 75) (51 80 68) (38 60 68) (51 80 68) (38 80 68) (33 77 173) (55 64 97) (49 55 165) (45 38 46) (55 51 57) (51 48 63) (61 51 46) (38 50 68) (35 80 68) (33 70 94) (51 90 68) (42 100 68) (39 63 325) (49 41 54) (55 49 76) (38 40 68) (51 80 67) (38 60 67) (49 40 67) (42 70 67) (38 50 67) (35 60 67) (39 89 667) (55 64 97) (49 55 164) (72 69 87) (39 36 1197) (79 51 1151) (61 37 1262) (73 44 1076) (37 80 68) (42 80 68) (49 41 54) (55 49 76) (42 50 68) (42 80 68) (35 60 68) (55 56 325) (49 56 325) (34 82 570) (37 80 67) (42 90 67) (55 60 70) (49 51 62) (42 50 68) (42 70 67) (35 60 67) (38 78 635) (59 64 97) (53 55 165) (64 45 60) (65 68 94) (69 63 175) (45 53 1040) (37 70 68) (42 80 68) (53 41 54) (59 49 76) (42 40 68) (42 80 67) (35 60 67) (45 82 581) (59 56 324) (53 56 324) (37 80 67) (42 80 67) (59 60 70) (53 51 62) (42 50 67) (26 60 29) (42 70 68) (35 60 68) (39 76 687) (55 64 98) (49 55 165) (82 76 83) (37 70 67) (42 90 67) (49 41 54) (55 49 75) (77 26 121) (42 40 68) (42 80 67) (35 60 67) (46 61 648) (55 56 324) (49 56 324) (65 56 71) (73 67 51) (67 58 70) (82 63 78) (37 80 68) (42 90 68) (55 60 70) (49 51 62) (42 50 68) (42 80 68) (35 60 68) (38 82 673) (59 64 98) (53 55 165) (77 76 102) (81 64 113) (37 70 67) (42 90 67) (53 41 54) (59 49 75) (80 50 102) (76 44 97) (42 40 68) (77 83 97) (81 64 113) (42 80 68) (35 60 68) (45 85 562) (59 56 324) (53 56 324) (76 50 216) (80 71 189) (37 90 68) (81 66 114) (77 85 98) (42 90 68) (59 60 71) (53 51 63) (77 80 92) (81 61 100) (42 50 67) (38 82 60) (42 70 67) (35 60 67) (39 89 667) (55 64 97) (49 55 165) (39 38 46) (55 51 56) (51 48 62) (61 51 46) (37 80 68) (42 70 68) (49 41 54) (55 49 76) (42 40 67) (42 80 68) (35 60 68) (55 56 325) (49 56 325) (34 82 571) (42 80 67) (35 60 67) (55 60 70) (49 51 62) (42 50 68) (42 70 68) (35 60 68) (38 76 687) (59 64 97) (53 55 165) (65 49 81) (53 40 81) (38 45 68) (59 46 46) (57 50 56) (37 80 68) (42 90 68) (53 41 54) (59 49 76) (42 40 67) (42 70 67) (35 60 67) (45 61 648) (59 56 324) (53 56 324) (81 73 59) (77 72 43) (86 75 44) (74 73 33) (71 54 46) (37 78 68) (42 90 68) (59 60 70) (53 51 62) (42 50 68) (42 80 68) (35 60 68) (40 82 649) (55 64 98) (50 55 165) (40 56 119) (67 75 73) (82 64 60) (74 72 46) (37 70 67) (42 90 67) (50 41 54) (55 49 75) (42 40 67) (42 80 68) (35 60 68) (33 82 649) (55 64 97) (49 55 165) (45 43 24) (37 85 68) (42 90 68) (49 41 54) (55 49 76) (67 55 49) (73 52 146) (67 43 100) (42 50 68) (61 55 79) (42 80 67) (35 60 67) (38 72 619) (59 64 97) (53 55 165) (81 52 54) (86 32 54) (37 70 68) (42 90 68) (53 41 54) (59 49 76) (69 39 73) (77 36 62) (71 31 73) (74 33 72) (86 38 67) (81 39 62)))))) (setf (name rep) "Midi Events sequence") rep)))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (scale approx fontsize staff cmnpref deltapict outport inport zoom notechancolor? grillestep mode winsize winpos palette-mode obj-mode show-stems player)) (list nil 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) 0 0 1 nil 1000 0 (om-make-point 250 280) (om-make-point 150 100) 0 0 (quote t) (quote :midishare))) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "APPEND" (quote append) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 225 608) nil nil nil "append" 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "GET-MIDIEVENTS2" (quote get-midievents) (quote ((om-load-inputfun (quote input-funbox) "midifile" "SELF" nil))) (om-make-point 252 516) nil nil nil "get-midievents" 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 142 65) (quote "All together creating a single list of MidiEvents :") "" (om-make-point 32 578) nil (om-make-color 23/51 16/255 16/255) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 102 81) (quote "outputs a list of MidiEvents corresponding to channel 2 and 10 (drums and bass)") "" (om-make-point 41 312) nil (om-make-color 13/85 4/15 5/17) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote abstraction) "mypatch1" (om-load-patch-abs1 "select drum and bass" (quote ((let ((box (om-load-boxcomment "comment" (om-make-point 147 55) (quote "this patch selects events of channels 2 and 10") "" (om-make-point 304 33) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OMOR" (quote omor) (quote ((om-load-inputfun (quote input-funbox) "patch" "SELF" nil) (om-load-inputfun (quote input-funbox) "add patch" "REST" nil))) (om-make-point 220 251) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux1" (quote t) (quote nil) (om-make-point 185 145) (om-make-point 29 30) 10 "10" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 296 140) (om-make-point 18 28) 2 "2" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "TEST-CHANNEL" (quote test-channel) (quote ((om-load-inputfun (quote input-funbox) "midi event" "SELF" nil) (om-load-inputfun (quote input-funbox) "channel or channel list" "CHANNEL" 2))) (om-make-point 248 174) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "TEST-CHANNEL" (quote test-channel) (quote ((om-load-inputfun (quote input-funbox) "midi event" "SELF" nil) (om-load-inputfun (quote input-funbox) "channel or channel list" "CHANNEL" nil))) (om-make-point 145 174) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "input" 0 (om-make-point 197 39) "no documentation" "MidiEvent" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output" 0 (om-make-point 208 295) (quote ((om-load-inputfun (quote input-funbox) "out" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((5 0 1 0 nil 0) (4 0 1 1 nil 0) (6 0 4 0 nil 0) (3 0 4 1 nil 0) (6 0 5 0 nil 0) (2 0 5 1 nil 0) (1 0 7 0 nil 0))) 6.110101 nil "" (om-make-point 200 200) (om-make-point 400 500)) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "input" nil))) (om-make-point 220 277) nil nil "l" "select drum and bass"))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "GET-MIDIEVENTS1" (quote get-midievents) (quote ((om-load-inputfun (quote input-funbox) "midifile" "SELF" nil) (om-load-inputfun (quote input-funbox) "lambda test function for midi events to extract" "TEST" nil))) (om-make-point 162 343) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 147 48) (quote "MidiSequence without drum, bass and sax channels ") "" (om-make-point 493 373) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "EVENTMIDI-SEQ1" (quote eventmidi-seq) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "LTYPE" (list (quote keyon))) (om-load-inputfun (quote input-funbox) "no documentation" "LDATE" (list 0)) (om-load-inputfun (quote input-funbox) "no documentation" "LREF" (list 0)) (om-load-inputfun (quote input-funbox) "no documentation" "LPORT" (list 0)) (om-load-inputfun (quote input-funbox) "no documentation" "LCHAN" (list 1)) (om-load-inputfun (quote input-funbox) "no documentation" "LFIELDS" (list nil)))) (om-make-point 389 368) (om-make-point 93 61) (let ((newobj (when (find-class (quote eventmidi-seq) nil) (let ((rep (make-instance (quote eventmidi-seq) :ldate (quote (514 514 538 543 543 597 770 838 838 1162 1162 1486 1486 1811 1811 2065 2135 2135 2359 2459 2459 2459 2784 2784 3041 3108 3108 3124 3127 3127 3130 3132 3208 3362 3370 3373 3373 3378 3432 3432 3757 3757 4081 4081 4405 4405 4430 4435 4435 4662 4730 4730 5054 5054 5378 5378 5703 5703 5727 5732 5732 5786 5959 6027 6027 6351 6351 6676 6676 7000 7000 7003 7005 7324 7324 7324 7335 7335 7338 7343 7349 7649 7649 7662 7668 7670 7673 7678 7678 7903 7903 7903 7905 7905 7916 7973 7973 8297 8297 8327 8535 8622 8622 8638 8638 8946 8946 8949 8951 9270 9270 9270 9281 9281 9284 9289 9295 9595 9595 9611 9614 9614 9616 9619 9695 9849 9857 9859 9859 9865 9919 9919 10243 10243 10568 10568 10892 10892 10900 10903 10903 10905 11216 11216 11541 11541 11568 11573 11573 11573 11578 11865 11865 12146 12189 12189 12197 12200 12200 12203 12514 12514 12838 12838 12865 12870 12870 12870 12876 13162 13162 13443 13486 13486 13511 13516 13516 13570 13743 13811 13811 14135 14135 14459 14459 14784 14784 14800 14803 14803 14805 14808 14884 15038 15046 15049 15049 15054 15108 15108 15432 15432 15757 15757 16081 16081 16103 16113 16116 16116 16205 16405 16405 16730 16730 17054 17054 17378 17378 17395 17397 17397 17400 17403 17478 17632 17641 17643 17643 17649 17703 17703 18027 18027 18351 18351 18676 18676 18697 18708 18711 18711 18800 19000 19000 19324 19324 19354 19562 19649 19649 19665 19665 19973 19973 20297 20297 20535 20622 20622 20643 20846 20946 20946 21270 21270 21522 21595 21595 21619 21919 21919 21941 21949 21949 21949 22243 22243 22568 22568 22822 22892 22892 23116 23216 23216 23216 23541 23541 23797 23865 23865 24119 24189 24189 24413 24513 24513 24513 24838 24838 25095 25162 25162 25184 25195 25197 25197 25286 25486 25486 25811 25811 25813 26059 26068 26068 26135 26135 26459 26459 26468 26470 26473 26484 26784 26784 27108 27108 27432 27432 27757 27757 27778 27789 27792 27792 27881 28081 28081 28405 28405 28730 28730 29054 29054 29062 29065 29065 29068 29378 29378 29703 29703 29730 29735 29735 29735 29741 30027 30027 30308 30351 30351 30362 30362 30368 30608 30616 30616 30676 30676 31000 31000 31008 31011 31013 31024 31324 31324 31649 31649 31670 31681 31684 31684 31773 31973 31973 32297 32297 32622 32622 32946 32946 32970 32976 32976 33203 33270 33270 33595 33595 33919 33919 34243 34243 34495 34568 34568 34592 34892 34892 34913 34922 34922 34922 35216 35216 35540 35540 35776 35776 35865 35865 35895 35895 36100 36100 36189 36189 36208 36219 36424 36424 36513 36513 36738 36738 36838 36838 36846 36849 36851 36862 37162 37162 37486 37486 37811 37811 38135 38135 38138 38138 38151 38154 38157 38459 38459 38784 38784 38795 38795 38805 38805 38808 39108 39108 39432 39432 39435 39681 39689 39689 39757 39757 40081 40081 40349 40405 40405 40432 40489 40562 40651 40730 40730 40732 40735 41054 41054 41054 41065 41065 41068 41073 41078)) :ltype (quote (:note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note)) :lchan (quote (7 7 3 3 3 3 3 7 7 7 7 7 7 7 7 3 7 7 3 7 7 3 7 7 3 7 7 3 3 3 3 3 3 3 3 3 3 3 7 7 7 7 7 7 7 7 3 3 3 3 7 7 7 7 7 7 7 7 3 3 3 3 3 7 7 7 7 7 7 7 7 3 3 7 7 3 3 3 3 3 3 7 7 3 3 3 3 3 3 3 3 3 3 3 3 7 7 7 7 3 3 7 7 3 3 7 7 3 3 7 7 3 3 3 3 3 3 7 7 3 3 3 3 3 3 3 3 3 3 3 7 7 7 7 7 7 7 7 3 3 3 3 7 7 7 7 3 3 3 3 3 7 7 3 7 7 3 3 3 3 7 7 7 7 3 3 3 3 3 7 7 3 7 7 3 3 3 3 3 7 7 7 7 7 7 7 7 3 3 3 3 3 3 3 3 3 3 3 7 7 7 7 7 7 7 7 3 3 3 3 3 7 7 7 7 7 7 7 7 3 3 3 3 3 3 3 3 3 3 3 7 7 7 7 7 7 7 7 3 3 3 3 3 7 7 7 7 3 3 7 7 3 3 7 7 7 7 3 7 7 3 3 7 7 7 7 3 7 7 3 7 7 3 3 3 3 7 7 7 7 3 7 7 3 7 7 3 7 7 3 7 7 3 7 7 3 7 7 3 7 7 3 7 7 3 3 3 3 3 7 7 7 7 3 3 3 3 7 7 7 7 3 3 3 3 7 7 7 7 7 7 7 7 3 3 3 3 3 7 7 7 7 7 7 7 7 3 3 3 3 7 7 7 7 3 3 3 3 3 7 7 3 7 7 3 3 3 3 3 3 7 7 7 7 3 3 3 3 7 7 7 7 3 3 3 3 3 7 7 7 7 7 7 7 7 3 3 3 3 7 7 7 7 7 7 7 7 3 7 7 3 7 7 3 3 3 3 7 7 7 7 3 3 7 7 3 3 3 3 7 7 3 3 3 3 7 7 3 3 7 7 3 3 3 3 7 7 7 7 7 7 7 7 3 3 3 3 3 7 7 7 7 3 3 3 3 3 7 7 7 7 3 3 3 3 7 7 7 7 3 7 7 3 3 3 3 7 7 3 3 7 7 3 3 3 3 3 3)) :lref (quote (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)) :lport (quote (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)) :lfields (quote ((55 64 97) (49 55 164) (65 45 59) (66 68 95) (70 63 176) (67 54 133) (46 53 1041) (49 41 54) (55 49 76) (55 56 324) (49 56 324) (55 60 71) (49 51 63) (59 64 97) (53 55 165) (74 82 111) (53 41 54) (59 49 76) (69 49 79) (59 56 325) (53 56 325) (74 68 203) (59 60 70) (53 51 62) (69 47 67) (55 64 97) (49 55 165) (89 45 171) (77 35 100) (55 32 157) (83 36 56) (49 52 152) (84 46 114) (89 55 103) (84 74 60) (77 55 70) (55 59 76) (49 60 71) (49 41 54) (55 49 76) (55 56 324) (49 56 324) (55 60 70) (49 51 62) (59 64 98) (53 55 165) (64 45 59) (65 68 95) (69 63 176) (45 53 1041) (53 41 54) (59 49 75) (59 56 324) (53 56 324) (59 60 71) (53 51 63) (55 64 97) (49 55 165) (65 45 59) (66 68 95) (70 63 176) (67 54 133) (46 53 1041) (49 41 54) (55 49 76) (55 56 325) (49 56 325) (55 60 70) (49 51 62) (59 64 97) (53 55 165) (81 52 54) (86 32 54) (53 41 54) (59 49 76) (69 39 73) (77 36 62) (71 31 73) (74 33 73) (86 38 68) (81 39 62) (59 56 324) (53 56 324) (71 23 157) (69 30 146) (77 19 157) (74 19 146) (86 23 149) (81 40 149) (71 41 54) (69 51 54) (74 51 51) (77 47 46) (81 45 63) (86 26 52) (59 60 70) (53 51 62) (55 64 98) (50 55 165) (74 67 170) (40 50 73) (50 41 54) (55 49 75) (70 63 165) (82 67 113) (55 64 97) (49 55 165) (75 52 54) (82 32 54) (49 41 54) (55 49 76) (63 39 73) (73 36 62) (67 31 73) (70 33 73) (82 38 68) (75 39 62) (59 64 97) (53 55 164) (93 45 170) (81 35 100) (59 32 156) (87 36 57) (53 52 151) (88 46 113) (93 55 102) (88 74 59) (81 55 71) (59 59 76) (53 60 70) (53 41 54) (59 49 76) (59 56 325) (53 56 325) (59 60 70) (53 51 62) (55 64 97) (49 55 165) (39 59 73) (65 68 70) (70 67 102) (61 64 79) (49 41 54) (55 49 76) (55 56 324) (49 56 324) (58 49 421) (77 63 81) (82 75 492) (49 54 441) (70 67 490) (55 60 70) (49 51 62) (49 30 43) (59 64 97) (53 55 165) (50 59 73) (69 68 70) (74 67 103) (65 64 78) (53 41 54) (59 49 75) (59 56 324) (53 56 324) (62 49 421) (81 63 81) (86 75 492) (53 54 441) (74 67 489) (59 60 70) (53 51 62) (53 30 43) (55 64 98) (49 55 165) (65 45 59) (66 68 95) (70 63 176) (67 54 133) (46 53 1041) (49 41 54) (55 49 75) (55 56 324) (49 56 324) (55 60 71) (49 51 63) (59 64 97) (53 55 165) (93 45 170) (81 35 100) (59 32 156) (87 36 57) (53 52 151) (88 46 113) (93 55 103) (88 74 59) (81 55 70) (59 59 75) (53 60 70) (53 41 54) (59 49 76) (59 56 325) (53 56 325) (59 60 70) (53 51 62) (55 64 97) (49 55 165) (72 69 86) (39 36 1198) (79 51 1152) (61 37 1262) (73 44 1076) (49 41 54) (55 49 76) (55 56 324) (49 56 324) (55 60 70) (49 51 62) (59 64 98) (53 55 165) (93 45 170) (81 35 100) (59 32 157) (87 36 57) (53 52 151) (88 46 114) (93 55 103) (88 74 59) (81 55 70) (59 59 76) (53 60 70) (53 41 54) (59 49 75) (59 56 324) (53 56 324) (59 60 71) (53 51 62) (55 64 97) (50 55 165) (75 69 87) (40 58 616) (79 51 613) (50 48 613) (76 44 524) (50 41 54) (55 49 76) (55 64 98) (49 55 165) (73 67 170) (45 50 73) (49 41 54) (55 49 75) (70 63 165) (82 67 113) (59 64 97) (53 55 165) (53 41 54) (59 49 76) (74 89 111) (59 56 324) (53 56 324) (86 84 198) (74 76 81) (59 60 70) (53 51 62) (55 64 98) (48 55 165) (81 76 83) (48 41 54) (55 49 75) (75 26 122) (55 56 324) (48 56 324) (63 56 70) (72 67 51) (67 58 70) (81 63 78) (55 60 70) (48 51 62) (60 64 97) (54 55 164) (75 82 110) (54 41 54) (60 49 76) (69 49 79) (60 56 325) (54 56 325) (75 68 203) (60 60 70) (54 51 62) (69 47 68) (58 64 97) (53 55 165) (74 82 111) (53 41 54) (58 49 76) (67 49 79) (58 56 325) (53 56 325) (74 68 203) (58 60 70) (53 51 62) (67 47 67) (58 64 97) (53 55 165) (78 69 86) (43 58 616) (82 51 614) (53 48 614) (79 44 525) (53 41 55) (58 49 76) (58 64 97) (52 55 165) (36 56 119) (70 75 73) (84 64 59) (76 72 45) (52 41 54) (58 49 76) (58 64 98) (53 55 165) (43 38 45) (58 51 57) (55 48 62) (65 51 46) (53 41 54) (58 49 75) (58 56 324) (53 56 324) (58 60 71) (53 51 63) (58 64 97) (52 55 165) (75 69 87) (48 36 1197) (82 51 1151) (64 37 1262) (76 44 1076) (52 41 54) (58 49 76) (58 56 325) (52 56 325) (58 60 70) (52 51 62) (57 64 97) (50 55 165) (41 59 73) (65 68 70) (72 67 103) (62 64 78) (50 41 54) (57 49 76) (57 56 324) (50 56 324) (60 49 421) (77 63 81) (84 75 492) (50 54 441) (72 67 489) (57 60 70) (50 51 62) (50 30 43) (55 64 98) (50 55 165) (74 90 184) (76 87 181) (46 74 156) (74 43 38) (46 42 49) (76 43 43) (50 41 54) (55 49 75) (55 64 97) (49 55 165) (45 38 46) (55 51 57) (51 48 63) (61 51 46) (49 41 54) (55 49 76) (55 64 97) (49 55 164) (72 69 87) (39 36 1197) (79 51 1151) (61 37 1262) (73 44 1076) (49 41 54) (55 49 76) (55 56 325) (49 56 325) (55 60 70) (49 51 62) (59 64 97) (53 55 165) (64 45 60) (65 68 94) (69 63 175) (45 53 1040) (53 41 54) (59 49 76) (59 56 324) (53 56 324) (59 60 70) (53 51 62) (55 64 98) (49 55 165) (82 76 83) (49 41 54) (55 49 75) (77 26 121) (55 56 324) (49 56 324) (65 56 71) (73 67 51) (67 58 70) (82 63 78) (55 60 70) (49 51 62) (59 64 98) (53 55 165) (77 76 102) (81 64 113) (53 41 54) (59 49 75) (80 50 102) (76 44 97) (77 83 97) (81 64 113) (59 56 324) (53 56 324) (76 50 216) (80 71 189) (81 66 114) (77 85 98) (59 60 71) (53 51 63) (77 80 92) (81 61 100) (55 64 97) (49 55 165) (39 38 46) (55 51 56) (51 48 62) (61 51 46) (49 41 54) (55 49 76) (55 56 325) (49 56 325) (55 60 70) (49 51 62) (59 64 97) (53 55 165) (65 49 81) (53 40 81) (38 45 68) (59 46 46) (57 50 56) (53 41 54) (59 49 76) (59 56 324) (53 56 324) (81 73 59) (77 72 43) (86 75 44) (74 73 33) (71 54 46) (59 60 70) (53 51 62) (55 64 98) (50 55 165) (40 56 119) (67 75 73) (82 64 60) (74 72 46) (50 41 54) (55 49 75) (55 64 97) (49 55 165) (45 43 24) (49 41 54) (55 49 76) (67 55 49) (73 52 146) (67 43 100) (61 55 79) (59 64 97) (53 55 165) (81 52 54) (86 32 54) (53 41 54) (59 49 76) (69 39 73) (77 36 62) (71 31 73) (74 33 72) (86 38 67) (81 39 62)))))) (setf (name rep) "Midi Events sequence") rep)))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (scale approx fontsize staff cmnpref deltapict outport inport zoom notechancolor? grillestep mode winsize winpos palette-mode obj-mode show-stems player)) (list nil 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) 0 0 1 nil 1000 0 18350450 2621450 0 0 (quote t) (quote :midishare))) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote abstraction) "mypatch" (om-load-patch-abs1 "delete some channels" (quote ((let ((box (om-load-boxcall (quote genfun) "TEST-TYPE 2" (quote test-type) (quote ((om-load-inputfun (quote input-funbox) "a MidiEvent" "SELF" nil) (om-load-inputfunmenu1 (quote input-funmenu) "a MIDI event type" "TYPE" (quote :progchange) (list (list "Note" (quote :note)) (list "KeyOn " (quote :keyon)) (list "KeyOff" (quote :keyoff)) (list "KeyPress" (quote :keypress)) (list "CtrlChange" (quote :ctrlchange)) (list "ProgChange" (quote :progchange)) (list "ChanPress" (quote :chanpress)) (list "PitchWheel/PitchBend" (quote :pitchbend)) (list "SongPos" (quote :songpos)) (list "SongSel" (quote :songsel)) (list "Clock" (quote :clock)) (list "Start" (quote :start)) (list "Continue" (quote :continue)) (list "Stop" (quote :stop)) (list "Tune" (quote :tune)) (list "ActiveSens" (quote :activesens)) (list "Reset" (quote :reset)) (list "SysEx" (quote :sysex)) (list "Stream" (quote :stream)) (list "Private" (quote :private)) (list "Process" (quote :process)) (list "DProcess" (quote :dprocess)) (list "QFrame" (quote :qframe)) (list "Ctrl14b" (quote :ctrl14b)) (list "NonRegParam" (quote :nonregparam)) (list "RegParam" (quote :regparam)) (list "SeqNum" (quote :seqnum)) (list "Textual" (quote :textual)) (list "Copyright" (quote :copyright)) (list "SeqName" (quote :seqname)) (list "InstrName" (quote :instrname)) (list "Lyric" (quote :lyric)) (list "Marker" (quote :marker)) (list "CuePoint" (quote :cuepoint)) (list "ChanPrefix" (quote :chanprefix)) (list "EndTrack" (quote :endtrack)) (list "Tempo" (quote :tempo)) (list "SMPTEOffset" (quote :smpteoffset)) (list "TimeSign" (quote :timesign)) (list "KeySign" (quote :keysign)) (list "Specific" (quote :specific)) (list "PortPrefix" (quote :portprefix)) (list "RcvAlarm" (quote :rcvalarm)) (list "ApplAlarm" (quote :applalarm)) (list "Reserved" (quote :reserved)) (list "dead" (quote :dead)))))) (om-make-point 236 142) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux2" (quote t) (quote nil) (om-make-point 388 116) (om-make-point 37 32) (list 4 5) "(4 5)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "TEST-CHANNEL" (quote test-channel) (quote ((om-load-inputfun (quote input-funbox) "midi event" "SELF" nil) (om-load-inputfun (quote input-funbox) "channel or channel list" "CHANNEL" nil))) (om-make-point 343 149) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 368 69) (quote "With this patch we select all events which channel is not 2, 4, 5 or 10.$i.e. we delete theses channels from the MidiSequence$$A the same time we delete all ProgramChange Events from the sequence") "" (om-make-point 308 249) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OMOR" (quote omor) (quote ((om-load-inputfun (quote input-funbox) "patch" "SELF" nil) (om-load-inputfun (quote input-funbox) "add patch" "REST" nil) (om-load-inputfun (quote input-funbox) "add patch" "REST" nil))) (om-make-point 248 236) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "NOT" (quote not) (quote ((om-load-inputfun (quote input-funbox) "OBJECT" "OBJECT" nil))) (om-make-point 254 279) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 156 119) (om-make-point 55 30) (list 2 10) "(2 10)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "TEST-CHANNEL" (quote test-channel) (quote ((om-load-inputfun (quote input-funbox) "midi event" "SELF" nil) (om-load-inputfun (quote input-funbox) "channel or channel list" "CHANNEL" nil))) (om-make-point 120 150) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output" 0 (om-make-point 246 328) (quote ((om-load-inputfun (quote input-funbox) "out" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "input" 0 (om-make-point 227 13) "no documentation" "MidiEvent" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((9 0 0 0 nil 0) (9 0 2 0 nil 0) (1 0 2 1 nil 0) (7 0 4 0 nil 0) (0 0 4 1 nil 0) (2 0 4 2 nil 0) (4 0 5 0 nil 0) (9 0 7 0 nil 0) (6 0 7 1 nil 0) (5 0 8 0 nil 0))) 6.110101 nil "" (om-make-point 200 200) (om-make-point 682 514)) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "input" nil))) (om-make-point 472 226) nil nil "l" "delete some channels"))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "GET-MIDIEVENTS" (quote get-midievents) (quote ((om-load-inputfun (quote input-funbox) "midifile" "SELF" nil) (om-load-inputfun (quote input-funbox) "lambda test function for midi events to extract" "TEST" nil))) (om-make-point 395 294) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 415 81) (om-make-point 122 34) "a night in tunesia" "\"a night in tunesia\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 235 23) (quote "Create a named EventMidi-seq     -->") "" (om-make-point 88 139) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "CREATE-MIDISEQ" (quote create-midiseq) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "NEWNAME" nil))) (om-make-point 332 116) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 149 38) (quote "<-- Equivalent EventMidi-seq") "" (om-make-point 496 191) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 131 25) (quote "<-- Original Midi File") "" (om-make-point 352 53) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 189 31) (quote "Extract filtered Midi-Sequences:") "" (om-make-point 3 266) nil (om-make-color 0 0 0) (om-make-font "Geneva" 10 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "EVENTMIDI-SEQ" (quote eventmidi-seq) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "LTYPE" (list (quote keyon))) (om-load-inputfun (quote input-funbox) "no documentation" "LDATE" (list 0)) (om-load-inputfun (quote input-funbox) "no documentation" "LREF" (list 0)) (om-load-inputfun (quote input-funbox) "no documentation" "LPORT" (list 0)) (om-load-inputfun (quote input-funbox) "no documentation" "LCHAN" (list 1)) (om-load-inputfun (quote input-funbox) "no documentation" "LFIELDS" (list nil)))) (om-make-point 322 187) (om-make-point 165 61) (let ((newobj (when (find-class (quote eventmidi-seq) nil) (let ((rep (make-instance (quote eventmidi-seq) :ldate (quote (451 514 514 514 514 514 538 543 543 557 597 681 768 770 838 838 838 838 881 1076 1162 1162 1162 1162 1162 1486 1486 1486 1486 1500 1719 1724 1724 1811 1811 1811 1811 1811 1838 2065 2068 2135 2135 2135 2135 2359 2370 2459 2459 2459 2459 2459 2459 2489 2684 2784 2784 2784 2784 2835 3014 3016 3019 3041 3108 3108 3108 3108 3108 3124 3127 3127 3130 3130 3132 3168 3208 3330 3343 3362 3370 3373 3373 3378 3432 3432 3432 3432 3468 3470 3651 3670 3676 3757 3757 3757 3757 3776 3878 4081 4081 4081 4081 4086 4303 4319 4322 4405 4405 4405 4405 4430 4435 4435 4662 4730 4730 4730 4730 4962 4962 5054 5054 5054 5054 5054 5286 5378 5378 5378 5378 5378 5611 5635 5703 5703 5703 5703 5703 5727 5732 5732 5762 5786 5957 5959 6027 6027 6027 6027 6051 6262 6268 6351 6351 6351 6351 6351 6676 6676 6676 6676 6686 6911 6914 6919 7000 7000 7000 7000 7000 7003 7005 7032 7270 7324 7324 7324 7324 7324 7335 7335 7338 7343 7349 7543 7562 7649 7649 7649 7649 7649 7662 7668 7670 7673 7678 7678 7681 7865 7876 7903 7903 7903 7905 7905 7916 7973 7973 7973 7973 7973 8027 8181 8211 8297 8297 8297 8297 8297 8314 8327 8365 8527 8535 8549 8622 8622 8622 8622 8638 8638 8638 8654 8714 8776 8841 8854 8857 8946 8946 8946 8946 8946 8949 8951 8981 9270 9270 9270 9270 9270 9270 9281 9281 9284 9289 9295 9505 9522 9595 9595 9595 9595 9595 9611 9614 9614 9616 9619 9695 9849 9857 9859 9859 9865 9919 9919 9919 10149 10149 10243 10243 10243 10243 10262 10473 10568 10568 10568 10797 10797 10800 10892 10892 10892 10892 10892 10900 10903 10903 10905 10916 11038 11124 11216 11216 11216 11216 11257 11454 11541 11541 11541 11541 11559 11568 11573 11573 11573 11578 11865 11865 11865 11865 11876 12103 12103 12146 12189 12189 12189 12189 12189 12197 12200 12200 12203 12222 12465 12514 12514 12514 12514 12746 12838 12838 12838 12838 12838 12865 12870 12870 12870 12876 12886 13105 13162 13162 13162 13162 13227 13389 13395 13400 13416 13443 13486 13486 13486 13486 13486 13486 13511 13516 13516 13570 13635 13735 13743 13746 13811 13811 13811 13811 13870 14049 14135 14135 14135 14135 14135 14359 14459 14459 14459 14459 14570 14697 14697 14784 14784 14784 14784 14786 14800 14803 14803 14805 14808 14819 14884 15038 15046 15049 15049 15054 15108 15108 15108 15108 15108 15343 15432 15432 15432 15432 15432 15668 15757 15757 15757 15757 15989 15992 16081 16081 16081 16081 16081 16100 16103 16113 16116 16116 16205 16319 16405 16405 16405 16405 16427 16632 16638 16730 16730 16730 16730 16730 17054 17054 17054 17054 17057 17286 17292 17308 17378 17378 17378 17378 17378 17395 17397 17397 17400 17403 17405 17478 17632 17641 17643 17643 17649 17649 17703 17703 17703 17703 17938 18027 18027 18027 18027 18027 18057 18251 18351 18351 18351 18351 18403 18581 18586 18589 18676 18676 18676 18676 18676 18678 18697 18708 18711 18711 18759 18800 18913 18913 18919 19000 19000 19000 19000 19000 19062 19065 19170 19211 19238 19246 19268 19324 19324 19324 19324 19324 19354 19389 19562 19649 19649 19649 19649 19659 19665 19665 19884 19886 19973 19973 19973 19973 20297 20297 20297 20297 20532 20535 20622 20622 20622 20622 20643 20846 20857 20946 20946 20946 20946 20946 21181 21184 21270 21270 21270 21270 21300 21508 21508 21522 21595 21595 21595 21595 21595 21595 21619 21832 21832 21919 21919 21919 21919 21941 21946 21949 21949 21949 22157 22243 22243 22243 22243 22243 22243 22459 22481 22481 22568 22568 22568 22568 22613 22822 22827 22843 22892 22892 22892 22892 22892 22892 22938 23032 23116 23127 23132 23146 23216 23216 23216 23216 23216 23259 23476 23481 23541 23541 23541 23541 23541 23568 23776 23786 23797 23865 23865 23865 23865 23919 24105 24119 24135 24189 24189 24189 24189 24189 24189 24413 24427 24427 24513 24513 24513 24513 24513 24554 24838 24838 24838 24838 24838 24838 24859 25076 25095 25111 25162 25162 25162 25162 25184 25195 25197 25197 25286 25486 25486 25486 25486 25486 25486 25724 25724 25811 25811 25811 25811 25813 26049 26049 26059 26068 26068 26135 26135 26135 26135 26135 26135 26146 26373 26381 26459 26459 26459 26459 26468 26470 26473 26484 26784 26784 26784 26784 26784 26784 27019 27019 27108 27108 27108 27108 27116 27432 27432 27432 27432 27432 27432 27438 27668 27668 27757 27757 27757 27757 27762 27778 27789 27792 27792 27881 27995 28019 28081 28081 28081 28081 28081 28081 28316 28316 28330 28405 28405 28405 28405 28462 28676 28730 28730 28730 28730 28730 28751 28786 28965 28968 28986 28997 29054 29054 29054 29054 29062 29065 29065 29068 29097 29103 29313 29378 29378 29378 29378 29378 29378 29411 29611 29611 29659 29703 29703 29703 29705 29730 29735 29735 29735 29738 29741 30027 30027 30027 30027 30027 30032 30035 30259 30259 30276 30308 30351 30351 30351 30351 30362 30362 30368 30578 30584 30608 30616 30616 30676 30676 30676 30676 30676 30908 30908 31000 31000 31000 31000 31000 31008 31011 31013 31024 31232 31232 31241 31324 31324 31324 31324 31324 31432 31551 31557 31557 31649 31649 31649 31649 31649 31649 31649 31662 31670 31681 31684 31684 31773 31781 31851 31968 31973 31973 31973 31973 32205 32297 32297 32297 32297 32316 32622 32622 32622 32622 32632 32854 32868 32946 32946 32946 32946 32946 32970 32976 32976 32986 33203 33227 33270 33270 33270 33270 33508 33595 33595 33595 33595 33595 33830 33919 33919 33919 33919 33970 34149 34154 34157 34157 34243 34243 34243 34243 34243 34265 34332 34395 34400 34489 34495 34568 34568 34568 34568 34592 34603 34616 34773 34805 34892 34892 34892 34892 34892 34913 34922 34922 34922 35124 35216 35216 35216 35216 35346 35454 35540 35540 35540 35540 35540 35562 35581 35776 35776 35865 35865 35865 35865 35895 35895 36100 36100 36100 36189 36189 36189 36189 36189 36208 36219 36424 36424 36424 36513 36513 36513 36738 36738 36749 36751 36754 36838 36838 36838 36838 36838 36846 36849 36851 36862 36868 37078 37162 37162 37162 37162 37186 37395 37408 37486 37486 37486 37486 37505 37811 37811 37811 37811 37830 38043 38065 38135 38135 38135 38135 38135 38138 38138 38151 38154 38157 38170 38376 38413 38459 38459 38459 38459 38549 38692 38719 38784 38784 38784 38784 38784 38795 38795 38805 38805 38808 38873 39046 39108 39108 39108 39108 39189 39340 39370 39432 39432 39432 39432 39432 39435 39449 39670 39681 39689 39689 39757 39757 39757 39757 39773 39873 39984 39992 40081 40081 40081 40081 40081 40113 40349 40405 40405 40405 40405 40411 40432 40489 40562 40640 40646 40651 40730 40730 40730 40730 40730 40732 40735 41054 41054 41054 41054 41054 41065 41065 41068 41073 41078)) :ltype (quote (:note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note :note)) :lchan (quote (4 10 10 7 7 2 3 3 3 4 3 4 4 3 10 10 7 7 4 10 10 10 7 7 2 10 10 7 7 4 4 10 2 10 10 7 7 2 4 3 4 10 10 7 7 3 10 10 10 7 7 3 2 5 5 10 10 7 7 5 5 4 10 3 10 10 7 7 2 3 3 3 4 3 3 5 3 5 4 3 3 3 3 3 10 10 7 7 4 5 5 10 4 10 10 7 7 2 4 10 10 7 7 4 4 10 4 10 7 7 2 3 3 3 3 10 10 7 7 10 2 10 10 7 7 2 2 10 10 7 7 2 10 4 10 10 7 7 2 3 3 3 4 3 4 3 10 10 7 7 4 10 4 10 10 7 7 2 10 10 7 7 4 10 2 4 10 10 7 7 2 3 3 4 4 10 10 7 7 3 3 3 3 3 3 2 10 10 10 7 7 2 3 3 3 3 3 3 5 2 5 3 3 3 3 3 3 10 10 7 7 2 5 5 10 10 10 7 7 2 4 3 5 4 3 5 10 10 7 7 4 3 3 5 4 4 4 5 10 10 10 7 7 2 3 3 4 10 10 7 7 4 3 3 3 3 3 3 10 4 10 10 7 7 2 3 3 3 3 3 3 3 3 3 3 3 10 7 7 10 10 10 10 7 7 2 10 10 7 7 10 10 4 10 10 7 7 2 3 3 3 3 4 4 4 10 10 7 7 4 10 10 10 7 7 2 3 3 3 3 3 10 10 7 7 4 10 4 3 10 10 7 7 2 3 3 3 3 4 4 10 10 7 7 10 10 10 7 7 2 3 3 3 3 3 5 5 10 10 7 7 5 4 10 2 5 3 10 10 7 7 4 2 3 3 3 3 4 4 3 5 10 10 7 7 4 10 10 10 7 7 2 4 10 10 7 7 4 10 2 10 7 7 2 4 3 3 3 3 3 4 3 3 3 3 3 3 10 10 7 7 2 10 10 10 7 7 2 10 10 7 7 2 4 10 10 10 7 7 2 4 3 3 3 3 3 4 10 10 7 7 4 4 10 10 10 7 7 2 10 10 7 7 4 10 2 4 10 10 7 7 2 3 3 3 3 3 4 3 3 3 3 3 4 3 10 10 7 7 10 10 10 7 7 2 5 5 10 10 7 7 5 5 10 2 10 10 7 7 2 4 3 3 3 3 5 3 5 2 4 10 10 7 7 2 5 4 4 4 10 5 4 10 10 7 7 2 3 4 3 10 10 7 7 4 3 3 4 10 10 7 7 2 10 10 7 7 10 3 10 7 7 2 3 3 10 10 10 10 7 7 10 2 10 7 7 2 4 10 2 3 10 10 10 7 7 2 3 10 10 10 7 7 2 3 4 3 3 3 10 10 10 10 7 7 2 4 10 2 10 7 7 2 4 3 5 4 10 10 10 7 7 2 5 5 3 10 5 4 10 7 7 3 2 5 4 5 10 10 7 7 2 5 10 4 3 10 7 7 2 4 2 3 4 10 10 10 7 7 2 3 10 10 10 7 7 3 2 4 10 10 10 7 7 2 4 10 3 4 10 7 7 2 3 3 3 3 3 10 10 10 7 7 2 10 10 10 7 7 2 3 4 2 3 3 3 10 10 10 7 7 2 4 10 4 10 7 7 2 3 3 3 3 10 10 10 7 7 2 10 10 10 7 7 2 4 10 10 10 7 7 2 4 10 10 10 7 7 2 4 3 3 3 3 3 2 4 10 10 10 7 7 2 10 10 4 10 7 7 2 5 5 10 10 7 7 2 4 5 10 2 4 5 10 7 7 2 3 3 3 3 4 5 4 10 10 10 7 7 2 5 10 10 5 10 7 7 2 3 3 3 3 4 3 10 10 10 7 7 2 4 10 10 4 3 10 7 7 2 3 3 3 2 10 3 3 3 10 10 7 7 2 10 10 10 10 7 7 2 3 3 3 3 10 10 2 10 10 7 7 2 10 4 10 10 10 10 10 10 7 7 2 4 3 3 3 3 3 4 4 4 10 10 7 7 10 10 10 7 7 2 10 10 7 7 4 10 4 10 10 7 7 2 3 3 3 4 3 4 10 10 7 7 10 10 10 7 7 2 5 10 10 7 7 5 4 5 10 2 10 10 7 7 2 4 5 4 5 4 3 10 10 7 7 3 4 5 5 10 10 10 7 7 2 3 3 3 3 4 10 10 7 7 4 10 10 10 7 7 2 4 4 3 3 10 10 7 7 3 3 10 3 3 10 10 7 7 2 3 3 10 3 3 10 7 7 3 3 10 2 4 10 10 7 7 2 3 3 3 3 4 4 10 10 7 7 4 10 4 10 10 7 7 2 10 10 7 7 4 10 4 10 10 7 7 2 3 3 3 3 3 4 5 4 10 10 7 7 5 10 5 10 10 7 7 2 3 3 3 3 3 5 5 10 10 7 7 5 10 5 10 10 7 7 2 3 4 4 3 3 3 10 10 7 7 4 4 4 10 10 10 7 7 2 4 3 10 10 7 7 4 3 3 3 10 4 3 10 10 7 7 2 3 3 10 10 7 7 3 3 3 3 3 3)) :lref (quotelport (quotelfields (quote ((57 90 135) (42 70 67) (35 60 67) (55 64 97) (49 55 164) (39 82 672) (65 45 59) (66 68 95) (70 63 176) (58 103 232) (67 54 133) (61 110 111) (65 102 94) (46 53 1041) (37 70 67) (42 90 67) (49 41 54) (55 49 76) (72 113 665) (42 40 67) (42 80 68) (35 60 68) (55 56 324) (49 56 324) (46 85 562) (37 80 68) (42 90 68) (55 60 71) (49 51 63) (70 119 181) (65 93 157) (42 50 68) (39 82 60) (42 80 67) (35 60 67) (59 64 97) (53 55 165) (38 76 686) (68 118 173) (74 82 111) (69 106 781) (37 70 68) (42 90 68) (53 41 54) (59 49 76) (69 49 79) (42 40 68) (42 80 68) (35 60 68) (59 56 325) (53 56 325) (74 68 203) (45 61 649) (61 92 162) (62 89 127) (37 85 67) (42 90 67) (59 60 70) (53 51 62) (64 82 179) (65 96 162) (57 93 157) (42 50 67) (69 47 67) (42 70 68) (35 60 68) (55 64 97) (49 55 165) (39 89 668) (89 45 171) (77 35 100) (55 32 157) (58 110 221) (83 36 56) (49 52 152) (63 75 162) (84 46 114) (65 96 148) (61 112 133) (89 55 103) (84 74 60) (77 55 70) (55 59 76) (49 60 71) (37 70 68) (42 80 68) (49 41 54) (55 49 76) (65 82 178) (67 76 138) (68 108 92) (42 40 68) (72 110 251) (42 80 67) (35 60 67) (55 56 324) (49 56 324) (34 82 570) (70 95 133) (37 80 68) (42 80 68) (55 60 70) (49 51 62) (65 113 195) (68 116 19) (42 50 67) (69 112 1024) (42 70 68) (59 64 98) (53 55 165) (38 69 414) (64 45 59) (65 68 95) (69 63 176) (45 53 1041) (37 80 67) (42 70 67) (53 41 54) (59 49 75) (42 40 68) (38 69 141) (42 80 68) (35 60 68) (59 56 324) (53 56 324) (45 68 146) (45 78 114) (42 80 68) (35 60 68) (59 60 71) (53 51 63) (40 77 325) (42 50 67) (57 96 170) (42 80 67) (35 60 67) (55 64 97) (49 55 165) (39 78 635) (65 45 59) (66 68 95) (70 63 176) (58 103 243) (67 54 133) (61 103 113) (46 53 1041) (37 70 68) (42 90 68) (49 41 54) (55 49 76) (65 105 168) (42 40 68) (72 105 491) (42 80 68) (35 60 68) (55 56 325) (49 56 325) (34 82 581) (37 85 67) (42 90 67) (55 60 70) (49 51 62) (70 114 211) (42 50 67) (27 60 29) (65 77 122) (42 70 68) (35 60 68) (59 64 97) (53 55 165) (38 72 543) (81 52 54) (86 32 54) (68 115 173) (69 111 825) (37 70 68) (42 90 68) (53 41 54) (59 49 76) (69 39 73) (77 36 62) (71 31 73) (74 33 73) (86 38 68) (81 39 62) (45 82 149) (42 40 68) (42 80 67) (35 60 67) (59 56 324) (53 56 324) (50 74 151) (71 23 157) (69 30 146) (77 19 157) (74 19 146) (86 23 149) (81 40 149) (69 62 192) (45 100 132) (70 91 121) (71 41 54) (69 51 54) (74 51 51) (77 47 46) (81 45 63) (86 26 52) (37 80 68) (42 90 68) (59 60 70) (53 51 62) (38 89 305) (73 87 141) (74 94 170) (42 50 67) (42 80 68) (35 60 68) (55 64 98) (50 55 165) (40 82 649) (69 112 121) (74 67 170) (72 107 162) (70 105 87) (40 50 73) (69 34 89) (37 70 67) (42 90 67) (50 41 54) (55 49 75) (69 85 89) (70 63 165) (82 67 113) (70 65 205) (70 106 83) (69 77 92) (67 86 124) (72 99 100) (42 40 67) (42 80 68) (35 60 68) (55 64 97) (49 55 165) (33 82 649) (75 52 54) (82 32 54) (63 123 143) (37 85 68) (42 90 68) (49 41 54) (55 49 76) (61 127 219) (63 39 73) (73 36 62) (67 31 73) (70 33 73) (82 38 68) (75 39 62) (42 50 68) (62 115 1148) (42 80 67) (35 60 67) (59 64 97) (53 55 164) (38 89 667) (93 45 170) (81 35 100) (59 32 156) (87 36 57) (53 52 151) (88 46 113) (93 55 102) (88 74 59) (81 55 71) (59 59 76) (53 60 70) (42 90 67) (53 41 54) (59 49 76) (42 60 67) (38 40 67) (42 70 68) (35 60 68) (59 56 325) (53 56 325) (45 82 570) (38 50 68) (42 80 67) (59 60 70) (53 51 62) (42 60 68) (38 60 68) (57 86 143) (42 70 67) (35 60 67) (55 64 97) (49 55 165) (39 89 667) (39 59 73) (65 68 70) (70 67 102) (61 64 79) (58 112 203) (61 99 127) (65 80 138) (37 70 68) (42 80 68) (49 41 54) (55 49 76) (72 110 684) (42 40 68) (42 80 67) (35 60 67) (55 56 324) (49 56 324) (34 82 571) (58 49 421) (77 63 81) (82 75 492) (49 54 441) (70 67 490) (37 80 67) (42 80 67) (55 60 70) (49 51 62) (70 110 192) (42 50 67) (65 85 156) (49 30 43) (46 54 68) (35 60 68) (59 64 97) (53 55 165) (38 82 673) (50 59 73) (69 68 70) (74 67 103) (65 64 78) (68 118 197) (69 110 794) (37 80 67) (42 70 67) (53 41 54) (59 49 75) (42 40 68) (42 80 67) (35 60 67) (59 56 324) (53 56 324) (45 85 562) (62 49 421) (81 63 81) (86 75 492) (53 54 441) (74 67 489) (73 97 217) (74 85 100) (42 80 68) (35 60 68) (59 60 70) (53 51 62) (76 99 173) (57 82 146) (42 50 67) (38 82 59) (74 92 127) (53 30 43) (42 70 68) (35 60 68) (55 64 98) (49 55 165) (58 106 200) (39 82 673) (65 45 59) (66 68 95) (70 63 176) (67 54 133) (61 114 130) (65 94 100) (46 53 1041) (73 94 122) (37 70 67) (42 80 67) (49 41 54) (55 49 75) (72 113 552) (42 40 67) (42 80 68) (35 60 68) (55 56 324) (49 56 324) (46 85 562) (70 119 157) (37 80 68) (42 80 68) (55 60 71) (49 51 63) (65 97 192) (42 50 68) (39 82 60) (42 80 67) (59 64 97) (53 55 165) (38 78 378) (68 113 49) (93 45 170) (81 35 100) (59 32 156) (87 36 57) (53 52 151) (69 110 1094) (88 46 113) (93 55 103) (88 74 59) (81 55 70) (59 59 75) (53 60 70) (37 70 68) (42 90 68) (53 41 54) (59 49 76) (40 80 354) (42 40 68) (42 80 68) (35 60 68) (59 56 325) (53 56 325) (41 75 379) (37 90 67) (42 90 67) (59 60 70) (53 51 62) (45 76 324) (57 84 154) (42 50 67) (46 54 68) (35 60 68) (55 64 97) (49 55 165) (39 78 635) (58 112 297) (72 69 86) (39 36 1198) (79 51 1152) (61 37 1262) (73 44 1076) (61 116 135) (37 80 68) (42 70 68) (49 41 54) (55 49 76) (65 90 165) (72 102 498) (42 40 67) (42 80 67) (35 60 67) (55 56 324) (49 56 324) (34 82 581) (42 80 68) (35 60 68) (55 60 70) (49 51 62) (70 111 229) (42 50 68) (27 60 30) (65 89 135) (42 80 68) (35 60 68) (59 64 98) (53 55 165) (38 78 635) (93 45 170) (81 35 100) (59 32 157) (87 36 57) (53 52 151) (68 118 184) (88 46 114) (93 55 103) (88 74 59) (81 55 70) (59 59 76) (69 115 789) (53 60 70) (37 70 67) (42 90 67) (53 41 54) (59 49 75) (42 40 67) (42 80 68) (35 60 68) (59 56 324) (53 56 324) (45 82 581) (73 92 162) (74 89 127) (37 85 68) (42 90 68) (59 60 71) (53 51 62) (76 82 178) (77 96 162) (42 50 68) (26 60 30) (42 70 67) (35 60 67) (55 64 97) (50 55 165) (40 81 170) (69 110 149) (75 69 87) (40 58 616) (79 51 613) (50 48 613) (79 86 160) (76 44 524) (74 80 163) (40 71 109) (70 107 159) (37 70 68) (42 80 68) (50 41 54) (55 49 76) (46 73 324) (70 83 187) (69 96 103) (70 98 76) (69 60 81) (42 40 67) (69 74 138) (67 85 102) (42 80 68) (35 60 68) (55 64 98) (49 55 165) (33 70 649) (73 67 170) (63 120 149) (45 50 73) (37 80 67) (42 80 67) (49 41 54) (55 49 75) (61 117 209) (70 63 165) (82 67 113) (62 108 1224) (42 50 68) (42 80 68) (59 64 97) (53 55 165) (38 78 635) (37 70 68) (42 90 68) (53 41 54) (59 49 76) (42 50 68) (74 89 111) (42 80 67) (59 56 324) (53 56 324) (33 82 581) (86 84 198) (74 76 81) (38 30 67) (37 85 67) (42 90 67) (38 55 67) (59 60 70) (53 51 62) (42 50 68) (26 60 29) (51 70 68) (55 64 98) (48 55 165) (33 70 181) (72 119 424) (38 60 68) (21 77 70) (81 76 83) (51 90 67) (37 60 67) (42 90 67) (48 41 54) (55 49 75) (31 62 318) (75 26 122) (51 70 68) (38 40 68) (51 80 67) (55 56 324) (48 56 324) (29 68 346) (63 56 70) (69 117 267) (72 67 51) (67 58 70) (81 63 78) (38 50 67) (51 90 68) (37 70 68) (42 100 68) (55 60 70) (48 51 62) (27 64 289) (67 106 190) (51 70 68) (39 79 87) (51 80 67) (60 64 97) (54 55 164) (38 71 378) (66 106 133) (75 82 110) (65 84 81) (75 118 119) (51 90 67) (37 70 67) (42 70 67) (54 41 54) (60 49 76) (40 68 349) (66 66 100) (69 80 111) (69 49 79) (51 70 68) (72 102 71) (74 117 181) (51 90 68) (60 56 325) (54 56 325) (75 68 203) (41 75 341) (77 104 219) (72 115 129) (75 67 57) (51 90 67) (42 100 67) (60 60 70) (54 51 62) (42 68 264) (77 97 318) (51 70 67) (69 100 98) (69 47 68) (51 70 67) (58 64 97) (53 55 165) (43 85 119) (70 121 165) (43 73 141) (74 82 111) (67 108 338) (51 90 68) (37 60 68) (42 90 68) (53 41 54) (58 49 76) (45 64 324) (67 49 79) (51 70 68) (38 40 68) (51 80 68) (58 56 325) (53 56 325) (74 68 203) (46 75 322) (69 115 157) (51 90 67) (37 70 67) (42 100 67) (58 60 70) (53 51 62) (50 67 324) (66 120 138) (51 70 67) (67 47 67) (67 117 765) (51 80 68) (58 64 97) (53 55 165) (43 71 384) (78 69 86) (43 58 616) (82 51 614) (53 48 614) (79 44 525) (51 90 68) (37 70 68) (42 80 68) (53 41 55) (58 49 76) (50 70 325) (51 70 68) (38 40 68) (51 80 67) (58 64 97) (52 55 165) (36 69 200) (36 56 119) (67 82 83) (36 81 70) (70 75 73) (84 64 59) (76 72 45) (51 90 68) (37 70 68) (42 100 68) (52 41 54) (58 49 76) (42 62 324) (69 109 140) (51 70 68) (70 127 695) (51 70 68) (58 64 98) (53 55 165) (43 76 349) (43 38 45) (58 51 57) (55 48 62) (65 51 46) (51 90 67) (37 70 67) (42 100 67) (53 41 54) (58 49 75) (55 59 362) (51 50 67) (38 40 67) (51 80 68) (58 56 324) (53 56 324) (49 71 333) (67 104 187) (51 90 68) (37 70 68) (42 100 68) (58 60 71) (53 51 63) (46 77 325) (65 119 170) (51 50 67) (38 40 67) (51 80 67) (58 64 97) (52 55 165) (36 70 181) (64 115 246) (75 69 87) (48 36 1197) (82 51 1151) (64 37 1262) (76 44 1076) (24 77 70) (73 121 119) (51 90 68) (37 70 68) (42 70 68) (52 41 54) (58 49 76) (34 62 319) (51 70 68) (38 40 68) (72 115 365) (51 90 68) (58 56 325) (52 56 325) (33 68 346) (75 116 219) (72 41 116) (51 90 67) (42 100 67) (58 60 70) (52 51 62) (31 64 289) (70 119 141) (73 78 163) (51 70 67) (42 79 86) (68 98 65) (75 49 106) (51 80 68) (57 64 97) (50 55 165) (41 69 324) (41 59 73) (65 68 70) (72 67 103) (62 64 78) (69 104 168) (77 80 238) (65 116 346) (51 90 68) (37 70 68) (42 80 68) (50 41 54) (57 49 76) (48 68 327) (74 95 262) (51 60 67) (38 40 67) (72 31 76) (51 80 67) (57 56 324) (50 56 324) (45 63 327) (60 49 421) (77 63 81) (84 75 492) (50 54 441) (67 104 238) (72 67 489) (51 100 68) (37 80 68) (42 100 68) (57 60 70) (50 51 62) (41 81 319) (65 95 122) (51 70 68) (38 60 68) (69 118 900) (50 30 43) (35 90 68) (55 64 98) (50 55 165) (40 78 292) (74 90 184) (76 87 181) (46 74 156) (28 55 87) (38 70 67) (74 43 38) (46 42 49) (76 43 43) (51 90 67) (42 80 67) (50 41 54) (55 49 75) (34 78 324) (51 80 68) (38 60 68) (51 80 68) (38 80 68) (55 64 97) (49 55 165) (33 77 173) (45 38 46) (55 51 57) (51 48 63) (61 51 46) (38 50 68) (35 80 68) (33 70 94) (51 90 68) (42 100 68) (49 41 54) (55 49 76) (39 63 325) (38 40 68) (57 96 133) (51 80 67) (38 60 67) (49 40 67) (42 70 67) (38 50 67) (35 60 67) (55 64 97) (49 55 164) (39 89 667) (58 117 197) (72 69 87) (39 36 1197) (79 51 1151) (61 37 1262) (73 44 1076) (61 104 95) (65 95 125) (72 110 754) (37 80 68) (42 80 68) (49 41 54) (55 49 76) (42 50 68) (42 80 68) (35 60 68) (55 56 325) (49 56 325) (34 82 570) (37 80 67) (42 90 67) (55 60 70) (49 51 62) (70 111 192) (42 50 68) (65 92 97) (42 70 67) (35 60 67) (59 64 97) (53 55 165) (38 78 635) (64 45 60) (65 68 94) (69 63 175) (68 124 184) (45 53 1040) (69 110 803) (37 70 68) (42 80 68) (53 41 54) (59 49 76) (42 40 68) (42 80 67) (35 60 67) (59 56 324) (53 56 324) (45 82 581) (67 45 113) (37 80 67) (42 80 67) (59 60 70) (53 51 62) (73 65 179) (57 93 146) (79 89 135) (42 50 67) (26 60 29) (42 70 68) (35 60 68) (55 64 98) (49 55 165) (39 76 687) (58 116 200) (76 76 106) (61 103 129) (77 84 162) (65 99 100) (82 76 83) (37 70 67) (42 90 67) (49 41 54) (55 49 75) (77 26 121) (72 108 573) (75 76 138) (77 101 146) (42 40 68) (42 80 67) (35 60 67) (55 56 324) (49 56 324) (46 61 648) (65 56 71) (73 67 51) (67 58 70) (82 63 78) (70 120 160) (37 80 68) (42 90 68) (55 60 70) (49 51 62) (65 90 186) (42 50 68) (42 80 68) (35 60 68) (59 64 98) (53 55 165) (38 82 673) (68 116 30) (69 106 1114) (77 76 102) (81 64 113) (37 70 67) (42 90 67) (53 41 54) (59 49 75) (80 50 102) (76 44 97) (42 40 68) (77 83 97) (81 64 113) (42 80 68) (35 60 68) (59 56 324) (53 56 324) (45 85 562) (76 50 216) (80 71 189) (37 90 68) (81 66 114) (77 85 98) (42 90 68) (59 60 71) (53 51 63) (77 80 92) (81 61 100) (42 50 67) (38 82 60) (57 104 149) (42 70 67) (35 60 67) (55 64 97) (49 55 165) (39 89 667) (39 38 46) (55 51 56) (51 48 62) (61 51 46) (58 115 229) (61 102 92) (37 80 68) (42 70 68) (49 41 54) (55 49 76) (65 99 106) (42 40 67) (72 110 378) (42 80 68) (35 60 68) (55 56 325) (49 56 325) (34 82 571) (42 80 67) (35 60 67) (55 60 70) (49 51 62) (70 123 159) (42 50 68) (65 78 135) (42 70 68) (35 60 68) (59 64 97) (53 55 165) (38 76 687) (65 49 81) (53 40 81) (38 45 68) (59 46 46) (57 50 56) (68 116 138) (72 113 129) (69 120 733) (37 80 68) (42 90 68) (53 41 54) (59 49 76) (73 96 129) (42 40 67) (70 108 135) (42 70 67) (35 60 67) (59 56 324) (53 56 324) (45 61 648) (81 73 59) (77 72 43) (86 75 44) (74 73 33) (71 54 46) (69 88 151) (67 83 116) (37 78 68) (42 90 68) (59 60 70) (53 51 62) (65 79 192) (42 50 68) (61 67 111) (42 80 68) (35 60 68) (55 64 98) (50 55 165) (40 82 649) (40 56 119) (69 117 159) (70 115 89) (67 75 73) (82 64 60) (74 72 46) (37 70 67) (42 90 67) (50 41 54) (55 49 75) (69 91 232) (70 91 59) (67 79 94) (42 40 67) (42 80 68) (35 60 68) (55 64 97) (49 55 165) (33 82 649) (63 127 146) (45 43 24) (37 85 68) (42 90 68) (49 41 54) (55 49 76) (61 127 213) (67 55 49) (73 52 146) (67 43 100) (42 50 68) (62 114 1322) (61 55 79) (42 80 67) (35 60 67) (59 64 97) (53 55 165) (38 72 619) (81 52 54) (86 32 54) (37 70 68) (42 90 68) (53 41 54) (59 49 76) (69 39 73) (77 36 62) (71 31 73) (74 33 72) (86 38 67) (81 39 62)))))) (setf (name rep) "a night in tunesia") rep)))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (scale approx fontsize staff cmnpref deltapict outport inport zoom notechancolor? grillestep mode winsize winpos palette-mode obj-mode show-stems player)) (list nil 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) 0 0 1 nil 1000 0 18350450 2621450 0 0 (quote t) (quote :midishare))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "tunesia-short.mid" (quote midifile) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil))) (om-make-point 93 48) (om-make-point 50 72) (let ((newobj nil)) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "") (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (scale approx fontsize staff cmnpref deltapict outport inport zoom notechancolor? grillestep mode winsize winpos palette-mode obj-mode show-stems player)) (list nil 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) 0 0 1 nil 1000 0 18350450 2621450 0 0 (quote t) (quote :midishare))) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 224 32) (quote "Using EventMidi-seq") "" (om-make-point 377 9) nil (om-make-color 0 0 0) (om-make-font "Geneva" 14 :family "Geneva" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((27 0 1 0 nil 0) (0 0 3 0 nil 0) (17 1 6 1 nil 0) (17 2 6 2 nil 0) (17 3 6 3 nil 0) (17 4 6 4 nil 0) (5 0 6 5 nil 0) (17 6 6 6 nil 0) (15 0 7 0 nil 0) (10 0 9 0 nil 0) (15 0 10 0 nil 0) (11 0 10 1 nil 0) (3 0 10 2 nil 0) (6 0 11 0 nil 0) (26 0 15 0 ((om-make-point 341 246) (om-make-point 341 275) (om-make-point 192 275) (om-make-point 189 343)) 0) (14 0 15 1 nil 0) (19 0 17 0 nil 0) (26 0 19 0 nil 0) (18 0 19 1 nil 0) (1 0 22 0 nil 0) (20 0 22 1 nil 0) (22 0 26 0 nil 0))) nil 6.110101))
