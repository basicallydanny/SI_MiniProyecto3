; OM File Header - Saved 2024/09/23 20:42:12
; (7.04 :meth (om-make-point 24 24) (om-make-point 50 50) (om-make-point 500 400) "" 235 0 "2024/09/23 20:42:12" "2024/09/23 20:42:12")
; End File Header
(in-package :om)(load-lib-for-first (quote nil))(om-load-method-ws2 (quote x-append) 235 "Appends lists or atoms together to form a new list.$$Ex. (x-append '(1 2 3) '(4 5)) => (1 2 3 4 5)$Ex. (x-append 1 '(4 5)) => (1 4 5)$Ex. (x-append '(1 2 3) 4) => (1 2 3 4)$$This function also works with additional elements.$$Ex. (x-append '(1 2 3) 4 '(5 6 7)) => (1 2 3 4 5 6 7)$$" (quote ((let ((box (om-load-boxout "output" 0 (om-make-point 5 240) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxtypein "lst?" (quote t) 2 (om-make-point 105 45) "no documentation" (quote &rest) (quote t) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxtypein "l2?" (quote t) 1 (om-make-point 55 45) "no documentation" (quote nil) (quote t) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxtypein "l1?" (quote t) 0 (om-make-point 5 45) "no documentation" (quote nil) (quote t) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote nil) (quote ((l1? t) (l2? t) &rest lst?)) (quote ((quote t) (quote t) (quote t))) (quote ("no documentation" "no documentation" "no documentation")) (quote nil) (quote nil) 1 nil (quote ("2024/09/23 20:42:12" "2024/09/23 20:42:12")))